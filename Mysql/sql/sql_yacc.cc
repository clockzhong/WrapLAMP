/* A Bison parser, made by GNU Bison 2.7.  */

/* Bison implementation for Yacc-like parsers in C
   
      Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.
   
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.
   
   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.7"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yylval          MYSQLlval
#define yychar          MYSQLchar
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs
#define yylloc          MYSQLlloc

/* Copy the first part of user declarations.  */
/* Line 371 of yacc.c  */
#line 24 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "partition_info.h"                   /* partition_info */
#include "sql_partition.h"                    /* mem_alloc_error */
#include "auth_common.h"                      /* *_ACL */
#include "password.h"       /* my_make_scrambled_password_323, my_make_scrambled_password */
#include "sql_class.h"      /* Key_part_spec, enum_filetype */
#include "rpl_slave.h"
#include "rpl_msr.h"       /* multisource replication */
#include "rpl_filter.h"
#include "log_event.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_instr.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_servers.h"
#include "event_parse_data.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "opt_explain_traditional.h"
#include "opt_explain_json.h"
#include "rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql_show_status.h"                 // build_show_session_status, ...
#include "parse_location.h"
#include "parse_tree_helpers.h"
#include "lex_token.h"
#include "item_cmpfunc.h"
#include "item_geofunc.h"
#include "item_json_func.h"
#include "sql_plugin.h"                      // plugin_is_ready
#include "parse_tree_hints.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, (char*) (A));      \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    my_syntax_error(ER(ER_SYNTAX_ERROR));\
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYTHD->mem_root)


/**
  Parse_tree_node::contextualize_() function call wrapper
*/
#define TMP_CONTEXTUALIZE(x)        \
  do                                \
  {                                 \
    Parse_context pc(YYTHD, Select);\
    if ((x)->contextualize_(&pc))   \
      MYSQL_YYABORT;                \
  } while(0)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    Parse_context pc(YYTHD, Select);                    \
    if (YYTHD->is_error() || (x)->contextualize(&pc))   \
      MYSQL_YYABORT;                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                  \
  do                                                   \
  {                                                    \
    Parse_context pc(YYTHD, Select);                   \
    if (YYTHD->is_error() || (x)->itemize(&pc, (y)))   \
      MYSQL_YYABORT;                                   \
  } while(0)

/**
  PT_statement::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                     \
  do                                                    \
  {                                                     \
    if (YYTHD->is_error())                              \
      MYSQL_YYABORT;                                    \
    Lex->m_sql_cmd= (x)->make_cmd(YYTHD);               \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use my_syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(YYLTYPE *, THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER(ER_SYNTAX_ERROR);
  my_syntax_error(s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(THD *thd, const LEX_STRING *name)
{
  if (find_native_function_builder(thd, *name))
    return true;

  if (is_lex_native_function(name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_STR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static bool add_create_index_prepare (LEX *lex, Table_ident *table)
{
  lex->sql_command= SQLCOM_CREATE_INDEX;
  if (!lex->current_select()->add_table_to_list(lex->thd, table, NULL,
                                              TL_OPTION_UPDATING,
                                              TL_READ_NO_INSERT,
                                              MDL_SHARED_UPGRADABLE))
    return TRUE;
  lex->alter_info.reset();
  lex->alter_info.flags= Alter_info::ALTER_ADD_INDEX;
  lex->col_list.empty();
  lex->change= NullS;
  return FALSE;
}

static bool add_create_index (LEX *lex, keytype type,
                              const LEX_STRING &name,
                              KEY_CREATE_INFO *info= NULL, bool generated= 0)
{
  Key *key;
  key= new Key(type, name, info ? info : &lex->key_create_info, generated,
               lex->col_list);
  if (key == NULL)
    return TRUE;

  lex->alter_info.key_list.push_back(key);
  lex->col_list.empty();
  return FALSE;
}

/**
  Compare a LEX_USER against the current user as defined by the exact user and
  host used during authentication.

  @param user A pointer to a user which needs to be matched against the
              current.

  @see SET PASSWORD rules

  @retval true The specified user is the authorized user
  @retval false The user doesn't match
*/

bool match_authorized_user(Security_context *ctx, LEX_USER *user)
{
  if(user->user.str && my_strcasecmp(system_charset_info,
                                     ctx->priv_user().str,
                                     user->user.str) == 0)
  {
    /*
      users match; let's compare hosts.
      1. first compare with the host we actually authorized,
      2. then see if we match the host mask of the priv_host
    */
    if (user->host.str && my_strcasecmp(system_charset_info,
                                        user->host.str,
                                        ctx->priv_host().str) == 0)
    {
      /* specified user exactly match the authorized user */
      return true;
    }
  }
  return false;
}

static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "parse_tree_nodes.h"
#include "parse_tree_items.h"


/* Line 371 of yacc.c  */
#line 503 "/export/home/pb2/build/sb_0-17208410-1448824664.49/dist_GPL/sql/sql_yacc.cc"

# ifndef YY_NULL
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULL nullptr
#  else
#   define YY_NULL 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_0_17208410_1448824664_49_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_0_17208410_1448824664_49_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ABORT_SYM = 258,
     ACCESSIBLE_SYM = 259,
     ACCOUNT_SYM = 260,
     ACTION = 261,
     ADD = 262,
     ADDDATE_SYM = 263,
     AFTER_SYM = 264,
     AGAINST = 265,
     AGGREGATE_SYM = 266,
     ALGORITHM_SYM = 267,
     ALL = 268,
     ALTER = 269,
     ALWAYS_SYM = 270,
     ANALYSE_SYM = 271,
     ANALYZE_SYM = 272,
     AND_AND_SYM = 273,
     AND_SYM = 274,
     ANY_SYM = 275,
     AS = 276,
     ASC = 277,
     ASCII_SYM = 278,
     ASENSITIVE_SYM = 279,
     AT_SYM = 280,
     AUTOEXTEND_SIZE_SYM = 281,
     AUTO_INC = 282,
     AVG_ROW_LENGTH = 283,
     AVG_SYM = 284,
     BACKUP_SYM = 285,
     BEFORE_SYM = 286,
     BEGIN_SYM = 287,
     BETWEEN_SYM = 288,
     BIGINT = 289,
     BINARY = 290,
     BINLOG_SYM = 291,
     BIN_NUM = 292,
     BIT_AND = 293,
     BIT_OR = 294,
     BIT_SYM = 295,
     BIT_XOR = 296,
     BLOB_SYM = 297,
     BLOCK_SYM = 298,
     BOOLEAN_SYM = 299,
     BOOL_SYM = 300,
     BOTH = 301,
     BTREE_SYM = 302,
     BY = 303,
     BYTE_SYM = 304,
     CACHE_SYM = 305,
     CALL_SYM = 306,
     CASCADE = 307,
     CASCADED = 308,
     CASE_SYM = 309,
     CAST_SYM = 310,
     CATALOG_NAME_SYM = 311,
     CHAIN_SYM = 312,
     CHANGE = 313,
     CHANGED = 314,
     CHANNEL_SYM = 315,
     CHARSET = 316,
     CHAR_SYM = 317,
     CHECKSUM_SYM = 318,
     CHECK_SYM = 319,
     CIPHER_SYM = 320,
     CLASS_ORIGIN_SYM = 321,
     CLIENT_SYM = 322,
     CLOSE_SYM = 323,
     COALESCE = 324,
     CODE_SYM = 325,
     COLLATE_SYM = 326,
     COLLATION_SYM = 327,
     COLUMNS = 328,
     COLUMN_SYM = 329,
     COLUMN_FORMAT_SYM = 330,
     COLUMN_NAME_SYM = 331,
     COMMENT_SYM = 332,
     COMMITTED_SYM = 333,
     COMMIT_SYM = 334,
     COMPACT_SYM = 335,
     COMPLETION_SYM = 336,
     COMPRESSED_SYM = 337,
     COMPRESSION_SYM = 338,
     CONCURRENT = 339,
     CONDITION_SYM = 340,
     CONNECTION_SYM = 341,
     CONSISTENT_SYM = 342,
     CONSTRAINT = 343,
     CONSTRAINT_CATALOG_SYM = 344,
     CONSTRAINT_NAME_SYM = 345,
     CONSTRAINT_SCHEMA_SYM = 346,
     CONTAINS_SYM = 347,
     CONTEXT_SYM = 348,
     CONTINUE_SYM = 349,
     CONVERT_SYM = 350,
     COUNT_SYM = 351,
     CPU_SYM = 352,
     CREATE = 353,
     CROSS = 354,
     CUBE_SYM = 355,
     CURDATE = 356,
     CURRENT_SYM = 357,
     CURRENT_USER = 358,
     CURSOR_SYM = 359,
     CURSOR_NAME_SYM = 360,
     CURTIME = 361,
     DATABASE = 362,
     DATABASES = 363,
     DATAFILE_SYM = 364,
     DATA_SYM = 365,
     DATETIME = 366,
     DATE_ADD_INTERVAL = 367,
     DATE_SUB_INTERVAL = 368,
     DATE_SYM = 369,
     DAY_HOUR_SYM = 370,
     DAY_MICROSECOND_SYM = 371,
     DAY_MINUTE_SYM = 372,
     DAY_SECOND_SYM = 373,
     DAY_SYM = 374,
     DEALLOCATE_SYM = 375,
     DECIMAL_NUM = 376,
     DECIMAL_SYM = 377,
     DECLARE_SYM = 378,
     DEFAULT = 379,
     DEFAULT_AUTH_SYM = 380,
     DEFINER_SYM = 381,
     DELAYED_SYM = 382,
     DELAY_KEY_WRITE_SYM = 383,
     DELETE_SYM = 384,
     DESC = 385,
     DESCRIBE = 386,
     DES_KEY_FILE = 387,
     DETERMINISTIC_SYM = 388,
     DIAGNOSTICS_SYM = 389,
     DIRECTORY_SYM = 390,
     DISABLE_SYM = 391,
     DISCARD = 392,
     DISK_SYM = 393,
     DISTINCT = 394,
     DIV_SYM = 395,
     DOUBLE_SYM = 396,
     DO_SYM = 397,
     DROP = 398,
     DUAL_SYM = 399,
     DUMPFILE = 400,
     DUPLICATE_SYM = 401,
     DYNAMIC_SYM = 402,
     EACH_SYM = 403,
     ELSE = 404,
     ELSEIF_SYM = 405,
     ENABLE_SYM = 406,
     ENCLOSED = 407,
     END = 408,
     ENDS_SYM = 409,
     END_OF_INPUT = 410,
     ENGINES_SYM = 411,
     ENGINE_SYM = 412,
     ENUM = 413,
     EQ = 414,
     EQUAL_SYM = 415,
     ERROR_SYM = 416,
     ERRORS = 417,
     ESCAPED = 418,
     ESCAPE_SYM = 419,
     EVENTS_SYM = 420,
     EVENT_SYM = 421,
     EVERY_SYM = 422,
     EXCHANGE_SYM = 423,
     EXECUTE_SYM = 424,
     EXISTS = 425,
     EXIT_SYM = 426,
     EXPANSION_SYM = 427,
     EXPIRE_SYM = 428,
     EXPORT_SYM = 429,
     EXTENDED_SYM = 430,
     EXTENT_SIZE_SYM = 431,
     EXTRACT_SYM = 432,
     FALSE_SYM = 433,
     FAST_SYM = 434,
     FAULTS_SYM = 435,
     FETCH_SYM = 436,
     FILE_SYM = 437,
     FILE_BLOCK_SIZE_SYM = 438,
     FILTER_SYM = 439,
     FIRST_SYM = 440,
     FIXED_SYM = 441,
     FLOAT_NUM = 442,
     FLOAT_SYM = 443,
     FLUSH_SYM = 444,
     FOLLOWS_SYM = 445,
     FORCE_SYM = 446,
     FOREIGN = 447,
     FOR_SYM = 448,
     FORMAT_SYM = 449,
     FOUND_SYM = 450,
     FROM = 451,
     FULL = 452,
     FULLTEXT_SYM = 453,
     FUNCTION_SYM = 454,
     GE = 455,
     GENERAL = 456,
     GENERATED = 457,
     GROUP_REPLICATION = 458,
     GEOMETRYCOLLECTION = 459,
     GEOMETRY_SYM = 460,
     GET_FORMAT = 461,
     GET_SYM = 462,
     GLOBAL_SYM = 463,
     GRANT = 464,
     GRANTS = 465,
     GROUP_SYM = 466,
     GROUP_CONCAT_SYM = 467,
     GT_SYM = 468,
     HANDLER_SYM = 469,
     HASH_SYM = 470,
     HAVING = 471,
     HELP_SYM = 472,
     HEX_NUM = 473,
     HIGH_PRIORITY = 474,
     HOST_SYM = 475,
     HOSTS_SYM = 476,
     HOUR_MICROSECOND_SYM = 477,
     HOUR_MINUTE_SYM = 478,
     HOUR_SECOND_SYM = 479,
     HOUR_SYM = 480,
     IDENT = 481,
     IDENTIFIED_SYM = 482,
     IDENT_QUOTED = 483,
     IF = 484,
     IGNORE_SYM = 485,
     IGNORE_SERVER_IDS_SYM = 486,
     IMPORT = 487,
     INDEXES = 488,
     INDEX_SYM = 489,
     INFILE = 490,
     INITIAL_SIZE_SYM = 491,
     INNER_SYM = 492,
     INOUT_SYM = 493,
     INSENSITIVE_SYM = 494,
     INSERT = 495,
     INSERT_METHOD = 496,
     INSTALL_SYM = 497,
     INTERVAL_SYM = 498,
     INTO = 499,
     INT_SYM = 500,
     INVOKER_SYM = 501,
     IN_SYM = 502,
     IO_AFTER_GTIDS = 503,
     IO_BEFORE_GTIDS = 504,
     IO_SYM = 505,
     IPC_SYM = 506,
     IS = 507,
     ISOLATION = 508,
     ISSUER_SYM = 509,
     ITERATE_SYM = 510,
     JOIN_SYM = 511,
     JSON_SEPARATOR_SYM = 512,
     JSON_SYM = 513,
     KEYS = 514,
     KEY_BLOCK_SIZE = 515,
     KEY_SYM = 516,
     KILL_SYM = 517,
     LANGUAGE_SYM = 518,
     LAST_SYM = 519,
     LE = 520,
     LEADING = 521,
     LEAVES = 522,
     LEAVE_SYM = 523,
     LEFT = 524,
     LESS_SYM = 525,
     LEVEL_SYM = 526,
     LEX_HOSTNAME = 527,
     LIKE = 528,
     LIMIT = 529,
     LINEAR_SYM = 530,
     LINES = 531,
     LINESTRING = 532,
     LIST_SYM = 533,
     LOAD = 534,
     LOCAL_SYM = 535,
     LOCATOR_SYM = 536,
     LOCKS_SYM = 537,
     LOCK_SYM = 538,
     LOGFILE_SYM = 539,
     LOGS_SYM = 540,
     LONGBLOB = 541,
     LONGTEXT = 542,
     LONG_NUM = 543,
     LONG_SYM = 544,
     LOOP_SYM = 545,
     LOW_PRIORITY = 546,
     LT = 547,
     MASTER_AUTO_POSITION_SYM = 548,
     MASTER_BIND_SYM = 549,
     MASTER_CONNECT_RETRY_SYM = 550,
     MASTER_DELAY_SYM = 551,
     MASTER_HOST_SYM = 552,
     MASTER_LOG_FILE_SYM = 553,
     MASTER_LOG_POS_SYM = 554,
     MASTER_PASSWORD_SYM = 555,
     MASTER_PORT_SYM = 556,
     MASTER_RETRY_COUNT_SYM = 557,
     MASTER_SERVER_ID_SYM = 558,
     MASTER_SSL_CAPATH_SYM = 559,
     MASTER_TLS_VERSION_SYM = 560,
     MASTER_SSL_CA_SYM = 561,
     MASTER_SSL_CERT_SYM = 562,
     MASTER_SSL_CIPHER_SYM = 563,
     MASTER_SSL_CRL_SYM = 564,
     MASTER_SSL_CRLPATH_SYM = 565,
     MASTER_SSL_KEY_SYM = 566,
     MASTER_SSL_SYM = 567,
     MASTER_SSL_VERIFY_SERVER_CERT_SYM = 568,
     MASTER_SYM = 569,
     MASTER_USER_SYM = 570,
     MASTER_HEARTBEAT_PERIOD_SYM = 571,
     MATCH = 572,
     MAX_CONNECTIONS_PER_HOUR = 573,
     MAX_QUERIES_PER_HOUR = 574,
     MAX_ROWS = 575,
     MAX_SIZE_SYM = 576,
     MAX_SYM = 577,
     MAX_UPDATES_PER_HOUR = 578,
     MAX_USER_CONNECTIONS_SYM = 579,
     MAX_VALUE_SYM = 580,
     MEDIUMBLOB = 581,
     MEDIUMINT = 582,
     MEDIUMTEXT = 583,
     MEDIUM_SYM = 584,
     MEMORY_SYM = 585,
     MERGE_SYM = 586,
     MESSAGE_TEXT_SYM = 587,
     MICROSECOND_SYM = 588,
     MIGRATE_SYM = 589,
     MINUTE_MICROSECOND_SYM = 590,
     MINUTE_SECOND_SYM = 591,
     MINUTE_SYM = 592,
     MIN_ROWS = 593,
     MIN_SYM = 594,
     MODE_SYM = 595,
     MODIFIES_SYM = 596,
     MODIFY_SYM = 597,
     MOD_SYM = 598,
     MONTH_SYM = 599,
     MULTILINESTRING = 600,
     MULTIPOINT = 601,
     MULTIPOLYGON = 602,
     MUTEX_SYM = 603,
     MYSQL_ERRNO_SYM = 604,
     NAMES_SYM = 605,
     NAME_SYM = 606,
     NATIONAL_SYM = 607,
     NATURAL = 608,
     NCHAR_STRING = 609,
     NCHAR_SYM = 610,
     NDBCLUSTER_SYM = 611,
     NE = 612,
     NEG = 613,
     NEVER_SYM = 614,
     NEW_SYM = 615,
     NEXT_SYM = 616,
     NODEGROUP_SYM = 617,
     NONE_SYM = 618,
     NOT2_SYM = 619,
     NOT_SYM = 620,
     NOW_SYM = 621,
     NO_SYM = 622,
     NO_WAIT_SYM = 623,
     NO_WRITE_TO_BINLOG = 624,
     NULL_SYM = 625,
     NUM = 626,
     NUMBER_SYM = 627,
     NUMERIC_SYM = 628,
     NVARCHAR_SYM = 629,
     OFFSET_SYM = 630,
     ON = 631,
     ONE_SYM = 632,
     ONLY_SYM = 633,
     OPEN_SYM = 634,
     OPTIMIZE = 635,
     OPTIMIZER_COSTS_SYM = 636,
     OPTIONS_SYM = 637,
     OPTION = 638,
     OPTIONALLY = 639,
     OR2_SYM = 640,
     ORDER_SYM = 641,
     OR_OR_SYM = 642,
     OR_SYM = 643,
     OUTER = 644,
     OUTFILE = 645,
     OUT_SYM = 646,
     OWNER_SYM = 647,
     PACK_KEYS_SYM = 648,
     PAGE_SYM = 649,
     PARAM_MARKER = 650,
     PARSER_SYM = 651,
     PARSE_GCOL_EXPR_SYM = 652,
     PARTIAL = 653,
     PARTITION_SYM = 654,
     PARTITIONS_SYM = 655,
     PARTITIONING_SYM = 656,
     PASSWORD = 657,
     PHASE_SYM = 658,
     PLUGIN_DIR_SYM = 659,
     PLUGIN_SYM = 660,
     PLUGINS_SYM = 661,
     POINT_SYM = 662,
     POLYGON = 663,
     PORT_SYM = 664,
     POSITION_SYM = 665,
     PRECEDES_SYM = 666,
     PRECISION = 667,
     PREPARE_SYM = 668,
     PRESERVE_SYM = 669,
     PREV_SYM = 670,
     PRIMARY_SYM = 671,
     PRIVILEGES = 672,
     PROCEDURE_SYM = 673,
     PROCESS = 674,
     PROCESSLIST_SYM = 675,
     PROFILE_SYM = 676,
     PROFILES_SYM = 677,
     PROXY_SYM = 678,
     PURGE = 679,
     QUARTER_SYM = 680,
     QUERY_SYM = 681,
     QUICK = 682,
     RANGE_SYM = 683,
     READS_SYM = 684,
     READ_ONLY_SYM = 685,
     READ_SYM = 686,
     READ_WRITE_SYM = 687,
     REAL = 688,
     REBUILD_SYM = 689,
     RECOVER_SYM = 690,
     REDOFILE_SYM = 691,
     REDO_BUFFER_SIZE_SYM = 692,
     REDUNDANT_SYM = 693,
     REFERENCES = 694,
     REGEXP = 695,
     RELAY = 696,
     RELAYLOG_SYM = 697,
     RELAY_LOG_FILE_SYM = 698,
     RELAY_LOG_POS_SYM = 699,
     RELAY_THREAD = 700,
     RELEASE_SYM = 701,
     RELOAD = 702,
     REMOVE_SYM = 703,
     RENAME = 704,
     REORGANIZE_SYM = 705,
     REPAIR = 706,
     REPEATABLE_SYM = 707,
     REPEAT_SYM = 708,
     REPLACE = 709,
     REPLICATION = 710,
     REPLICATE_DO_DB = 711,
     REPLICATE_IGNORE_DB = 712,
     REPLICATE_DO_TABLE = 713,
     REPLICATE_IGNORE_TABLE = 714,
     REPLICATE_WILD_DO_TABLE = 715,
     REPLICATE_WILD_IGNORE_TABLE = 716,
     REPLICATE_REWRITE_DB = 717,
     REQUIRE_SYM = 718,
     RESET_SYM = 719,
     RESIGNAL_SYM = 720,
     RESOURCES = 721,
     RESTORE_SYM = 722,
     RESTRICT = 723,
     RESUME_SYM = 724,
     RETURNED_SQLSTATE_SYM = 725,
     RETURNS_SYM = 726,
     RETURN_SYM = 727,
     REVERSE_SYM = 728,
     REVOKE = 729,
     RIGHT = 730,
     ROLLBACK_SYM = 731,
     ROLLUP_SYM = 732,
     ROUTINE_SYM = 733,
     ROWS_SYM = 734,
     ROW_FORMAT_SYM = 735,
     ROW_SYM = 736,
     ROW_COUNT_SYM = 737,
     RTREE_SYM = 738,
     SAVEPOINT_SYM = 739,
     SCHEDULE_SYM = 740,
     SCHEMA_NAME_SYM = 741,
     SECOND_MICROSECOND_SYM = 742,
     SECOND_SYM = 743,
     SECURITY_SYM = 744,
     SELECT_SYM = 745,
     SENSITIVE_SYM = 746,
     SEPARATOR_SYM = 747,
     SERIALIZABLE_SYM = 748,
     SERIAL_SYM = 749,
     SESSION_SYM = 750,
     SERVER_SYM = 751,
     SERVER_OPTIONS = 752,
     SET = 753,
     SET_VAR = 754,
     SHARE_SYM = 755,
     SHIFT_LEFT = 756,
     SHIFT_RIGHT = 757,
     SHOW = 758,
     SHUTDOWN = 759,
     SIGNAL_SYM = 760,
     SIGNED_SYM = 761,
     SIMPLE_SYM = 762,
     SLAVE = 763,
     SLOW = 764,
     SMALLINT = 765,
     SNAPSHOT_SYM = 766,
     SOCKET_SYM = 767,
     SONAME_SYM = 768,
     SOUNDS_SYM = 769,
     SOURCE_SYM = 770,
     SPATIAL_SYM = 771,
     SPECIFIC_SYM = 772,
     SQLEXCEPTION_SYM = 773,
     SQLSTATE_SYM = 774,
     SQLWARNING_SYM = 775,
     SQL_AFTER_GTIDS = 776,
     SQL_AFTER_MTS_GAPS = 777,
     SQL_BEFORE_GTIDS = 778,
     SQL_BIG_RESULT = 779,
     SQL_BUFFER_RESULT = 780,
     SQL_CACHE_SYM = 781,
     SQL_CALC_FOUND_ROWS = 782,
     SQL_NO_CACHE_SYM = 783,
     SQL_SMALL_RESULT = 784,
     SQL_SYM = 785,
     SQL_THREAD = 786,
     SSL_SYM = 787,
     STACKED_SYM = 788,
     STARTING = 789,
     STARTS_SYM = 790,
     START_SYM = 791,
     STATS_AUTO_RECALC_SYM = 792,
     STATS_PERSISTENT_SYM = 793,
     STATS_SAMPLE_PAGES_SYM = 794,
     STATUS_SYM = 795,
     STDDEV_SAMP_SYM = 796,
     STD_SYM = 797,
     STOP_SYM = 798,
     STORAGE_SYM = 799,
     STORED_SYM = 800,
     STRAIGHT_JOIN = 801,
     STRING_SYM = 802,
     SUBCLASS_ORIGIN_SYM = 803,
     SUBDATE_SYM = 804,
     SUBJECT_SYM = 805,
     SUBPARTITIONS_SYM = 806,
     SUBPARTITION_SYM = 807,
     SUBSTRING = 808,
     SUM_SYM = 809,
     SUPER_SYM = 810,
     SUSPEND_SYM = 811,
     SWAPS_SYM = 812,
     SWITCHES_SYM = 813,
     SYSDATE = 814,
     TABLES = 815,
     TABLESPACE_SYM = 816,
     TABLE_REF_PRIORITY = 817,
     TABLE_SYM = 818,
     TABLE_CHECKSUM_SYM = 819,
     TABLE_NAME_SYM = 820,
     TEMPORARY = 821,
     TEMPTABLE_SYM = 822,
     TERMINATED = 823,
     TEXT_STRING = 824,
     TEXT_SYM = 825,
     THAN_SYM = 826,
     THEN_SYM = 827,
     TIMESTAMP = 828,
     TIMESTAMP_ADD = 829,
     TIMESTAMP_DIFF = 830,
     TIME_SYM = 831,
     TINYBLOB = 832,
     TINYINT = 833,
     TINYTEXT = 834,
     TO_SYM = 835,
     TRAILING = 836,
     TRANSACTION_SYM = 837,
     TRIGGERS_SYM = 838,
     TRIGGER_SYM = 839,
     TRIM = 840,
     TRUE_SYM = 841,
     TRUNCATE_SYM = 842,
     TYPES_SYM = 843,
     TYPE_SYM = 844,
     UDF_RETURNS_SYM = 845,
     ULONGLONG_NUM = 846,
     UNCOMMITTED_SYM = 847,
     UNDEFINED_SYM = 848,
     UNDERSCORE_CHARSET = 849,
     UNDOFILE_SYM = 850,
     UNDO_BUFFER_SIZE_SYM = 851,
     UNDO_SYM = 852,
     UNICODE_SYM = 853,
     UNINSTALL_SYM = 854,
     UNION_SYM = 855,
     UNIQUE_SYM = 856,
     UNKNOWN_SYM = 857,
     UNLOCK_SYM = 858,
     UNSIGNED = 859,
     UNTIL_SYM = 860,
     UPDATE_SYM = 861,
     UPGRADE_SYM = 862,
     USAGE = 863,
     USER = 864,
     USE_FRM = 865,
     USE_SYM = 866,
     USING = 867,
     UTC_DATE_SYM = 868,
     UTC_TIMESTAMP_SYM = 869,
     UTC_TIME_SYM = 870,
     VALIDATION_SYM = 871,
     VALUES = 872,
     VALUE_SYM = 873,
     VARBINARY = 874,
     VARCHAR = 875,
     VARIABLES = 876,
     VARIANCE_SYM = 877,
     VARYING = 878,
     VAR_SAMP_SYM = 879,
     VIEW_SYM = 880,
     VIRTUAL_SYM = 881,
     WAIT_SYM = 882,
     WARNINGS = 883,
     WEEK_SYM = 884,
     WEIGHT_STRING_SYM = 885,
     WHEN_SYM = 886,
     WHERE = 887,
     WHILE_SYM = 888,
     WITH = 889,
     WITH_CUBE_SYM = 890,
     WITH_ROLLUP_SYM = 891,
     WITHOUT_SYM = 892,
     WORK_SYM = 893,
     WRAPPER_SYM = 894,
     WRITE_SYM = 895,
     X509_SYM = 896,
     XA_SYM = 897,
     XID_SYM = 898,
     XML_SYM = 899,
     XOR = 900,
     YEAR_MONTH_SYM = 901,
     YEAR_SYM = 902,
     ZEROFILL = 903
   };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define ANALYSE_SYM 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT 289
#define BINARY 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND 293
#define BIT_OR 294
#define BIT_SYM 295
#define BIT_XOR 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define CONCURRENT 339
#define CONDITION_SYM 340
#define CONNECTION_SYM 341
#define CONSISTENT_SYM 342
#define CONSTRAINT 343
#define CONSTRAINT_CATALOG_SYM 344
#define CONSTRAINT_NAME_SYM 345
#define CONSTRAINT_SCHEMA_SYM 346
#define CONTAINS_SYM 347
#define CONTEXT_SYM 348
#define CONTINUE_SYM 349
#define CONVERT_SYM 350
#define COUNT_SYM 351
#define CPU_SYM 352
#define CREATE 353
#define CROSS 354
#define CUBE_SYM 355
#define CURDATE 356
#define CURRENT_SYM 357
#define CURRENT_USER 358
#define CURSOR_SYM 359
#define CURSOR_NAME_SYM 360
#define CURTIME 361
#define DATABASE 362
#define DATABASES 363
#define DATAFILE_SYM 364
#define DATA_SYM 365
#define DATETIME 366
#define DATE_ADD_INTERVAL 367
#define DATE_SUB_INTERVAL 368
#define DATE_SYM 369
#define DAY_HOUR_SYM 370
#define DAY_MICROSECOND_SYM 371
#define DAY_MINUTE_SYM 372
#define DAY_SECOND_SYM 373
#define DAY_SYM 374
#define DEALLOCATE_SYM 375
#define DECIMAL_NUM 376
#define DECIMAL_SYM 377
#define DECLARE_SYM 378
#define DEFAULT 379
#define DEFAULT_AUTH_SYM 380
#define DEFINER_SYM 381
#define DELAYED_SYM 382
#define DELAY_KEY_WRITE_SYM 383
#define DELETE_SYM 384
#define DESC 385
#define DESCRIBE 386
#define DES_KEY_FILE 387
#define DETERMINISTIC_SYM 388
#define DIAGNOSTICS_SYM 389
#define DIRECTORY_SYM 390
#define DISABLE_SYM 391
#define DISCARD 392
#define DISK_SYM 393
#define DISTINCT 394
#define DIV_SYM 395
#define DOUBLE_SYM 396
#define DO_SYM 397
#define DROP 398
#define DUAL_SYM 399
#define DUMPFILE 400
#define DUPLICATE_SYM 401
#define DYNAMIC_SYM 402
#define EACH_SYM 403
#define ELSE 404
#define ELSEIF_SYM 405
#define ENABLE_SYM 406
#define ENCLOSED 407
#define END 408
#define ENDS_SYM 409
#define END_OF_INPUT 410
#define ENGINES_SYM 411
#define ENGINE_SYM 412
#define ENUM 413
#define EQ 414
#define EQUAL_SYM 415
#define ERROR_SYM 416
#define ERRORS 417
#define ESCAPED 418
#define ESCAPE_SYM 419
#define EVENTS_SYM 420
#define EVENT_SYM 421
#define EVERY_SYM 422
#define EXCHANGE_SYM 423
#define EXECUTE_SYM 424
#define EXISTS 425
#define EXIT_SYM 426
#define EXPANSION_SYM 427
#define EXPIRE_SYM 428
#define EXPORT_SYM 429
#define EXTENDED_SYM 430
#define EXTENT_SIZE_SYM 431
#define EXTRACT_SYM 432
#define FALSE_SYM 433
#define FAST_SYM 434
#define FAULTS_SYM 435
#define FETCH_SYM 436
#define FILE_SYM 437
#define FILE_BLOCK_SIZE_SYM 438
#define FILTER_SYM 439
#define FIRST_SYM 440
#define FIXED_SYM 441
#define FLOAT_NUM 442
#define FLOAT_SYM 443
#define FLUSH_SYM 444
#define FOLLOWS_SYM 445
#define FORCE_SYM 446
#define FOREIGN 447
#define FOR_SYM 448
#define FORMAT_SYM 449
#define FOUND_SYM 450
#define FROM 451
#define FULL 452
#define FULLTEXT_SYM 453
#define FUNCTION_SYM 454
#define GE 455
#define GENERAL 456
#define GENERATED 457
#define GROUP_REPLICATION 458
#define GEOMETRYCOLLECTION 459
#define GEOMETRY_SYM 460
#define GET_FORMAT 461
#define GET_SYM 462
#define GLOBAL_SYM 463
#define GRANT 464
#define GRANTS 465
#define GROUP_SYM 466
#define GROUP_CONCAT_SYM 467
#define GT_SYM 468
#define HANDLER_SYM 469
#define HASH_SYM 470
#define HAVING 471
#define HELP_SYM 472
#define HEX_NUM 473
#define HIGH_PRIORITY 474
#define HOST_SYM 475
#define HOSTS_SYM 476
#define HOUR_MICROSECOND_SYM 477
#define HOUR_MINUTE_SYM 478
#define HOUR_SECOND_SYM 479
#define HOUR_SYM 480
#define IDENT 481
#define IDENTIFIED_SYM 482
#define IDENT_QUOTED 483
#define IF 484
#define IGNORE_SYM 485
#define IGNORE_SERVER_IDS_SYM 486
#define IMPORT 487
#define INDEXES 488
#define INDEX_SYM 489
#define INFILE 490
#define INITIAL_SIZE_SYM 491
#define INNER_SYM 492
#define INOUT_SYM 493
#define INSENSITIVE_SYM 494
#define INSERT 495
#define INSERT_METHOD 496
#define INSTALL_SYM 497
#define INTERVAL_SYM 498
#define INTO 499
#define INT_SYM 500
#define INVOKER_SYM 501
#define IN_SYM 502
#define IO_AFTER_GTIDS 503
#define IO_BEFORE_GTIDS 504
#define IO_SYM 505
#define IPC_SYM 506
#define IS 507
#define ISOLATION 508
#define ISSUER_SYM 509
#define ITERATE_SYM 510
#define JOIN_SYM 511
#define JSON_SEPARATOR_SYM 512
#define JSON_SYM 513
#define KEYS 514
#define KEY_BLOCK_SIZE 515
#define KEY_SYM 516
#define KILL_SYM 517
#define LANGUAGE_SYM 518
#define LAST_SYM 519
#define LE 520
#define LEADING 521
#define LEAVES 522
#define LEAVE_SYM 523
#define LEFT 524
#define LESS_SYM 525
#define LEVEL_SYM 526
#define LEX_HOSTNAME 527
#define LIKE 528
#define LIMIT 529
#define LINEAR_SYM 530
#define LINES 531
#define LINESTRING 532
#define LIST_SYM 533
#define LOAD 534
#define LOCAL_SYM 535
#define LOCATOR_SYM 536
#define LOCKS_SYM 537
#define LOCK_SYM 538
#define LOGFILE_SYM 539
#define LOGS_SYM 540
#define LONGBLOB 541
#define LONGTEXT 542
#define LONG_NUM 543
#define LONG_SYM 544
#define LOOP_SYM 545
#define LOW_PRIORITY 546
#define LT 547
#define MASTER_AUTO_POSITION_SYM 548
#define MASTER_BIND_SYM 549
#define MASTER_CONNECT_RETRY_SYM 550
#define MASTER_DELAY_SYM 551
#define MASTER_HOST_SYM 552
#define MASTER_LOG_FILE_SYM 553
#define MASTER_LOG_POS_SYM 554
#define MASTER_PASSWORD_SYM 555
#define MASTER_PORT_SYM 556
#define MASTER_RETRY_COUNT_SYM 557
#define MASTER_SERVER_ID_SYM 558
#define MASTER_SSL_CAPATH_SYM 559
#define MASTER_TLS_VERSION_SYM 560
#define MASTER_SSL_CA_SYM 561
#define MASTER_SSL_CERT_SYM 562
#define MASTER_SSL_CIPHER_SYM 563
#define MASTER_SSL_CRL_SYM 564
#define MASTER_SSL_CRLPATH_SYM 565
#define MASTER_SSL_KEY_SYM 566
#define MASTER_SSL_SYM 567
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 568
#define MASTER_SYM 569
#define MASTER_USER_SYM 570
#define MASTER_HEARTBEAT_PERIOD_SYM 571
#define MATCH 572
#define MAX_CONNECTIONS_PER_HOUR 573
#define MAX_QUERIES_PER_HOUR 574
#define MAX_ROWS 575
#define MAX_SIZE_SYM 576
#define MAX_SYM 577
#define MAX_UPDATES_PER_HOUR 578
#define MAX_USER_CONNECTIONS_SYM 579
#define MAX_VALUE_SYM 580
#define MEDIUMBLOB 581
#define MEDIUMINT 582
#define MEDIUMTEXT 583
#define MEDIUM_SYM 584
#define MEMORY_SYM 585
#define MERGE_SYM 586
#define MESSAGE_TEXT_SYM 587
#define MICROSECOND_SYM 588
#define MIGRATE_SYM 589
#define MINUTE_MICROSECOND_SYM 590
#define MINUTE_SECOND_SYM 591
#define MINUTE_SYM 592
#define MIN_ROWS 593
#define MIN_SYM 594
#define MODE_SYM 595
#define MODIFIES_SYM 596
#define MODIFY_SYM 597
#define MOD_SYM 598
#define MONTH_SYM 599
#define MULTILINESTRING 600
#define MULTIPOINT 601
#define MULTIPOLYGON 602
#define MUTEX_SYM 603
#define MYSQL_ERRNO_SYM 604
#define NAMES_SYM 605
#define NAME_SYM 606
#define NATIONAL_SYM 607
#define NATURAL 608
#define NCHAR_STRING 609
#define NCHAR_SYM 610
#define NDBCLUSTER_SYM 611
#define NE 612
#define NEG 613
#define NEVER_SYM 614
#define NEW_SYM 615
#define NEXT_SYM 616
#define NODEGROUP_SYM 617
#define NONE_SYM 618
#define NOT2_SYM 619
#define NOT_SYM 620
#define NOW_SYM 621
#define NO_SYM 622
#define NO_WAIT_SYM 623
#define NO_WRITE_TO_BINLOG 624
#define NULL_SYM 625
#define NUM 626
#define NUMBER_SYM 627
#define NUMERIC_SYM 628
#define NVARCHAR_SYM 629
#define OFFSET_SYM 630
#define ON 631
#define ONE_SYM 632
#define ONLY_SYM 633
#define OPEN_SYM 634
#define OPTIMIZE 635
#define OPTIMIZER_COSTS_SYM 636
#define OPTIONS_SYM 637
#define OPTION 638
#define OPTIONALLY 639
#define OR2_SYM 640
#define ORDER_SYM 641
#define OR_OR_SYM 642
#define OR_SYM 643
#define OUTER 644
#define OUTFILE 645
#define OUT_SYM 646
#define OWNER_SYM 647
#define PACK_KEYS_SYM 648
#define PAGE_SYM 649
#define PARAM_MARKER 650
#define PARSER_SYM 651
#define PARSE_GCOL_EXPR_SYM 652
#define PARTIAL 653
#define PARTITION_SYM 654
#define PARTITIONS_SYM 655
#define PARTITIONING_SYM 656
#define PASSWORD 657
#define PHASE_SYM 658
#define PLUGIN_DIR_SYM 659
#define PLUGIN_SYM 660
#define PLUGINS_SYM 661
#define POINT_SYM 662
#define POLYGON 663
#define PORT_SYM 664
#define POSITION_SYM 665
#define PRECEDES_SYM 666
#define PRECISION 667
#define PREPARE_SYM 668
#define PRESERVE_SYM 669
#define PREV_SYM 670
#define PRIMARY_SYM 671
#define PRIVILEGES 672
#define PROCEDURE_SYM 673
#define PROCESS 674
#define PROCESSLIST_SYM 675
#define PROFILE_SYM 676
#define PROFILES_SYM 677
#define PROXY_SYM 678
#define PURGE 679
#define QUARTER_SYM 680
#define QUERY_SYM 681
#define QUICK 682
#define RANGE_SYM 683
#define READS_SYM 684
#define READ_ONLY_SYM 685
#define READ_SYM 686
#define READ_WRITE_SYM 687
#define REAL 688
#define REBUILD_SYM 689
#define RECOVER_SYM 690
#define REDOFILE_SYM 691
#define REDO_BUFFER_SIZE_SYM 692
#define REDUNDANT_SYM 693
#define REFERENCES 694
#define REGEXP 695
#define RELAY 696
#define RELAYLOG_SYM 697
#define RELAY_LOG_FILE_SYM 698
#define RELAY_LOG_POS_SYM 699
#define RELAY_THREAD 700
#define RELEASE_SYM 701
#define RELOAD 702
#define REMOVE_SYM 703
#define RENAME 704
#define REORGANIZE_SYM 705
#define REPAIR 706
#define REPEATABLE_SYM 707
#define REPEAT_SYM 708
#define REPLACE 709
#define REPLICATION 710
#define REPLICATE_DO_DB 711
#define REPLICATE_IGNORE_DB 712
#define REPLICATE_DO_TABLE 713
#define REPLICATE_IGNORE_TABLE 714
#define REPLICATE_WILD_DO_TABLE 715
#define REPLICATE_WILD_IGNORE_TABLE 716
#define REPLICATE_REWRITE_DB 717
#define REQUIRE_SYM 718
#define RESET_SYM 719
#define RESIGNAL_SYM 720
#define RESOURCES 721
#define RESTORE_SYM 722
#define RESTRICT 723
#define RESUME_SYM 724
#define RETURNED_SQLSTATE_SYM 725
#define RETURNS_SYM 726
#define RETURN_SYM 727
#define REVERSE_SYM 728
#define REVOKE 729
#define RIGHT 730
#define ROLLBACK_SYM 731
#define ROLLUP_SYM 732
#define ROUTINE_SYM 733
#define ROWS_SYM 734
#define ROW_FORMAT_SYM 735
#define ROW_SYM 736
#define ROW_COUNT_SYM 737
#define RTREE_SYM 738
#define SAVEPOINT_SYM 739
#define SCHEDULE_SYM 740
#define SCHEMA_NAME_SYM 741
#define SECOND_MICROSECOND_SYM 742
#define SECOND_SYM 743
#define SECURITY_SYM 744
#define SELECT_SYM 745
#define SENSITIVE_SYM 746
#define SEPARATOR_SYM 747
#define SERIALIZABLE_SYM 748
#define SERIAL_SYM 749
#define SESSION_SYM 750
#define SERVER_SYM 751
#define SERVER_OPTIONS 752
#define SET 753
#define SET_VAR 754
#define SHARE_SYM 755
#define SHIFT_LEFT 756
#define SHIFT_RIGHT 757
#define SHOW 758
#define SHUTDOWN 759
#define SIGNAL_SYM 760
#define SIGNED_SYM 761
#define SIMPLE_SYM 762
#define SLAVE 763
#define SLOW 764
#define SMALLINT 765
#define SNAPSHOT_SYM 766
#define SOCKET_SYM 767
#define SONAME_SYM 768
#define SOUNDS_SYM 769
#define SOURCE_SYM 770
#define SPATIAL_SYM 771
#define SPECIFIC_SYM 772
#define SQLEXCEPTION_SYM 773
#define SQLSTATE_SYM 774
#define SQLWARNING_SYM 775
#define SQL_AFTER_GTIDS 776
#define SQL_AFTER_MTS_GAPS 777
#define SQL_BEFORE_GTIDS 778
#define SQL_BIG_RESULT 779
#define SQL_BUFFER_RESULT 780
#define SQL_CACHE_SYM 781
#define SQL_CALC_FOUND_ROWS 782
#define SQL_NO_CACHE_SYM 783
#define SQL_SMALL_RESULT 784
#define SQL_SYM 785
#define SQL_THREAD 786
#define SSL_SYM 787
#define STACKED_SYM 788
#define STARTING 789
#define STARTS_SYM 790
#define START_SYM 791
#define STATS_AUTO_RECALC_SYM 792
#define STATS_PERSISTENT_SYM 793
#define STATS_SAMPLE_PAGES_SYM 794
#define STATUS_SYM 795
#define STDDEV_SAMP_SYM 796
#define STD_SYM 797
#define STOP_SYM 798
#define STORAGE_SYM 799
#define STORED_SYM 800
#define STRAIGHT_JOIN 801
#define STRING_SYM 802
#define SUBCLASS_ORIGIN_SYM 803
#define SUBDATE_SYM 804
#define SUBJECT_SYM 805
#define SUBPARTITIONS_SYM 806
#define SUBPARTITION_SYM 807
#define SUBSTRING 808
#define SUM_SYM 809
#define SUPER_SYM 810
#define SUSPEND_SYM 811
#define SWAPS_SYM 812
#define SWITCHES_SYM 813
#define SYSDATE 814
#define TABLES 815
#define TABLESPACE_SYM 816
#define TABLE_REF_PRIORITY 817
#define TABLE_SYM 818
#define TABLE_CHECKSUM_SYM 819
#define TABLE_NAME_SYM 820
#define TEMPORARY 821
#define TEMPTABLE_SYM 822
#define TERMINATED 823
#define TEXT_STRING 824
#define TEXT_SYM 825
#define THAN_SYM 826
#define THEN_SYM 827
#define TIMESTAMP 828
#define TIMESTAMP_ADD 829
#define TIMESTAMP_DIFF 830
#define TIME_SYM 831
#define TINYBLOB 832
#define TINYINT 833
#define TINYTEXT 834
#define TO_SYM 835
#define TRAILING 836
#define TRANSACTION_SYM 837
#define TRIGGERS_SYM 838
#define TRIGGER_SYM 839
#define TRIM 840
#define TRUE_SYM 841
#define TRUNCATE_SYM 842
#define TYPES_SYM 843
#define TYPE_SYM 844
#define UDF_RETURNS_SYM 845
#define ULONGLONG_NUM 846
#define UNCOMMITTED_SYM 847
#define UNDEFINED_SYM 848
#define UNDERSCORE_CHARSET 849
#define UNDOFILE_SYM 850
#define UNDO_BUFFER_SIZE_SYM 851
#define UNDO_SYM 852
#define UNICODE_SYM 853
#define UNINSTALL_SYM 854
#define UNION_SYM 855
#define UNIQUE_SYM 856
#define UNKNOWN_SYM 857
#define UNLOCK_SYM 858
#define UNSIGNED 859
#define UNTIL_SYM 860
#define UPDATE_SYM 861
#define UPGRADE_SYM 862
#define USAGE 863
#define USER 864
#define USE_FRM 865
#define USE_SYM 866
#define USING 867
#define UTC_DATE_SYM 868
#define UTC_TIMESTAMP_SYM 869
#define UTC_TIME_SYM 870
#define VALIDATION_SYM 871
#define VALUES 872
#define VALUE_SYM 873
#define VARBINARY 874
#define VARCHAR 875
#define VARIABLES 876
#define VARIANCE_SYM 877
#define VARYING 878
#define VAR_SAMP_SYM 879
#define VIEW_SYM 880
#define VIRTUAL_SYM 881
#define WAIT_SYM 882
#define WARNINGS 883
#define WEEK_SYM 884
#define WEIGHT_STRING_SYM 885
#define WHEN_SYM 886
#define WHERE 887
#define WHILE_SYM 888
#define WITH 889
#define WITH_CUBE_SYM 890
#define WITH_ROLLUP_SYM 891
#define WITHOUT_SYM 892
#define WORK_SYM 893
#define WRAPPER_SYM 894
#define WRITE_SYM 895
#define X509_SYM 896
#define XA_SYM 897
#define XID_SYM 898
#define XML_SYM 899
#define XOR 900
#define YEAR_MONTH_SYM 901
#define YEAR_SYM 902
#define ZEROFILL 903



#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED

# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int MYSQLparse (void *YYPARSE_PARAM);
#else
int MYSQLparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int MYSQLparse (class THD *YYTHD);
#else
int MYSQLparse ();
#endif
#endif /* ! YYPARSE_PARAM */

#endif /* !YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_0_17208410_1448824664_49_DIST_GPL_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

/* Line 390 of yacc.c  */
#line 1876 "/export/home/pb2/build/sb_0-17208410-1448824664.49/dist_GPL/sql/sql_yacc.cc"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(N) (N)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int yyi)
#else
static int
YYID (yyi)
    int yyi;
#endif
{
  return yyi;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
	Stack = &yyptr->Stack_alloc;					\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (YYID (0))
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  656
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   63337

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  668
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  915
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2721
/* YYNRULES -- Number of states.  */
#define YYNSTATES  4647

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   903

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   661,     2,     2,     2,   655,   650,     2,
     658,   659,   653,   652,   660,   651,   666,   654,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   667,   664,
       2,     2,     2,     2,   665,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   656,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   662,   649,   663,   657,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     6,    11,    14,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      81,    83,    85,    87,    89,    91,    93,    95,    97,    99,
     101,   103,   105,   107,   109,   111,   113,   115,   117,   119,
     121,   123,   125,   127,   129,   131,   135,   137,   139,   144,
     146,   149,   150,   155,   156,   159,   163,   165,   168,   169,
     173,   174,   181,   182,   188,   190,   194,   198,   202,   206,
     210,   214,   218,   222,   225,   229,   231,   235,   237,   240,
     244,   250,   258,   261,   265,   267,   271,   275,   278,   282,
     284,   288,   290,   292,   296,   300,   304,   308,   312,   316,
     320,   324,   328,   332,   336,   340,   344,   348,   352,   356,
     360,   364,   368,   372,   378,   382,   384,   385,   387,   391,
     393,   397,   401,   405,   409,   410,   414,   415,   423,   424,
     425,   440,   441,   442,   457,   458,   459,   474,   475,   482,
     483,   487,   496,   501,   505,   517,   519,   523,   526,   529,
     532,   535,   538,   541,   544,   545,   558,   559,   566,   569,
     570,   572,   576,   578,   579,   582,   583,   586,   587,   589,
     593,   598,   599,   602,   603,   606,   608,   610,   612,   614,
     616,   618,   620,   622,   624,   626,   628,   630,   632,   634,
     635,   639,   641,   642,   645,   646,   649,   652,   655,   658,
     661,   665,   669,   671,   673,   675,   678,   682,   686,   687,
     692,   693,   697,   698,   700,   704,   706,   707,   709,   713,
     715,   716,   720,   721,   723,   727,   729,   734,   735,   737,
     739,   741,   742,   746,   749,   753,   754,   758,   759,   765,
     771,   772,   780,   781,   788,   790,   792,   794,   798,   800,
     802,   804,   808,   809,   811,   813,   815,   817,   820,   822,
     826,   828,   830,   831,   833,   834,   837,   841,   847,   849,
     851,   853,   855,   857,   859,   861,   863,   865,   867,   869,
     871,   873,   875,   877,   881,   886,   887,   889,   891,   893,
     897,   899,   903,   907,   909,   912,   914,   916,   918,   920,
     924,   928,   930,   932,   934,   936,   938,   940,   942,   944,
     946,   948,   950,   952,   954,   956,   960,   961,   962,   966,
     968,   970,   972,   974,   976,   978,   980,   982,   984,   986,
     988,   990,   992,   993,   999,  1000,  1003,  1004,  1008,  1009,
    1012,  1015,  1018,  1021,  1022,  1029,  1032,  1033,  1036,  1038,
    1040,  1044,  1045,  1046,  1047,  1055,  1056,  1059,  1062,  1064,
    1066,  1067,  1068,  1077,  1078,  1085,  1087,  1090,  1092,  1095,
    1096,  1097,  1104,  1105,  1106,  1113,  1114,  1117,  1118,  1124,
    1125,  1127,  1128,  1134,  1135,  1138,  1139,  1145,  1150,  1151,
    1152,  1161,  1162,  1163,  1172,  1174,  1176,  1178,  1180,  1182,
    1185,  1190,  1196,  1197,  1202,  1207,  1212,  1216,  1220,  1223,
    1226,  1227,  1230,  1232,  1235,  1239,  1241,  1243,  1245,  1246,
    1248,  1250,  1253,  1257,  1259,  1261,  1263,  1265,  1267,  1269,
    1271,  1273,  1275,  1276,  1278,  1280,  1283,  1287,  1289,  1291,
    1293,  1295,  1297,  1298,  1300,  1302,  1305,  1309,  1311,  1313,
    1315,  1317,  1319,  1321,  1323,  1324,  1326,  1328,  1331,  1335,
    1337,  1339,  1341,  1344,  1347,  1350,  1352,  1354,  1356,  1358,
    1361,  1365,  1369,  1373,  1377,  1381,  1385,  1389,  1393,  1398,
    1402,  1404,  1406,  1408,  1410,  1413,  1417,  1420,  1425,  1431,
    1432,  1438,  1439,  1440,  1446,  1447,  1455,  1457,  1458,  1460,
    1461,  1465,  1466,  1470,  1476,  1483,  1484,  1489,  1492,  1495,
    1498,  1501,  1502,  1504,  1505,  1509,  1510,  1512,  1514,  1518,
    1520,  1525,  1529,  1533,  1534,  1537,  1538,  1539,  1547,  1548,
    1559,  1561,  1565,  1567,  1569,  1570,  1573,  1574,  1578,  1580,
    1584,  1585,  1592,  1594,  1595,  1596,  1602,  1603,  1608,  1610,
    1612,  1614,  1618,  1620,  1624,  1625,  1626,  1632,  1634,  1638,
    1640,  1642,  1643,  1647,  1649,  1653,  1654,  1659,  1661,  1662,
    1664,  1667,  1669,  1673,  1678,  1682,  1686,  1690,  1695,  1700,
    1704,  1709,  1710,  1712,  1713,  1715,  1717,  1720,  1722,  1724,
    1725,  1727,  1729,  1732,  1734,  1735,  1739,  1740,  1742,  1744,
    1747,  1749,  1752,  1756,  1760,  1764,  1768,  1772,  1776,  1780,
    1784,  1788,  1792,  1796,  1800,  1804,  1808,  1812,  1816,  1820,
    1824,  1828,  1832,  1836,  1837,  1844,  1846,  1848,  1852,  1857,
    1862,  1866,  1869,  1872,  1876,  1880,  1885,  1890,  1892,  1894,
    1896,  1898,  1900,  1902,  1904,  1906,  1908,  1910,  1912,  1914,
    1916,  1918,  1920,  1922,  1924,  1928,  1930,  1932,  1935,  1938,
    1946,  1955,  1964,  1973,  1982,  1985,  1986,  1988,  1993,  1994,
    1996,  1999,  2000,  2004,  2007,  2017,  2018,  2021,  2022,  2024,
    2027,  2029,  2031,  2034,  2037,  2040,  2042,  2045,  2046,  2048,
    2050,  2055,  2057,  2061,  2065,  2069,  2071,  2074,  2076,  2078,
    2082,  2085,  2089,  2092,  2095,  2097,  2101,  2105,  2108,  2112,
    2114,  2117,  2120,  2123,  2125,  2128,  2130,  2132,  2134,  2137,
    2141,  2144,  2148,  2151,  2154,  2158,  2162,  2166,  2167,  2174,
    2175,  2182,  2185,  2187,  2189,  2191,  2193,  2195,  2197,  2199,
    2201,  2203,  2205,  2207,  2209,  2212,  2215,  2217,  2220,  2222,
    2225,  2229,  2232,  2234,  2236,  2238,  2240,  2242,  2244,  2246,
    2249,  2250,  2252,  2254,  2260,  2261,  2265,  2266,  2269,  2273,
    2274,  2276,  2279,  2281,  2283,  2285,  2287,  2291,  2295,  2299,
    2303,  2304,  2306,  2307,  2309,  2310,  2312,  2315,  2317,  2319,
    2322,  2325,  2329,  2331,  2335,  2338,  2340,  2343,  2346,  2349,
    2352,  2355,  2358,  2361,  2364,  2367,  2370,  2373,  2375,  2377,
    2380,  2382,  2384,  2386,  2388,  2390,  2391,  2394,  2396,  2398,
    2400,  2402,  2404,  2405,  2408,  2409,  2412,  2414,  2416,  2417,
    2419,  2421,  2424,  2427,  2429,  2432,  2435,  2436,  2438,  2440,
    2442,  2446,  2448,  2452,  2453,  2455,  2456,  2461,  2463,  2465,
    2467,  2468,  2470,  2473,  2475,  2477,  2480,  2482,  2486,  2490,
    2492,  2494,  2495,  2498,  2499,  2501,  2507,  2508,  2512,  2516,
    2518,  2519,  2522,  2525,  2528,  2529,  2533,  2537,  2544,  2551,
    2553,  2555,  2558,  2561,  2564,  2566,  2569,  2572,  2574,  2576,
    2577,  2579,  2581,  2583,  2585,  2586,  2588,  2590,  2592,  2593,
    2595,  2598,  2599,  2601,  2602,  2604,  2605,  2607,  2609,  2612,
    2614,  2617,  2619,  2622,  2625,  2628,  2632,  2635,  2637,  2639,
    2641,  2643,  2647,  2649,  2651,  2653,  2658,  2661,  2663,  2668,
    2669,  2671,  2672,  2675,  2677,  2681,  2682,  2688,  2689,  2695,
    2703,  2704,  2710,  2711,  2717,  2718,  2724,  2725,  2730,  2731,
    2742,  2746,  2751,  2755,  2759,  2767,  2773,  2779,  2784,  2785,
    2787,  2789,  2792,  2795,  2798,  2800,  2805,  2808,  2811,  2815,
    2816,  2819,  2822,  2824,  2827,  2830,  2833,  2836,  2840,  2841,
    2845,  2847,  2852,  2853,  2857,  2858,  2861,  2862,  2864,  2865,
    2868,  2871,  2874,  2877,  2879,  2881,  2883,  2887,  2892,  2893,
    2900,  2905,  2906,  2912,  2913,  2920,  2925,  2929,  2931,  2939,
    2944,  2949,  2950,  2952,  2955,  2958,  2961,  2963,  2965,  2966,
    2972,  2973,  2977,  2980,  2981,  2987,  2988,  2989,  2996,  2998,
    3002,  3004,  3006,  3010,  3013,  3017,  3020,  3025,  3026,  3033,
    3034,  3035,  3043,  3048,  3053,  3057,  3061,  3064,  3067,  3074,
    3080,  3084,  3090,  3096,  3098,  3100,  3102,  3104,  3106,  3109,
    3111,  3112,  3114,  3116,  3119,  3122,  3126,  3130,  3134,  3138,
    3139,  3141,  3142,  3144,  3145,  3147,  3149,  3150,  3153,  3155,
    3156,  3158,  3160,  3162,  3165,  3168,  3171,  3176,  3180,  3181,
    3186,  3190,  3191,  3193,  3195,  3199,  3203,  3206,  3209,  3214,
    3215,  3219,  3220,  3224,  3225,  3229,  3230,  3234,  3235,  3237,
    3239,  3243,  3245,  3247,  3248,  3251,  3253,  3257,  3261,  3265,
    3267,  3268,  3274,  3275,  3277,  3279,  3280,  3287,  3288,  3290,
    3292,  3295,  3297,  3299,  3301,  3302,  3308,  3311,  3312,  3318,
    3319,  3321,  3323,  3326,  3328,  3330,  3332,  3334,  3336,  3339,
    3340,  3346,  3347,  3349,  3351,  3352,  3357,  3362,  3366,  3372,
    3374,  3378,  3382,  3383,  3390,  3392,  3394,  3396,  3400,  3403,
    3407,  3409,  3411,  3412,  3419,  3421,  3423,  3425,  3429,  3433,
    3438,  3439,  3445,  3447,  3448,  3453,  3454,  3457,  3459,  3463,
    3468,  3471,  3475,  3479,  3483,  3488,  3492,  3504,  3505,  3509,
    3518,  3521,  3522,  3524,  3526,  3528,  3529,  3531,  3534,  3536,
    3538,  3540,  3542,  3543,  3546,  3551,  3555,  3557,  3559,  3561,
    3564,  3565,  3568,  3571,  3573,  3575,  3576,  3579,  3583,  3587,
    3591,  3594,  3598,  3603,  3607,  3612,  3616,  3621,  3623,  3627,
    3632,  3636,  3643,  3645,  3651,  3658,  3664,  3672,  3679,  3688,
    3694,  3701,  3706,  3711,  3717,  3721,  3726,  3728,  3732,  3736,
    3740,  3744,  3748,  3752,  3758,  3764,  3768,  3772,  3776,  3780,
    3784,  3788,  3790,  3792,  3794,  3796,  3798,  3800,  3802,  3804,
    3806,  3808,  3810,  3812,  3814,  3816,  3818,  3820,  3822,  3824,
    3826,  3828,  3830,  3832,  3834,  3838,  3840,  3842,  3844,  3846,
    3850,  3853,  3856,  3859,  3862,  3866,  3870,  3876,  3883,  3888,
    3893,  3901,  3904,  3911,  3917,  3924,  3931,  3936,  3941,  3947,
    3951,  3956,  3963,  3966,  3971,  3976,  3981,  3992,  3999,  4008,
    4015,  4020,  4025,  4032,  4037,  4042,  4047,  4054,  4059,  4067,
    4075,  4083,  4090,  4097,  4104,  4111,  4115,  4120,  4127,  4136,
    4139,  4142,  4151,  4160,  4167,  4174,  4176,  4183,  4190,  4199,
    4208,  4215,  4224,  4231,  4234,  4243,  4252,  4255,  4258,  4261,
    4266,  4271,  4276,  4281,  4285,  4294,  4301,  4310,  4315,  4322,
    4327,  4332,  4339,  4348,  4353,  4357,  4364,  4369,  4376,  4382,
    4391,  4399,  4410,  4412,  4419,  4424,  4429,  4434,  4439,  4444,
    4451,  4456,  4461,  4468,  4471,  4475,  4476,  4481,  4482,  4486,
    4487,  4489,  4491,  4495,  4498,  4503,  4509,  4514,  4519,  4524,
    4530,  4535,  4541,  4546,  4552,  4557,  4563,  4568,  4573,  4578,
    4583,  4588,  4594,  4602,  4605,  4609,  4611,  4616,  4617,  4619,
    4620,  4623,  4624,  4628,  4632,  4634,  4637,  4640,  4644,  4647,
    4649,  4652,  4654,  4657,  4659,  4662,  4665,  4668,  4670,  4671,
    4673,  4675,  4679,  4681,  4685,  4687,  4691,  4692,  4694,  4695,
    4698,  4703,  4709,  4711,  4713,  4715,  4717,  4722,  4724,  4728,
    4732,  4736,  4742,  4748,  4756,  4761,  4769,  4779,  4786,  4794,
    4804,  4811,  4813,  4816,  4819,  4820,  4822,  4827,  4832,  4837,
    4842,  4845,  4850,  4851,  4855,  4857,  4858,  4860,  4861,  4864,
    4868,  4872,  4874,  4876,  4883,  4890,  4892,  4895,  4896,  4898,
    4900,  4901,  4903,  4905,  4907,  4909,  4913,  4915,  4919,  4921,
    4923,  4925,  4927,  4929,  4931,  4933,  4935,  4937,  4939,  4941,
    4943,  4945,  4947,  4949,  4951,  4953,  4955,  4957,  4959,  4961,
    4963,  4965,  4967,  4969,  4970,  4972,  4974,  4975,  4978,  4979,
    4981,  4982,  4985,  4986,  4989,  4992,  4993,  4994,  4999,  5003,
    5005,  5006,  5008,  5010,  5014,  5018,  5020,  5023,  5024,  5026,
    5030,  5034,  5036,  5037,  5039,  5041,  5042,  5044,  5047,  5049,
    5053,  5057,  5059,  5061,  5063,  5065,  5067,  5068,  5071,  5073,
    5075,  5077,  5079,  5081,  5083,  5085,  5087,  5089,  5091,  5093,
    5095,  5097,  5099,  5101,  5103,  5105,  5107,  5109,  5111,  5113,
    5115,  5117,  5118,  5124,  5125,  5127,  5131,  5133,  5137,  5139,
    5142,  5144,  5145,  5147,  5150,  5156,  5159,  5161,  5165,  5166,
    5167,  5175,  5176,  5177,  5186,  5191,  5198,  5203,  5208,  5214,
    5215,  5222,  5227,  5232,  5237,  5243,  5248,  5250,  5254,  5256,
    5258,  5262,  5263,  5266,  5267,  5269,  5270,  5272,  5274,  5277,
    5281,  5283,  5285,  5294,  5304,  5313,  5320,  5328,  5335,  5336,
    5338,  5340,  5342,  5344,  5346,  5347,  5349,  5351,  5355,  5360,
    5362,  5366,  5371,  5375,  5377,  5380,  5383,  5388,  5390,  5392,
    5396,  5398,  5400,  5402,  5403,  5405,  5409,  5410,  5412,  5416,
    5418,  5420,  5422,  5423,  5429,  5439,  5443,  5445,  5449,  5450,
    5452,  5461,  5468,  5476,  5477,  5480,  5481,  5484,  5486,  5488,
    5490,  5491,  5496,  5497,  5499,  5500,  5502,  5504,  5508,  5510,
    5512,  5515,  5518,  5521,  5523,  5525,  5527,  5529,  5530,  5534,
    5535,  5539,  5542,  5547,  5552,  5556,  5561,  5566,  5568,  5572,
    5576,  5583,  5586,  5589,  5590,  5597,  5598,  5606,  5612,  5615,
    5617,  5623,  5629,  5632,  5635,  5637,  5642,  5646,  5649,  5653,
    5656,  5659,  5661,  5665,  5670,  5674,  5678,  5681,  5685,  5689,
    5693,  5697,  5701,  5705,  5709,  5713,  5717,  5722,  5724,  5726,
    5728,  5730,  5732,  5733,  5735,  5736,  5739,  5740,  5742,  5744,
    5746,  5747,  5750,  5751,  5754,  5755,  5758,  5761,  5762,  5765,
    5768,  5769,  5774,  5775,  5780,  5782,  5784,  5786,  5788,  5790,
    5794,  5796,  5798,  5799,  5801,  5803,  5807,  5808,  5810,  5812,
    5813,  5818,  5819,  5820,  5826,  5828,  5829,  5833,  5834,  5838,
    5842,  5844,  5847,  5850,  5853,  5856,  5859,  5863,  5866,  5868,
    5870,  5872,  5874,  5876,  5878,  5880,  5881,  5883,  5884,  5888,
    5892,  5894,  5895,  5900,  5902,  5905,  5906,  5908,  5909,  5913,
    5917,  5920,  5923,  5927,  5928,  5930,  5932,  5935,  5936,  5937,
    5938,  5939,  5962,  5964,  5966,  5967,  5969,  5970,  5972,  5974,
    5975,  5977,  5979,  5980,  5983,  5986,  5988,  5992,  5997,  6001,
    6005,  6006,  6009,  6012,  6014,  6018,  6022,  6023,  6028,  6029,
    6033,  6035,  6037,  6038,  6042,  6045,  6049,  6051,  6053,  6056,
    6057,  6060,  6064,  6066,  6070,  6072,  6074,  6077,  6080,  6082,
    6084,  6086,  6088,  6090,  6093,  6096,  6098,  6100,  6102,  6104,
    6106,  6108,  6110,  6112,  6115,  6118,  6120,  6122,  6124,  6126,
    6128,  6131,  6134,  6137,  6139,  6141,  6145,  6151,  6154,  6156,
    6158,  6160,  6162,  6166,  6171,  6177,  6179,  6185,  6189,  6192,
    6194,  6198,  6201,  6204,  6209,  6211,  6213,  6215,  6217,  6219,
    6221,  6223,  6225,  6227,  6229,  6231,  6233,  6235,  6237,  6239,
    6241,  6245,  6248,  6250,  6252,  6254,  6256,  6258,  6260,  6262,
    6264,  6266,  6268,  6270,  6272,  6274,  6276,  6278,  6280,  6282,
    6284,  6286,  6288,  6290,  6292,  6294,  6296,  6298,  6300,  6302,
    6304,  6306,  6308,  6310,  6312,  6314,  6316,  6318,  6320,  6322,
    6324,  6326,  6328,  6330,  6332,  6334,  6336,  6338,  6340,  6342,
    6344,  6346,  6348,  6350,  6352,  6354,  6356,  6358,  6360,  6362,
    6364,  6366,  6368,  6370,  6372,  6374,  6376,  6378,  6380,  6382,
    6384,  6386,  6388,  6390,  6392,  6394,  6396,  6398,  6400,  6402,
    6404,  6406,  6408,  6410,  6412,  6414,  6416,  6418,  6420,  6422,
    6424,  6426,  6428,  6430,  6432,  6434,  6436,  6438,  6440,  6442,
    6444,  6446,  6448,  6450,  6452,  6454,  6456,  6458,  6460,  6462,
    6464,  6466,  6468,  6470,  6472,  6474,  6476,  6478,  6480,  6482,
    6484,  6486,  6488,  6490,  6492,  6494,  6496,  6498,  6500,  6502,
    6504,  6506,  6508,  6510,  6512,  6514,  6516,  6518,  6520,  6522,
    6524,  6526,  6528,  6530,  6532,  6534,  6536,  6538,  6540,  6542,
    6544,  6546,  6548,  6550,  6552,  6554,  6556,  6558,  6560,  6562,
    6564,  6566,  6568,  6570,  6572,  6574,  6576,  6578,  6580,  6582,
    6584,  6586,  6588,  6590,  6592,  6594,  6596,  6598,  6600,  6602,
    6604,  6606,  6608,  6610,  6612,  6614,  6616,  6618,  6620,  6622,
    6624,  6626,  6628,  6630,  6632,  6634,  6636,  6638,  6640,  6642,
    6644,  6646,  6648,  6650,  6652,  6654,  6656,  6658,  6660,  6662,
    6664,  6666,  6668,  6670,  6672,  6674,  6676,  6678,  6680,  6682,
    6684,  6686,  6688,  6690,  6692,  6694,  6696,  6698,  6700,  6702,
    6704,  6706,  6708,  6710,  6712,  6714,  6716,  6718,  6720,  6722,
    6724,  6726,  6728,  6730,  6732,  6734,  6736,  6738,  6740,  6742,
    6744,  6746,  6748,  6750,  6752,  6754,  6756,  6758,  6760,  6762,
    6764,  6766,  6768,  6770,  6772,  6774,  6776,  6778,  6780,  6782,
    6784,  6786,  6788,  6790,  6792,  6794,  6796,  6798,  6800,  6802,
    6804,  6806,  6808,  6810,  6812,  6814,  6816,  6818,  6820,  6822,
    6824,  6826,  6828,  6830,  6832,  6834,  6836,  6838,  6840,  6842,
    6844,  6846,  6848,  6850,  6852,  6854,  6856,  6858,  6860,  6862,
    6864,  6866,  6868,  6870,  6872,  6874,  6876,  6878,  6880,  6882,
    6884,  6886,  6888,  6890,  6892,  6894,  6896,  6898,  6900,  6902,
    6904,  6906,  6908,  6910,  6912,  6914,  6916,  6918,  6920,  6922,
    6924,  6926,  6928,  6930,  6932,  6934,  6936,  6938,  6940,  6942,
    6944,  6946,  6948,  6950,  6952,  6954,  6956,  6958,  6960,  6962,
    6964,  6966,  6968,  6970,  6972,  6974,  6976,  6978,  6980,  6982,
    6984,  6986,  6988,  6990,  6992,  6994,  6996,  6999,  7002,  7005,
    7008,  7012,  7019,  7025,  7034,  7037,  7040,  7041,  7044,  7046,
    7050,  7053,  7055,  7057,  7059,  7061,  7062,  7064,  7066,  7068,
    7069,  7072,  7075,  7078,  7082,  7086,  7091,  7098,  7101,  7105,
    7109,  7111,  7115,  7119,  7122,  7125,  7127,  7128,  7131,  7135,
    7136,  7139,  7142,  7145,  7148,  7151,  7154,  7156,  7158,  7160,
    7162,  7164,  7166,  7168,  7169,  7174,  7176,  7178,  7180,  7184,
    7188,  7190,  7192,  7195,  7198,  7199,  7203,  7205,  7210,  7214,
    7215,  7223,  7225,  7228,  7230,  7232,  7234,  7236,  7238,  7240,
    7241,  7247,  7249,  7251,  7253,  7255,  7257,  7258,  7263,  7270,
    7277,  7284,  7292,  7298,  7299,  7304,  7313,  7322,  7331,  7338,
    7339,  7341,  7343,  7346,  7347,  7349,  7351,  7355,  7356,  7360,
    7361,  7365,  7366,  7370,  7371,  7375,  7377,  7379,  7381,  7383,
    7385,  7387,  7389,  7391,  7393,  7395,  7397,  7400,  7403,  7405,
    7409,  7412,  7415,  7418,  7421,  7424,  7427,  7430,  7433,  7435,
    7437,  7440,  7441,  7443,  7447,  7449,  7452,  7455,  7458,  7460,
    7464,  7468,  7470,  7472,  7476,  7478,  7482,  7487,  7493,  7498,
    7505,  7512,  7514,  7515,  7519,  7523,  7525,  7527,  7528,  7531,
    7534,  7537,  7540,  7541,  7544,  7545,  7549,  7552,  7554,  7557,
    7560,  7563,  7566,  7569,  7570,  7574,  7575,  7577,  7578,  7582,
    7585,  7586,  7588,  7591,  7592,  7594,  7599,  7604,  7610,  7613,
    7617,  7618,  7620,  7624,  7625,  7627,  7629,  7630,  7632,  7634,
    7637,  7639,  7640,  7642,  7644,  7648,  7653,  7655,  7660,  7661,
    7664,  7665,  7667,  7670,  7672,  7674,  7676,  7678,  7680,  7682,
    7684,  7686,  7688,  7691,  7694,  7698,  7700,  7702,  7704,  7706,
    7708,  7710,  7712,  7714,  7716,  7718,  7720,  7722,  7724,  7725,
    7729,  7731,  7734,  7736,  7739,  7743,  7747,  7751,  7752,  7756,
    7760,  7761,  7769,  7770,  7774,  7776,  7780,  7781,  7785,  7786,
    7790,  7795,  7796,  7799,  7803,  7804,  7808,  7809,  7813,  7818,
    7823,  7825,  7827,  7828,  7831,  7832,  7845,  7853,  7860,  7861,
    7862,  7863,  7864,  7865,  7880,  7881,  7882,  7883,  7884,  7896,
    7901,  7906,  7910,  7915,  7919,  7923,  7924,  7927,  7929,  7933,
    7939,  7941,  7943,  7944,  7946,  7948,  7949,  7952,  7953,  7955,
    7959,  7965
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     669,     0,    -1,   155,    -1,    -1,   672,   670,   664,   671,
      -1,   672,   155,    -1,    -1,   155,    -1,   673,    -1,  1511,
      -1,  1065,    -1,  1144,    -1,  1146,    -1,   740,    -1,   685,
      -1,  1147,    -1,  1136,    -1,  1517,    -1,   707,    -1,   674,
      -1,  1335,    -1,  1361,    -1,  1297,    -1,  1299,    -1,   678,
      -1,  1368,    -1,   775,    -1,  1117,    -1,  1484,    -1,  1474,
      -1,   683,    -1,  1312,    -1,  1581,    -1,  1388,    -1,  1391,
      -1,  1465,    -1,  1152,    -1,  1160,    -1,   977,    -1,   894,
      -1,  1167,    -1,   676,    -1,  1384,    -1,  1520,    -1,  1155,
      -1,  1139,    -1,  1313,    -1,  1378,    -1,   774,    -1,  1481,
      -1,  1518,    -1,  1519,    -1,  1178,    -1,  1444,    -1,   767,
      -1,  1346,    -1,  1473,    -1,  1118,    -1,  1122,    -1,  1339,
      -1,  1582,    -1,  1471,    -1,  1331,    -1,  1390,    -1,  1574,
      -1,   675,   413,  1438,    -1,   120,    -1,   143,    -1,   413,
    1438,   196,   677,    -1,  1435,    -1,   665,  1440,    -1,    -1,
     169,  1438,   679,   680,    -1,    -1,   612,   681,    -1,   681,
     660,   682,    -1,   682,    -1,   665,  1440,    -1,    -1,   217,
     684,  1440,    -1,    -1,    58,   314,   580,   686,   701,   706,
      -1,    -1,    58,   455,   184,   687,   688,    -1,   689,    -1,
     688,   660,   689,    -1,   456,   159,   690,    -1,   457,   159,
     690,    -1,   458,   159,   695,    -1,   459,   159,   695,    -1,
     460,   159,   698,    -1,   461,   159,   698,    -1,   462,   159,
     693,    -1,   658,   659,    -1,   658,   691,   659,    -1,   692,
      -1,   691,   660,   692,    -1,  1438,    -1,   658,   659,    -1,
     658,   694,   659,    -1,   658,   692,   660,   692,   659,    -1,
     694,   660,   658,   692,   660,   692,   659,    -1,   658,   659,
      -1,   658,   696,   659,    -1,   697,    -1,   696,   660,   697,
      -1,  1438,   666,  1438,    -1,   658,   659,    -1,   658,   699,
     659,    -1,   700,    -1,   699,   660,   700,    -1,  1434,    -1,
     702,    -1,   701,   660,   702,    -1,   297,   159,  1433,    -1,
     294,   159,  1433,    -1,   315,   159,  1433,    -1,   300,   159,
    1433,    -1,   301,   159,  1283,    -1,   295,   159,  1283,    -1,
     302,   159,  1283,    -1,   296,   159,  1283,    -1,   312,   159,
    1283,    -1,   306,   159,  1433,    -1,   304,   159,  1433,    -1,
     305,   159,  1433,    -1,   307,   159,  1433,    -1,   308,   159,
    1433,    -1,   311,   159,  1433,    -1,   313,   159,  1283,    -1,
     309,   159,  1433,    -1,   310,   159,  1433,    -1,   316,   159,
    1420,    -1,   231,   159,   658,   703,   659,    -1,   293,   159,
    1283,    -1,   705,    -1,    -1,   704,    -1,   703,   660,   704,
      -1,  1283,    -1,   298,   159,  1433,    -1,   299,   159,  1285,
      -1,   443,   159,  1433,    -1,   444,   159,  1283,    -1,    -1,
     193,    60,  1433,    -1,    -1,    98,   944,   563,   947,  1429,
     708,   884,    -1,    -1,    -1,    98,  1043,   234,  1438,  1047,
     376,  1429,   709,   658,  1060,   659,  1048,   710,  1109,    -1,
      -1,    -1,    98,  1044,   234,  1438,  1046,   376,  1429,   711,
     658,  1060,   659,  1049,   712,  1109,    -1,    -1,    -1,    98,
    1045,   234,  1438,  1046,   376,  1429,   713,   658,  1060,   659,
    1050,   714,  1109,    -1,    -1,    98,   107,   947,  1438,   715,
     941,    -1,    -1,    98,   716,  1535,    -1,    98,   609,   947,
     732,  1501,  1506,  1078,  1074,    -1,    98,   284,   211,   847,
      -1,    98,   561,   844,    -1,    98,   496,  1440,   192,   110,
     639,  1440,   382,   658,   717,   659,    -1,   718,    -1,   717,
     660,   718,    -1,   609,  1435,    -1,   220,  1435,    -1,   107,
    1435,    -1,   392,  1435,    -1,   402,  1435,    -1,   512,  1435,
      -1,   409,  1283,    -1,    -1,   166,   947,   734,   720,   376,
     485,   721,   726,   723,   728,   142,   729,    -1,    -1,   167,
    1197,  1259,   722,   724,   725,    -1,    25,  1197,    -1,    -1,
     151,    -1,   136,   376,   508,    -1,   136,    -1,    -1,   535,
    1197,    -1,    -1,   154,  1197,    -1,    -1,   727,    -1,   376,
      81,   414,    -1,   376,    81,   365,   414,    -1,    -1,    77,
    1435,    -1,    -1,   730,   731,    -1,   792,    -1,   794,    -1,
     790,    -1,   811,    -1,   829,    -1,   831,    -1,   826,    -1,
     796,    -1,   798,    -1,   799,    -1,   800,    -1,   801,    -1,
     803,    -1,   733,    -1,    -1,  1438,   666,  1438,    -1,  1438,
      -1,    -1,   735,   737,    -1,    -1,   736,   738,    -1,    77,
    1435,    -1,   263,   530,    -1,   367,   530,    -1,    92,   530,
      -1,   429,   530,   110,    -1,   341,   530,   110,    -1,   739,
      -1,   737,    -1,   133,    -1,  1203,   133,    -1,   530,   489,
     126,    -1,   530,   489,   246,    -1,    -1,    51,   734,   741,
     742,    -1,    -1,   658,   743,   659,    -1,    -1,   744,    -1,
     744,   660,  1197,    -1,  1197,    -1,    -1,   746,    -1,   746,
     660,   748,    -1,   748,    -1,    -1,  1438,   747,  1002,    -1,
      -1,   750,    -1,   750,   660,   751,    -1,   751,    -1,   752,
     747,  1438,  1002,    -1,    -1,   247,    -1,   391,    -1,   238,
      -1,    -1,   753,   789,   664,    -1,   789,   664,    -1,   754,
     789,   664,    -1,    -1,   755,   756,   664,    -1,    -1,   123,
     786,   757,  1002,   787,    -1,   123,  1438,    85,   193,   763,
      -1,    -1,   123,   760,   214,   193,   758,   761,   789,    -1,
      -1,   123,  1438,   104,   193,   759,  1178,    -1,   171,    -1,
      94,    -1,   762,    -1,   761,   660,   762,    -1,   766,    -1,
    1283,    -1,   764,    -1,   519,   765,  1436,    -1,    -1,   618,
      -1,   763,    -1,  1438,    -1,   520,    -1,  1203,   195,    -1,
     518,    -1,   505,   768,   770,    -1,  1438,    -1,   764,    -1,
      -1,   768,    -1,    -1,   498,   771,    -1,   773,   159,   772,
      -1,   771,   660,   773,   159,   772,    -1,  1419,    -1,  1220,
      -1,  1425,    -1,    66,    -1,   548,    -1,    89,    -1,    91,
      -1,    90,    -1,    56,    -1,   486,    -1,   565,    -1,    76,
      -1,   105,    -1,   332,    -1,   349,    -1,   465,   769,   770,
      -1,   207,   776,   134,   777,    -1,    -1,   102,    -1,   533,
      -1,   778,    -1,    85,   782,   783,    -1,   779,    -1,   778,
     660,   779,    -1,   780,   159,   781,    -1,  1438,    -1,   665,
    1440,    -1,   372,    -1,   482,    -1,   772,    -1,   784,    -1,
     783,   660,   784,    -1,   780,   159,   785,    -1,    66,    -1,
     548,    -1,    89,    -1,    91,    -1,    90,    -1,    56,    -1,
     486,    -1,   565,    -1,    76,    -1,   105,    -1,   332,    -1,
     349,    -1,   470,    -1,  1438,    -1,   786,   660,  1438,    -1,
      -1,    -1,   124,   788,  1197,    -1,   792,    -1,   794,    -1,
     790,    -1,   811,    -1,   829,    -1,   831,    -1,   826,    -1,
     796,    -1,   798,    -1,   799,    -1,   800,    -1,   801,    -1,
     803,    -1,    -1,   229,   791,   806,   153,   229,    -1,    -1,
     793,   673,    -1,    -1,   472,   795,  1197,    -1,    -1,   797,
     835,    -1,   268,  1439,    -1,   255,  1439,    -1,   379,  1438,
      -1,    -1,   181,   804,  1438,   244,   802,   805,    -1,    68,
    1438,    -1,    -1,   361,   196,    -1,   196,    -1,  1438,    -1,
     805,   660,  1438,    -1,    -1,    -1,    -1,   807,  1197,   808,
     572,   754,   809,   810,    -1,    -1,   150,   806,    -1,   149,
     754,    -1,   812,    -1,   815,    -1,    -1,    -1,    54,   813,
    1197,   814,   817,   825,   153,    54,    -1,    -1,    54,   816,
     818,   825,   153,    54,    -1,   819,    -1,   817,   819,    -1,
     822,    -1,   818,   822,    -1,    -1,    -1,   631,   820,  1197,
     821,   572,   754,    -1,    -1,    -1,   631,   823,  1197,   824,
     572,   754,    -1,    -1,   149,   754,    -1,    -1,  1439,   667,
     827,   835,   828,    -1,    -1,  1439,    -1,    -1,  1439,   667,
     830,   833,   828,    -1,    -1,   832,   833,    -1,    -1,    32,
     834,   755,   753,   153,    -1,   290,   754,   153,   290,    -1,
      -1,    -1,   633,   836,  1197,   837,   142,   754,   153,   633,
      -1,    -1,    -1,   453,   754,   605,   838,  1197,   839,   153,
     453,    -1,    31,    -1,     9,    -1,   240,    -1,   606,    -1,
     129,    -1,   869,   871,    -1,   869,    58,   866,   850,    -1,
     869,     7,   866,   845,   854,    -1,    -1,   611,   284,   211,
    1438,    -1,   869,     7,   866,   857,    -1,   869,   143,   866,
     857,    -1,   870,   849,   860,    -1,   870,   849,   863,    -1,
       7,   867,    -1,     7,   868,    -1,    -1,   851,   852,    -1,
     853,    -1,   852,   853,    -1,   852,   660,   853,    -1,   872,
      -1,   873,    -1,   874,    -1,    -1,   855,    -1,   856,    -1,
     855,   856,    -1,   855,   660,   856,    -1,   872,    -1,   873,
      -1,   874,    -1,   875,    -1,   878,    -1,   880,    -1,   882,
      -1,   879,    -1,   881,    -1,    -1,   858,    -1,   859,    -1,
     858,   859,    -1,   858,   660,   859,    -1,   872,    -1,   873,
      -1,   874,    -1,   880,    -1,   882,    -1,    -1,   861,    -1,
     862,    -1,   861,   862,    -1,   861,   660,   862,    -1,   872,
      -1,   876,    -1,   877,    -1,   878,    -1,   880,    -1,   882,
      -1,   879,    -1,    -1,   864,    -1,   865,    -1,   864,   865,
      -1,   864,   660,   865,    -1,   872,    -1,   880,    -1,   882,
      -1,   109,  1435,    -1,   595,  1435,    -1,   436,  1435,    -1,
    1438,    -1,  1438,    -1,   430,    -1,   432,    -1,   365,     4,
      -1,   236,  1325,   883,    -1,    26,  1325,   883,    -1,   321,
    1325,   883,    -1,   176,  1325,   883,    -1,   596,  1325,   883,
      -1,   437,  1325,   883,    -1,   362,  1325,  1284,    -1,    77,
    1325,  1435,    -1,  1353,   157,  1325,   955,    -1,   183,  1325,
     883,    -1,   627,    -1,   368,    -1,  1286,    -1,  1432,    -1,
     658,   885,    -1,   948,   890,   887,    -1,   273,  1429,    -1,
     658,   273,  1429,   659,    -1,   960,   659,   948,   890,   887,
      -1,    -1,   890,   939,   659,   886,  1523,    -1,    -1,    -1,
    1399,   940,   939,   888,  1521,    -1,    -1,  1399,   940,   658,
     939,   659,   889,  1523,    -1,   891,    -1,    -1,   892,    -1,
      -1,   399,   893,   896,    -1,    -1,   399,   895,   896,    -1,
      48,   897,   907,   908,   915,    -1,   899,   261,   900,   658,
     901,   659,    -1,    -1,   899,   215,   898,   905,    -1,   428,
     905,    -1,   428,   904,    -1,   278,   905,    -1,   278,   904,
      -1,    -1,   275,    -1,    -1,    12,   159,  1284,    -1,    -1,
     902,    -1,   903,    -1,   902,   660,   903,    -1,  1438,    -1,
      73,   658,   901,   659,    -1,   658,   913,   659,    -1,   658,
     913,   659,    -1,    -1,   400,  1284,    -1,    -1,    -1,   552,
      48,   899,   215,   906,   909,   914,    -1,    -1,   552,    48,
     899,   261,   900,   658,   911,   659,   910,   914,    -1,   912,
      -1,   911,   660,   912,    -1,  1438,    -1,  1200,    -1,    -1,
     551,  1284,    -1,    -1,   658,   916,   659,    -1,   917,    -1,
     916,   660,   917,    -1,    -1,   399,   918,   919,   920,   936,
     931,    -1,  1438,    -1,    -1,    -1,   617,   270,   571,   921,
     923,    -1,    -1,   617,   247,   922,   924,    -1,   325,    -1,
     926,    -1,   926,    -1,   658,   925,   659,    -1,   926,    -1,
     925,   660,   926,    -1,    -1,    -1,   658,   927,   929,   928,
     659,    -1,   930,    -1,   929,   660,   930,    -1,   325,    -1,
    1200,    -1,    -1,   658,   932,   659,    -1,   933,    -1,   932,
     660,   933,    -1,    -1,   552,   934,   935,   936,    -1,  1440,
      -1,    -1,   937,    -1,   937,   938,    -1,   938,    -1,   561,
    1325,  1438,    -1,  1353,   157,  1325,   955,    -1,   362,  1325,
    1284,    -1,   320,  1325,  1286,    -1,   338,  1325,  1286,    -1,
     110,   135,  1325,  1435,    -1,   234,   135,  1325,  1435,    -1,
      77,  1325,  1435,    -1,   490,  1189,  1193,  1185,    -1,    -1,
      21,    -1,    -1,   942,    -1,   943,    -1,   942,   943,    -1,
     954,    -1,   953,    -1,    -1,   945,    -1,   946,    -1,   946,
     945,    -1,   566,    -1,    -1,   229,  1203,   170,    -1,    -1,
     950,    -1,   951,    -1,   951,   949,    -1,   951,    -1,   951,
     950,    -1,   951,   660,   950,    -1,   157,  1325,   955,    -1,
     320,  1325,  1285,    -1,   338,  1325,  1285,    -1,    28,  1325,
    1283,    -1,   402,  1325,  1435,    -1,    77,  1325,  1435,    -1,
      83,  1325,  1435,    -1,    27,  1325,  1285,    -1,   393,  1325,
    1283,    -1,   393,  1325,   124,    -1,   537,  1325,  1283,    -1,
     537,  1325,   124,    -1,   538,  1325,  1283,    -1,   538,  1325,
     124,    -1,   539,  1325,  1283,    -1,   539,  1325,   124,    -1,
      63,  1325,  1283,    -1,   564,  1325,  1283,    -1,   128,  1325,
    1283,    -1,   480,  1325,   957,    -1,    -1,   600,  1325,   952,
     658,  1377,   659,    -1,   953,    -1,   954,    -1,   241,  1325,
     958,    -1,   110,   135,  1325,  1435,    -1,   234,   135,  1325,
    1435,    -1,   561,  1325,  1438,    -1,   544,   138,    -1,   544,
     330,    -1,    86,  1325,  1435,    -1,   260,  1325,  1283,    -1,
    1015,  1005,  1325,  1007,    -1,  1015,    71,  1325,  1014,    -1,
    1440,    -1,  1440,    -1,   124,    -1,   186,    -1,   147,    -1,
      82,    -1,   438,    -1,    80,    -1,   367,    -1,   185,    -1,
     264,    -1,   547,    -1,   433,    -1,   122,    -1,   245,    -1,
     961,    -1,   962,    -1,   961,   660,   962,    -1,   963,    -1,
     964,    -1,   969,   965,    -1,   969,  1032,    -1,  1038,  1062,
    1047,   658,  1060,   659,  1048,    -1,  1044,  1041,  1062,  1046,
     658,  1060,   659,  1049,    -1,  1045,  1041,  1062,  1046,   658,
    1060,   659,  1050,    -1,   967,  1039,  1062,  1047,   658,  1060,
     659,  1048,    -1,   967,   192,   261,  1062,   658,  1060,   659,
    1032,    -1,   967,   966,    -1,    -1,   966,    -1,    64,   658,
    1197,   659,    -1,    -1,   968,    -1,    88,  1062,    -1,    -1,
    1428,   970,   971,    -1,   979,   999,    -1,   979,  1013,   972,
      21,   658,   978,   659,   976,   973,    -1,    -1,   202,    15,
      -1,    -1,   974,    -1,   974,   975,    -1,   975,    -1,   601,
      -1,   601,   261,    -1,    77,  1435,    -1,  1203,   370,    -1,
     370,    -1,  1031,   261,    -1,    -1,   626,    -1,   545,    -1,
     397,   658,   978,   659,    -1,  1197,    -1,   987,   997,   993,
      -1,   988,   998,   993,    -1,   188,   989,   993,    -1,    40,
      -1,    40,   996,    -1,    45,    -1,    44,    -1,   983,   996,
    1018,    -1,   983,  1018,    -1,   984,   996,  1019,    -1,   984,
    1019,    -1,    35,   996,    -1,    35,    -1,   985,   996,  1018,
      -1,   986,   996,  1019,    -1,   619,   996,    -1,   647,   997,
     993,    -1,   114,    -1,   576,   991,    -1,   573,   991,    -1,
     111,   991,    -1,   577,    -1,    42,   997,    -1,   982,    -1,
     326,    -1,   286,    -1,   289,   619,    -1,   289,   985,  1018,
      -1,   579,  1018,    -1,   570,   997,  1018,    -1,   328,  1018,
      -1,   287,  1018,    -1,   122,   989,   993,    -1,   373,   989,
     993,    -1,   186,   989,   993,    -1,    -1,   158,   980,   658,
    1064,   659,  1018,    -1,    -1,   498,   981,   658,  1064,   659,
    1018,    -1,   289,  1018,    -1,   494,    -1,   258,    -1,   205,
      -1,   204,    -1,   407,    -1,   346,    -1,   277,    -1,   345,
      -1,   408,    -1,   347,    -1,    62,    -1,   355,    -1,   352,
      62,    -1,   983,   623,    -1,   620,    -1,   352,   620,    -1,
     374,    -1,   355,   620,    -1,   352,    62,   623,    -1,   355,
     623,    -1,   245,    -1,   578,    -1,   510,    -1,   327,    -1,
      34,    -1,   433,    -1,   141,    -1,   141,   412,    -1,    -1,
     996,    -1,   990,    -1,   658,   371,   660,   371,   659,    -1,
      -1,   658,   371,   659,    -1,    -1,   658,   659,    -1,   658,
     371,   659,    -1,    -1,   994,    -1,   994,   995,    -1,   995,
      -1,   506,    -1,   604,    -1,   648,    -1,   658,   288,   659,
      -1,   658,   591,   659,    -1,   658,   121,   659,    -1,   658,
     371,   659,    -1,    -1,   996,    -1,    -1,   990,    -1,    -1,
    1000,    -1,  1000,  1001,    -1,  1001,    -1,   370,    -1,  1203,
     370,    -1,   124,  1004,    -1,   376,   606,  1003,    -1,    27,
      -1,   494,   124,   618,    -1,  1031,   261,    -1,   601,    -1,
     601,   261,    -1,    77,  1435,    -1,    71,  1011,    -1,    75,
     124,    -1,    75,   186,    -1,    75,   147,    -1,   544,   124,
      -1,   544,   138,    -1,   544,   330,    -1,   979,  1012,    -1,
     366,   992,    -1,  1003,    -1,  1418,    -1,    62,   498,    -1,
      61,    -1,  1440,    -1,    35,    -1,  1006,    -1,   124,    -1,
      -1,  1005,  1007,    -1,  1440,    -1,    35,    -1,  1009,    -1,
     124,    -1,  1440,    -1,    -1,    71,  1014,    -1,    -1,    71,
    1011,    -1,  1011,    -1,   124,    -1,    -1,   124,    -1,    23,
      -1,    35,    23,    -1,    23,    35,    -1,   598,    -1,   598,
      35,    -1,    35,   598,    -1,    -1,  1016,    -1,  1017,    -1,
      49,    -1,  1005,  1006,  1019,    -1,    35,    -1,    35,  1005,
    1006,    -1,    -1,    35,    -1,    -1,   658,  1284,  1021,   659,
      -1,    22,    -1,   130,    -1,   473,    -1,    -1,  1022,    -1,
    1022,  1023,    -1,  1023,    -1,  1284,    -1,  1025,  1024,    -1,
    1026,    -1,  1027,   660,  1026,    -1,  1025,   651,  1025,    -1,
    1027,    -1,  1028,    -1,    -1,   271,  1029,    -1,    -1,   416,
      -1,   439,  1429,  1033,  1035,  1036,    -1,    -1,   658,  1034,
     659,    -1,  1034,   660,  1438,    -1,  1438,    -1,    -1,   317,
     197,    -1,   317,   398,    -1,   317,   507,    -1,    -1,   376,
     606,  1037,    -1,   376,   129,  1037,    -1,   376,   606,  1037,
     376,   129,  1037,    -1,   376,   129,  1037,   376,   606,  1037,
      -1,   468,    -1,    52,    -1,   498,   370,    -1,   367,     6,
      -1,   498,   124,    -1,  1040,    -1,   416,   261,    -1,   601,
    1041,    -1,   261,    -1,   234,    -1,    -1,  1040,    -1,   259,
      -1,   234,    -1,   233,    -1,    -1,   601,    -1,   198,    -1,
     516,    -1,    -1,  1046,    -1,  1046,  1054,    -1,    -1,  1051,
      -1,    -1,  1053,    -1,    -1,  1052,    -1,  1056,    -1,  1051,
    1056,    -1,  1057,    -1,  1052,  1057,    -1,  1058,    -1,  1053,
    1058,    -1,   612,  1059,    -1,   589,  1059,    -1,   260,  1325,
    1283,    -1,    77,  1435,    -1,  1055,    -1,  1054,    -1,  1055,
      -1,  1055,    -1,   634,   396,  1432,    -1,    47,    -1,   483,
      -1,   215,    -1,  1060,   660,  1061,  1277,    -1,  1061,  1277,
      -1,  1438,    -1,  1438,   658,   371,   659,    -1,    -1,  1428,
      -1,    -1,   666,  1438,    -1,  1416,    -1,  1064,   660,  1416,
      -1,    -1,    14,   563,  1429,  1066,  1086,    -1,    -1,    14,
     107,  1085,  1067,   942,    -1,    14,   107,  1438,   607,   110,
     135,   351,    -1,    -1,    14,   418,   734,  1068,   735,    -1,
      -1,    14,   199,   734,  1069,   735,    -1,    -1,    14,  1543,
    1538,  1070,  1545,    -1,    -1,    14,  1538,  1071,  1545,    -1,
      -1,    14,  1538,   166,   734,  1072,  1082,  1083,   723,   728,
    1084,    -1,    14,   561,   846,    -1,    14,   284,   211,   848,
      -1,    14,   561,   843,    -1,    14,   561,   842,    -1,    14,
     496,  1440,   382,   658,   717,   659,    -1,  1073,  1501,  1506,
    1078,  1074,    -1,  1073,  1081,   227,    48,   569,    -1,    14,
     609,  1307,   732,    -1,    -1,  1075,    -1,  1076,    -1,  1075,
    1076,    -1,     5,   603,    -1,     5,   283,    -1,  1077,    -1,
    1077,   243,  1284,   119,    -1,  1077,   359,    -1,  1077,   124,
      -1,   402,   173,   733,    -1,    -1,   634,  1079,    -1,  1079,
    1080,    -1,  1080,    -1,   319,  1283,    -1,   323,  1283,    -1,
     318,  1283,    -1,   324,  1283,    -1,   609,   658,   659,    -1,
      -1,   376,   485,   721,    -1,   727,    -1,   376,   485,   721,
     727,    -1,    -1,   449,   580,   734,    -1,    -1,   142,   729,
      -1,    -1,  1438,    -1,    -1,   137,   561,    -1,   232,   561,
      -1,  1103,   891,    -1,  1103,  1092,    -1,  1092,    -1,   892,
      -1,  1094,    -1,   143,   399,  1101,    -1,   434,   399,  1154,
    1093,    -1,    -1,   380,   399,  1154,  1093,  1087,  1154,    -1,
      17,   399,  1154,  1093,    -1,    -1,    64,   399,  1093,  1088,
    1149,    -1,    -1,   451,   399,  1154,  1093,  1089,  1141,    -1,
      69,   399,  1154,  1284,    -1,   587,   399,  1093,    -1,  1097,
      -1,   168,   399,  1102,   634,   563,  1429,  1090,    -1,   137,
     399,  1093,   561,    -1,   232,   399,  1093,   561,    -1,    -1,
    1091,    -1,   634,   616,    -1,   637,   616,    -1,   448,   401,
      -1,    13,    -1,  1101,    -1,    -1,     7,   399,  1154,  1095,
    1096,    -1,    -1,   658,   916,   659,    -1,   400,  1284,    -1,
      -1,   450,   399,  1154,  1098,  1099,    -1,    -1,    -1,  1101,
    1100,   244,   658,   916,   659,    -1,  1102,    -1,  1101,   660,
    1102,    -1,  1438,    -1,  1105,    -1,  1103,   660,  1105,    -1,
       7,  1112,    -1,  1104,   963,  1115,    -1,     7,   964,    -1,
    1104,   658,   960,   659,    -1,    -1,    58,  1112,  1428,  1106,
     969,  1115,    -1,    -1,    -1,   342,  1112,  1428,  1107,   971,
    1108,  1115,    -1,   143,  1112,  1428,  1114,    -1,   143,   192,
     261,  1428,    -1,   143,   416,   261,    -1,   143,  1040,  1428,
      -1,   136,   259,    -1,   151,   259,    -1,    14,  1112,  1428,
     498,   124,  1418,    -1,    14,  1112,  1428,   143,   124,    -1,
     449,  1116,  1429,    -1,   449,  1040,  1428,   580,  1428,    -1,
      95,   580,  1005,  1007,  1012,    -1,   949,    -1,   191,    -1,
    1271,    -1,  1110,    -1,  1111,    -1,   607,   401,    -1,  1091,
      -1,    -1,  1111,    -1,  1110,    -1,  1111,  1110,    -1,  1110,
    1111,    -1,    12,  1325,   124,    -1,    12,  1325,  1438,    -1,
     283,  1325,   124,    -1,   283,  1325,  1438,    -1,    -1,    74,
      -1,    -1,   230,    -1,    -1,   468,    -1,    52,    -1,    -1,
       9,  1438,    -1,   185,    -1,    -1,   580,    -1,   159,    -1,
      21,    -1,   536,   203,    -1,   543,   203,    -1,  1119,  1120,
      -1,   543,   508,  1131,   706,    -1,   536,   508,  1131,    -1,
      -1,  1134,  1126,  1121,   706,    -1,   536,   582,  1123,    -1,
      -1,  1124,    -1,  1125,    -1,  1124,   660,  1125,    -1,   634,
      87,   511,    -1,   431,   378,    -1,   431,   640,    -1,  1127,
    1128,  1129,  1130,    -1,    -1,   609,   159,  1435,    -1,    -1,
     402,   159,  1435,    -1,    -1,   125,   159,  1435,    -1,    -1,
     404,   159,  1435,    -1,    -1,  1132,    -1,  1133,    -1,  1132,
     660,  1133,    -1,   531,    -1,   445,    -1,    -1,   605,  1135,
      -1,   705,    -1,  1135,   660,   705,    -1,   523,   159,  1435,
      -1,   521,   159,  1435,    -1,   522,    -1,    -1,    63,  1467,
    1137,  1304,  1138,    -1,    -1,   427,    -1,   175,    -1,    -1,
     451,  1154,  1467,  1140,  1304,  1141,    -1,    -1,  1142,    -1,
    1143,    -1,  1143,  1142,    -1,   427,    -1,   175,    -1,   610,
      -1,    -1,    17,  1154,  1467,  1145,  1304,    -1,    36,  1435,
      -1,    -1,    64,  1467,  1148,  1304,  1149,    -1,    -1,  1150,
      -1,  1151,    -1,  1151,  1150,    -1,   427,    -1,   179,    -1,
     329,    -1,   175,    -1,    59,    -1,   193,   607,    -1,    -1,
     380,  1154,  1467,  1153,  1304,    -1,    -1,   369,    -1,   280,
      -1,    -1,   449,  1467,  1156,  1158,    -1,   449,   609,   732,
    1157,    -1,  1441,   580,  1441,    -1,  1157,   660,  1441,   580,
    1441,    -1,  1159,    -1,  1158,   660,  1159,    -1,  1429,   580,
    1429,    -1,    -1,    50,   234,  1161,  1162,   247,  1166,    -1,
    1163,    -1,  1165,    -1,  1164,    -1,  1163,   660,  1164,    -1,
    1429,  1175,    -1,  1429,  1173,  1175,    -1,  1438,    -1,   124,
      -1,    -1,   279,   234,   244,    50,  1168,  1169,    -1,  1172,
      -1,  1170,    -1,  1171,    -1,  1170,   660,  1171,    -1,  1429,
    1175,  1177,    -1,  1429,  1173,  1175,  1177,    -1,    -1,   399,
    1174,   658,  1093,   659,    -1,  1176,    -1,    -1,  1040,   658,
    1255,   659,    -1,    -1,   230,   267,    -1,  1179,    -1,   490,
    1182,  1521,    -1,   658,  1180,   659,  1523,    -1,   490,  1182,
      -1,   658,  1180,   659,    -1,   490,  1245,  1185,    -1,   658,
    1181,   659,    -1,  1183,  1274,  1278,  1192,    -1,  1183,  1295,
    1192,    -1,  1183,  1294,  1186,  1265,  1268,  1266,  1274,  1278,
    1289,  1294,  1192,    -1,    -1,  1184,  1189,  1193,    -1,  1187,
    1265,  1268,  1266,  1274,  1278,  1289,  1192,    -1,   196,  1188,
      -1,    -1,  1186,    -1,  1236,    -1,   144,    -1,    -1,  1190,
      -1,  1190,  1191,    -1,  1191,    -1,  1534,    -1,   528,    -1,
     526,    -1,    -1,   193,   606,    -1,   283,   247,   500,   340,
      -1,  1193,   660,  1194,    -1,  1194,    -1,   653,    -1,  1423,
      -1,  1197,  1195,    -1,    -1,    21,  1438,    -1,    21,  1435,
      -1,  1438,    -1,  1435,    -1,    -1,   658,   659,    -1,  1197,
    1201,  1197,    -1,  1197,   645,  1197,    -1,  1197,  1202,  1197,
      -1,   365,  1197,    -1,  1198,   252,   586,    -1,  1198,   252,
    1203,   586,    -1,  1198,   252,   178,    -1,  1198,   252,  1203,
     178,    -1,  1198,   252,   602,    -1,  1198,   252,  1203,   602,
      -1,  1198,    -1,  1198,   252,   370,    -1,  1198,   252,  1203,
     370,    -1,  1198,  1205,  1199,    -1,  1198,  1205,  1206,   658,
    1530,   659,    -1,  1199,    -1,  1200,   247,   658,  1530,   659,
      -1,  1200,  1203,   247,   658,  1530,   659,    -1,  1200,   247,
     658,  1197,   659,    -1,  1200,   247,   658,  1197,   660,  1229,
     659,    -1,  1200,  1203,   247,   658,  1197,   659,    -1,  1200,
    1203,   247,   658,  1197,   660,  1229,   659,    -1,  1200,    33,
    1200,    19,  1199,    -1,  1200,  1203,    33,  1200,    19,  1199,
      -1,  1200,   514,   273,  1200,    -1,  1200,   273,  1207,  1267,
      -1,  1200,  1203,   273,  1207,  1267,    -1,  1200,   440,  1200,
      -1,  1200,  1203,   440,  1200,    -1,  1200,    -1,  1200,   649,
    1200,    -1,  1200,   650,  1200,    -1,  1200,   501,  1200,    -1,
    1200,   502,  1200,    -1,  1200,   652,  1200,    -1,  1200,   651,
    1200,    -1,  1200,   652,   243,  1197,  1259,    -1,  1200,   651,
     243,  1197,  1259,    -1,  1200,   653,  1200,    -1,  1200,   654,
    1200,    -1,  1200,   655,  1200,    -1,  1200,   140,  1200,    -1,
    1200,   343,  1200,    -1,  1200,   656,  1200,    -1,  1207,    -1,
     388,    -1,   385,    -1,    19,    -1,    18,    -1,   365,    -1,
     364,    -1,   661,    -1,   364,    -1,   159,    -1,   160,    -1,
     200,    -1,   213,    -1,   265,    -1,   292,    -1,   357,    -1,
      13,    -1,    20,    -1,  1425,    -1,  1208,    -1,  1209,    -1,
    1212,    -1,  1210,    -1,  1207,    71,  1440,    -1,  1419,    -1,
    1417,    -1,  1220,    -1,  1219,    -1,  1207,   387,  1207,    -1,
     652,  1207,    -1,   651,  1207,    -1,   657,  1207,    -1,  1204,
    1207,    -1,   658,  1530,   659,    -1,   658,  1197,   659,    -1,
     658,  1197,   660,  1229,   659,    -1,   481,   658,  1197,   660,
    1229,   659,    -1,   170,   658,  1530,   659,    -1,   662,  1438,
    1197,   663,    -1,   317,  1230,    10,   658,  1200,  1213,   659,
      -1,    35,  1207,    -1,    55,   658,  1197,    21,  1227,   659,
      -1,    54,  1232,  1234,  1233,   153,    -1,    95,   658,  1197,
     660,  1227,   659,    -1,    95,   658,  1197,   612,  1006,   659,
      -1,   124,   658,  1425,   659,    -1,   617,   658,  1426,   659,
      -1,   243,  1197,  1259,   652,  1197,    -1,  1425,   257,  1436,
      -1,    62,   658,  1229,   659,    -1,    62,   658,  1229,   612,
    1006,   659,    -1,   103,  1196,    -1,   114,   658,  1197,   659,
      -1,   119,   658,  1197,   659,    -1,   225,   658,  1197,   659,
      -1,   240,   658,  1197,   660,  1197,   660,  1197,   660,  1197,
     659,    -1,   243,   658,  1197,   660,  1197,   659,    -1,   243,
     658,  1197,   660,  1197,   660,  1229,   659,    -1,   269,   658,
    1197,   660,  1197,   659,    -1,   337,   658,  1197,   659,    -1,
     344,   658,  1197,   659,    -1,   475,   658,  1197,   660,  1197,
     659,    -1,   488,   658,  1197,   659,    -1,   576,   658,  1197,
     659,    -1,   573,   658,  1197,   659,    -1,   573,   658,  1197,
     660,  1197,   659,    -1,   585,   658,  1197,   659,    -1,   585,
     658,   266,  1197,   196,  1197,   659,    -1,   585,   658,   581,
    1197,   196,  1197,   659,    -1,   585,   658,    46,  1197,   196,
    1197,   659,    -1,   585,   658,   266,   196,  1197,   659,    -1,
     585,   658,   581,   196,  1197,   659,    -1,   585,   658,    46,
     196,  1197,   659,    -1,   585,   658,  1197,   196,  1197,   659,
      -1,   609,   658,   659,    -1,   647,   658,  1197,   659,    -1,
       8,   658,  1197,   660,  1197,   659,    -1,     8,   658,  1197,
     660,   243,  1197,  1259,   659,    -1,   101,  1196,    -1,   106,
     992,    -1,   112,   658,  1197,   660,   243,  1197,  1259,   659,
      -1,   113,   658,  1197,   660,   243,  1197,  1259,   659,    -1,
     177,   658,  1259,   196,  1197,   659,    -1,   206,   658,  1261,
     660,  1197,   659,    -1,  1003,    -1,   410,   658,  1200,   247,
    1197,   659,    -1,   549,   658,  1197,   660,  1197,   659,    -1,
     549,   658,  1197,   660,   243,  1197,  1259,   659,    -1,   553,
     658,  1197,   660,  1197,   660,  1197,   659,    -1,   553,   658,
    1197,   660,  1197,   659,    -1,   553,   658,  1197,   196,  1197,
     193,  1197,   659,    -1,   553,   658,  1197,   196,  1197,   659,
      -1,   559,   992,    -1,   574,   658,  1260,   660,  1197,   660,
    1197,   659,    -1,   575,   658,  1260,   660,  1197,   660,  1197,
     659,    -1,   613,  1196,    -1,   615,   992,    -1,   614,   992,
      -1,    23,   658,  1197,   659,    -1,    61,   658,  1197,   659,
      -1,    69,   658,  1229,   659,    -1,    72,   658,  1197,   659,
      -1,   107,   658,   659,    -1,   229,   658,  1197,   660,  1197,
     660,  1197,   659,    -1,   194,   658,  1197,   660,  1197,   659,
      -1,   194,   658,  1197,   660,  1197,   660,  1197,   659,    -1,
     333,   658,  1197,   659,    -1,   343,   658,  1197,   660,  1197,
     659,    -1,   402,   658,  1197,   659,    -1,   425,   658,  1197,
     659,    -1,   453,   658,  1197,   660,  1197,   659,    -1,   454,
     658,  1197,   660,  1197,   660,  1197,   659,    -1,   473,   658,
    1197,   659,    -1,   482,   658,   659,    -1,   587,   658,  1197,
     660,  1197,   659,    -1,   629,   658,  1197,   659,    -1,   629,
     658,  1197,   660,  1197,   659,    -1,   630,   658,  1197,  1030,
     659,    -1,   630,   658,  1197,    21,    62,  1020,  1030,   659,
      -1,   630,   658,  1197,    21,    35,  1020,   659,    -1,   630,
     658,  1197,   660,  1283,   660,  1283,   660,  1283,   659,    -1,
    1211,    -1,    92,   658,  1197,   660,  1197,   659,    -1,   204,
     658,  1228,   659,    -1,   277,   658,  1229,   659,    -1,   345,
     658,  1229,   659,    -1,   346,   658,  1229,   659,    -1,   347,
     658,  1229,   659,    -1,   407,   658,  1197,   660,  1197,   659,
      -1,   408,   658,  1229,   659,    -1,  1432,   658,  1216,   659,
      -1,  1438,   666,  1438,   658,  1228,   659,    -1,  1214,  1215,
      -1,   247,    44,   340,    -1,    -1,   247,   353,   263,   340,
      -1,    -1,   634,   426,   172,    -1,    -1,  1217,    -1,  1218,
      -1,  1217,   660,  1218,    -1,  1197,  1195,    -1,    29,   658,
    1226,   659,    -1,    29,   658,   139,  1226,   659,    -1,    38,
     658,  1226,   659,    -1,    39,   658,  1226,   659,    -1,    41,
     658,  1226,   659,    -1,    96,   658,  1264,   653,   659,    -1,
      96,   658,  1226,   659,    -1,    96,   658,   139,  1229,   659,
      -1,   339,   658,  1226,   659,    -1,   339,   658,   139,  1226,
     659,    -1,   322,   658,  1226,   659,    -1,   322,   658,   139,
    1226,   659,    -1,   542,   658,  1226,   659,    -1,   622,   658,
    1226,   659,    -1,   541,   658,  1226,   659,    -1,   624,   658,
    1226,   659,    -1,   554,   658,  1226,   659,    -1,   554,   658,
     139,  1226,   659,    -1,   212,   658,  1222,  1229,  1224,  1223,
     659,    -1,   665,  1221,    -1,  1440,   499,  1197,    -1,  1440,
      -1,   665,  1452,  1440,  1063,    -1,    -1,   139,    -1,    -1,
     492,  1416,    -1,    -1,   386,    48,  1225,    -1,  1225,   660,
    1424,    -1,  1424,    -1,  1264,  1197,    -1,    35,   997,    -1,
      62,   997,  1018,    -1,   355,   997,    -1,   506,    -1,   506,
     245,    -1,   604,    -1,   604,   245,    -1,   114,    -1,   576,
     991,    -1,   111,   991,    -1,   122,   989,    -1,   258,    -1,
      -1,  1229,    -1,  1197,    -1,  1229,   660,  1197,    -1,  1231,
      -1,   658,  1231,   659,    -1,  1425,    -1,  1231,   660,  1425,
      -1,    -1,  1197,    -1,    -1,   149,  1197,    -1,   631,  1197,
     572,  1197,    -1,  1234,   631,  1197,   572,  1197,    -1,  1243,
      -1,  1239,    -1,  1238,    -1,  1235,    -1,   662,  1438,  1235,
     663,    -1,  1237,    -1,  1238,   660,  1237,    -1,  1235,  1240,
    1235,    -1,  1235,   546,  1243,    -1,  1235,  1240,  1235,   376,
    1197,    -1,  1235,   546,  1243,   376,  1197,    -1,  1235,  1240,
    1235,   612,   658,  1258,   659,    -1,  1235,   353,   256,  1243,
      -1,  1235,   269,  1248,   256,  1235,   376,  1197,    -1,  1235,
     269,  1248,   256,  1243,   612,   658,  1258,   659,    -1,  1235,
     353,   269,  1248,   256,  1243,    -1,  1235,   475,  1248,   256,
    1235,   376,  1197,    -1,  1235,   475,  1248,   256,  1243,   612,
     658,  1258,   659,    -1,  1235,   353,   475,  1248,   256,  1243,
      -1,   256,    -1,   237,   256,    -1,    99,   256,    -1,    -1,
    1242,    -1,   399,   658,  1258,   659,    -1,  1429,  1241,  1263,
    1254,    -1,   490,  1189,  1193,  1185,    -1,   658,  1244,   659,
    1263,    -1,  1247,  1524,    -1,  1244,   600,  1527,  1528,    -1,
      -1,  1246,  1532,  1193,    -1,  1238,    -1,    -1,   389,    -1,
      -1,   193,   256,    -1,   193,   386,    48,    -1,   193,   211,
      48,    -1,   191,    -1,   230,    -1,  1250,  1040,  1249,   658,
    1257,   659,    -1,   611,  1040,  1249,   658,  1255,   659,    -1,
    1251,    -1,  1252,  1251,    -1,    -1,  1252,    -1,  1253,    -1,
      -1,  1257,    -1,  1438,    -1,   416,    -1,  1256,    -1,  1257,
     660,  1256,    -1,  1438,    -1,  1258,   660,  1438,    -1,  1260,
      -1,   115,    -1,   116,    -1,   117,    -1,   118,    -1,   222,
      -1,   223,    -1,   224,    -1,   335,    -1,   336,    -1,   487,
      -1,   646,    -1,   119,    -1,   629,    -1,   225,    -1,   337,
      -1,   344,    -1,   425,    -1,   488,    -1,   333,    -1,   647,
      -1,   114,    -1,   576,    -1,   573,    -1,   111,    -1,    -1,
      21,    -1,   159,    -1,    -1,  1262,  1438,    -1,    -1,    13,
      -1,    -1,   632,  1197,    -1,    -1,   216,  1197,    -1,   164,
    1207,    -1,    -1,    -1,   211,    48,  1269,  1270,    -1,  1269,
     660,  1424,    -1,  1424,    -1,    -1,   635,    -1,   636,    -1,
     386,    48,  1272,    -1,  1272,   660,  1273,    -1,  1273,    -1,
    1426,  1277,    -1,    -1,  1275,    -1,   386,    48,  1276,    -1,
    1276,   660,  1424,    -1,  1424,    -1,    -1,    22,    -1,   130,
      -1,    -1,  1279,    -1,   274,  1280,    -1,  1281,    -1,  1281,
     660,  1281,    -1,  1281,   375,  1281,    -1,  1438,    -1,  1417,
      -1,   591,    -1,   288,    -1,   371,    -1,    -1,   274,  1281,
      -1,   371,    -1,   218,    -1,   288,    -1,   591,    -1,   121,
      -1,   187,    -1,   371,    -1,   218,    -1,   288,    -1,   591,
      -1,  1287,    -1,   371,    -1,   591,    -1,   288,    -1,   121,
      -1,   187,    -1,   371,    -1,   591,    -1,   288,    -1,  1287,
      -1,  1288,    -1,   121,    -1,   187,    -1,    -1,   418,    16,
     658,  1290,   659,    -1,    -1,  1291,    -1,  1291,   660,  1291,
      -1,   371,    -1,  1292,   660,  1293,    -1,  1293,    -1,   665,
    1440,    -1,  1440,    -1,    -1,  1295,    -1,   244,  1296,    -1,
     390,  1437,  1008,  1400,  1403,    -1,   145,  1437,    -1,  1292,
      -1,   142,  1298,  1193,    -1,    -1,    -1,   143,  1308,  1467,
    1307,  1300,  1304,  1114,    -1,    -1,    -1,   143,   234,  1438,
     376,  1429,  1301,  1302,  1109,    -1,   143,   107,  1307,  1438,
      -1,   143,   199,  1307,  1438,   666,  1438,    -1,   143,   199,
    1307,  1438,    -1,   143,   418,  1307,   734,    -1,   143,   609,
    1307,   732,  1500,    -1,    -1,   143,   625,  1307,  1303,  1304,
    1114,    -1,   143,   166,  1307,   734,    -1,   143,   584,  1307,
     734,    -1,   143,   561,   869,  1309,    -1,   143,   284,   211,
     870,  1309,    -1,   143,   496,  1307,  1440,    -1,  1305,    -1,
    1304,   660,  1305,    -1,  1429,    -1,  1430,    -1,  1306,   660,
    1430,    -1,    -1,   229,   170,    -1,    -1,   566,    -1,    -1,
    1310,    -1,  1311,    -1,  1310,  1311,    -1,  1309,   660,  1311,
      -1,   880,    -1,   882,    -1,   240,  1314,  1113,  1316,  1429,
    1241,  1317,  1330,    -1,   240,  1314,  1113,  1316,  1429,  1241,
     498,  1332,  1330,    -1,   240,  1314,  1113,  1316,  1429,  1241,
    1318,  1330,    -1,   454,  1315,  1316,  1429,  1241,  1317,    -1,
     454,  1315,  1316,  1429,  1241,   498,  1332,    -1,   454,  1315,
    1316,  1429,  1241,  1318,    -1,    -1,   291,    -1,   127,    -1,
     219,    -1,  1334,    -1,   127,    -1,    -1,   244,    -1,  1320,
      -1,   658,   659,  1320,    -1,   658,  1319,   659,  1320,    -1,
    1321,    -1,   658,   659,  1321,    -1,   658,  1319,   659,  1321,
      -1,  1319,   660,  1422,    -1,  1422,    -1,  1322,  1323,    -1,
     939,  1521,    -1,   658,   939,   659,  1523,    -1,   618,    -1,
     617,    -1,  1323,   660,  1326,    -1,  1326,    -1,   159,    -1,
     499,    -1,    -1,  1324,    -1,   658,  1327,   659,    -1,    -1,
    1328,    -1,  1328,   660,  1329,    -1,  1329,    -1,  1197,    -1,
     124,    -1,    -1,   376,   146,   261,   606,  1332,    -1,   606,
    1334,  1113,  1236,   498,  1332,  1265,  1274,  1282,    -1,  1332,
     660,  1333,    -1,  1333,    -1,  1426,  1324,  1329,    -1,    -1,
     291,    -1,   129,  1337,   196,  1429,  1241,  1265,  1274,  1282,
      -1,   129,  1337,  1306,   196,  1236,  1265,    -1,   129,  1337,
     196,  1306,   612,  1236,  1265,    -1,    -1,   666,   653,    -1,
      -1,  1338,  1337,    -1,   427,    -1,   291,    -1,   230,    -1,
      -1,   587,  1341,  1340,  1305,    -1,    -1,   563,    -1,    -1,
    1343,    -1,  1344,    -1,  1343,   660,  1344,    -1,    97,    -1,
     330,    -1,    43,   250,    -1,    93,   558,    -1,   394,   180,
      -1,   251,    -1,   557,    -1,   515,    -1,    13,    -1,    -1,
     193,   426,   371,    -1,    -1,   503,  1347,  1348,    -1,   108,
    1359,    -1,  1355,   560,  1354,  1359,    -1,  1355,   583,  1354,
    1359,    -1,   165,  1354,  1359,    -1,   563,   540,  1354,  1359,
      -1,   379,   560,  1354,  1359,    -1,   406,    -1,   157,   956,
    1351,    -1,   157,    13,  1351,    -1,  1355,    73,  1356,  1429,
    1354,  1359,    -1,  1352,   285,    -1,   508,   221,    -1,    -1,
      36,   165,  1357,  1358,  1349,  1278,    -1,    -1,   442,   165,
    1357,  1358,  1350,  1278,   706,    -1,  1042,  1356,  1429,  1354,
    1265,    -1,  1353,   156,    -1,   417,    -1,    96,   658,   653,
     659,   628,    -1,    96,   658,   653,   659,   162,    -1,   628,
    1278,    -1,   162,  1278,    -1,   422,    -1,   421,  1342,  1345,
    1278,    -1,  1451,   540,  1360,    -1,  1355,   420,    -1,  1451,
     621,  1360,    -1,  1005,  1359,    -1,    72,  1359,    -1,   210,
      -1,   210,   193,  1441,    -1,    98,   107,   947,  1438,    -1,
      98,   563,  1429,    -1,    98,   625,  1429,    -1,   314,   540,
      -1,   508,   540,   706,    -1,    98,   418,   734,    -1,    98,
     199,   734,    -1,    98,   584,   734,    -1,   418,   540,  1359,
      -1,   199,   540,  1359,    -1,   418,    70,   734,    -1,   199,
      70,   734,    -1,    98,   166,   734,    -1,    98,   609,   732,
    1441,    -1,   540,    -1,   348,    -1,   285,    -1,   314,    -1,
      35,    -1,    -1,   544,    -1,    -1,  1356,  1438,    -1,    -1,
     197,    -1,   196,    -1,   247,    -1,    -1,   247,  1435,    -1,
      -1,   196,  1285,    -1,    -1,   273,  1435,    -1,   632,  1197,
      -1,    -1,   273,  1435,    -1,   632,  1197,    -1,    -1,  1365,
    1429,  1362,  1367,    -1,    -1,  1365,  1366,  1363,  1364,    -1,
    1178,    -1,  1312,    -1,  1313,    -1,  1331,    -1,  1335,    -1,
     193,    86,  1284,    -1,   130,    -1,   131,    -1,    -1,   175,
      -1,   400,    -1,   194,   159,  1440,    -1,    -1,  1416,    -1,
    1438,    -1,    -1,   189,  1154,  1369,  1370,    -1,    -1,    -1,
    1467,  1371,  1377,  1372,  1373,    -1,  1375,    -1,    -1,   634,
     431,   283,    -1,    -1,   193,  1374,   174,    -1,  1375,   660,
    1376,    -1,  1376,    -1,   161,   285,    -1,   157,   285,    -1,
     201,   285,    -1,   509,   285,    -1,    35,   285,    -1,   441,
     285,   706,    -1,   426,    50,    -1,   221,    -1,   417,    -1,
     285,    -1,   540,    -1,   132,    -1,   466,    -1,   381,    -1,
      -1,  1304,    -1,    -1,   464,  1379,  1380,    -1,  1380,   660,
    1381,    -1,  1381,    -1,    -1,   508,  1382,  1383,   706,    -1,
     314,    -1,   426,    50,    -1,    -1,    13,    -1,    -1,   424,
    1385,  1386,    -1,  1352,   285,  1387,    -1,   580,  1435,    -1,
      31,  1197,    -1,   262,  1389,  1197,    -1,    -1,    86,    -1,
     426,    -1,   611,  1438,    -1,    -1,    -1,    -1,    -1,   279,
    1396,  1392,  1398,  1397,   235,  1437,  1393,  1399,   244,   563,
    1429,  1241,  1394,  1008,  1395,  1406,  1400,  1403,  1407,  1409,
    1412,    -1,   110,    -1,   644,    -1,    -1,   280,    -1,    -1,
      84,    -1,   291,    -1,    -1,   454,    -1,   230,    -1,    -1,
      73,  1401,    -1,  1401,  1402,    -1,  1402,    -1,   568,    48,
    1416,    -1,   384,   152,    48,  1416,    -1,   152,    48,  1416,
      -1,   163,    48,  1416,    -1,    -1,   276,  1404,    -1,  1404,
    1405,    -1,  1405,    -1,   568,    48,  1416,    -1,   534,    48,
    1416,    -1,    -1,   479,   227,    48,  1416,    -1,    -1,   230,
     371,  1408,    -1,   276,    -1,   479,    -1,    -1,   658,  1410,
     659,    -1,   658,   659,    -1,  1410,   660,  1411,    -1,  1411,
      -1,  1426,    -1,   665,  1440,    -1,    -1,   498,  1413,    -1,
    1413,   660,  1414,    -1,  1414,    -1,  1426,  1324,  1329,    -1,
     569,    -1,   354,    -1,   594,   569,    -1,  1415,  1436,    -1,
    1436,    -1,   218,    -1,    37,    -1,   395,    -1,  1419,    -1,
     652,  1420,    -1,   651,  1420,    -1,  1415,    -1,  1420,    -1,
    1421,    -1,   370,    -1,   178,    -1,   586,    -1,   218,    -1,
      37,    -1,   594,   218,    -1,   594,    37,    -1,   371,    -1,
     288,    -1,   591,    -1,   121,    -1,   187,    -1,   114,   569,
      -1,   576,   569,    -1,   573,   569,    -1,  1426,    -1,  1423,
      -1,  1438,   666,   653,    -1,  1438,   666,  1438,   666,   653,
      -1,  1197,  1277,    -1,  1438,    -1,  1427,    -1,  1438,    -1,
    1427,    -1,  1438,   666,  1438,    -1,   666,  1438,   666,  1438,
      -1,  1438,   666,  1438,   666,  1438,    -1,  1438,    -1,  1438,
     666,  1438,   666,  1438,    -1,  1438,   666,  1438,    -1,   666,
    1438,    -1,  1438,    -1,  1438,   666,  1438,    -1,   666,  1438,
      -1,  1438,  1336,    -1,  1438,   666,  1438,  1336,    -1,  1438,
      -1,   226,    -1,   228,    -1,  1435,    -1,  1433,    -1,   569,
      -1,   569,    -1,   569,    -1,  1432,    -1,  1442,    -1,  1432,
      -1,  1443,    -1,  1438,    -1,  1435,    -1,   272,    -1,  1440,
      -1,  1440,   665,  1440,    -1,   103,  1196,    -1,  1443,    -1,
       5,    -1,    23,    -1,    15,    -1,    30,    -1,    32,    -1,
      49,    -1,    50,    -1,    61,    -1,    63,    -1,    68,    -1,
      77,    -1,    79,    -1,    92,    -1,   120,    -1,   142,    -1,
     153,    -1,   169,    -1,   189,    -1,   190,    -1,   194,    -1,
     203,    -1,   214,    -1,   217,    -1,   220,    -1,   242,    -1,
     263,    -1,   367,    -1,   379,    -1,   382,    -1,   392,    -1,
     396,    -1,   397,    -1,   409,    -1,   411,    -1,   413,    -1,
     448,    -1,   451,    -1,   464,    -1,   467,    -1,   476,    -1,
     484,    -1,   489,    -1,   496,    -1,   504,    -1,   506,    -1,
     512,    -1,   508,    -1,   513,    -1,   536,    -1,   543,    -1,
     587,    -1,   598,    -1,   599,    -1,   639,    -1,   642,    -1,
     607,    -1,     6,    -1,     8,    -1,     9,    -1,    10,    -1,
      11,    -1,    12,    -1,    16,    -1,    20,    -1,    25,    -1,
      27,    -1,    26,    -1,    28,    -1,    29,    -1,    36,    -1,
      40,    -1,    43,    -1,    45,    -1,    44,    -1,    47,    -1,
      53,    -1,    56,    -1,    57,    -1,    59,    -1,    60,    -1,
      65,    -1,    67,    -1,    66,    -1,    69,    -1,    70,    -1,
      72,    -1,    76,    -1,    75,    -1,    73,    -1,    78,    -1,
      80,    -1,    81,    -1,    82,    -1,    83,    -1,    84,    -1,
      86,    -1,    87,    -1,    89,    -1,    91,    -1,    90,    -1,
      93,    -1,    97,    -1,   100,    -1,   102,    -1,   105,    -1,
     110,    -1,   109,    -1,   111,    -1,   114,    -1,   119,    -1,
     125,    -1,   126,    -1,   128,    -1,   132,    -1,   134,    -1,
     135,    -1,   136,    -1,   137,    -1,   138,    -1,   145,    -1,
     146,    -1,   147,    -1,   154,    -1,   158,    -1,   157,    -1,
     156,    -1,   161,    -1,   162,    -1,   164,    -1,   166,    -1,
     165,    -1,   167,    -1,   168,    -1,   172,    -1,   173,    -1,
     174,    -1,   175,    -1,   176,    -1,   180,    -1,   179,    -1,
     195,    -1,   151,    -1,   197,    -1,   182,    -1,   183,    -1,
     184,    -1,   185,    -1,   186,    -1,   201,    -1,   205,    -1,
     204,    -1,   206,    -1,   210,    -1,   208,    -1,   215,    -1,
     221,    -1,   225,    -1,   227,    -1,   231,    -1,   246,    -1,
     232,    -1,   233,    -1,   236,    -1,   250,    -1,   251,    -1,
     253,    -1,   254,    -1,   241,    -1,   258,    -1,   260,    -1,
     264,    -1,   267,    -1,   270,    -1,   271,    -1,   277,    -1,
     278,    -1,   280,    -1,   282,    -1,   284,    -1,   285,    -1,
     320,    -1,   314,    -1,   316,    -1,   297,    -1,   301,    -1,
     298,    -1,   299,    -1,   315,    -1,   300,    -1,   303,    -1,
     295,    -1,   302,    -1,   296,    -1,   312,    -1,   306,    -1,
     304,    -1,   305,    -1,   307,    -1,   308,    -1,   309,    -1,
     310,    -1,   311,    -1,   293,    -1,   318,    -1,   319,    -1,
     321,    -1,   323,    -1,   324,    -1,   329,    -1,   330,    -1,
     331,    -1,   332,    -1,   333,    -1,   334,    -1,   337,    -1,
     338,    -1,   342,    -1,   340,    -1,   344,    -1,   345,    -1,
     346,    -1,   347,    -1,   348,    -1,   349,    -1,   351,    -1,
     350,    -1,   352,    -1,   355,    -1,   356,    -1,   359,    -1,
     361,    -1,   360,    -1,   368,    -1,   362,    -1,   363,    -1,
     372,    -1,   374,    -1,   375,    -1,   377,    -1,   378,    -1,
     393,    -1,   394,    -1,   398,    -1,   401,    -1,   400,    -1,
     402,    -1,   403,    -1,   404,    -1,   405,    -1,   406,    -1,
     407,    -1,   408,    -1,   414,    -1,   415,    -1,   417,    -1,
     419,    -1,   420,    -1,   421,    -1,   422,    -1,   423,    -1,
     425,    -1,   426,    -1,   427,    -1,   430,    -1,   434,    -1,
     435,    -1,   437,    -1,   436,    -1,   438,    -1,   441,    -1,
     442,    -1,   443,    -1,   444,    -1,   445,    -1,   447,    -1,
     450,    -1,   452,    -1,   455,    -1,   456,    -1,   457,    -1,
     458,    -1,   459,    -1,   460,    -1,   461,    -1,   462,    -1,
     466,    -1,   469,    -1,   470,    -1,   471,    -1,   473,    -1,
     477,    -1,   478,    -1,   479,    -1,   482,    -1,   480,    -1,
     481,    -1,   483,    -1,   485,    -1,   486,    -1,   488,    -1,
     494,    -1,   493,    -1,   495,    -1,   507,    -1,   500,    -1,
     509,    -1,   511,    -1,   514,    -1,   515,    -1,   521,    -1,
     522,    -1,   523,    -1,   526,    -1,   525,    -1,   528,    -1,
     531,    -1,   533,    -1,   535,    -1,   537,    -1,   538,    -1,
     539,    -1,   540,    -1,   544,    -1,   547,    -1,   548,    -1,
     549,    -1,   550,    -1,   552,    -1,   551,    -1,   555,    -1,
     556,    -1,   557,    -1,   558,    -1,   565,    -1,   560,    -1,
     564,    -1,   561,    -1,   566,    -1,   567,    -1,   570,    -1,
     571,    -1,   582,    -1,   583,    -1,   573,    -1,   574,    -1,
     575,    -1,   576,    -1,   588,    -1,   589,    -1,   590,    -1,
     199,    -1,   592,    -1,   593,    -1,   596,    -1,   595,    -1,
     602,    -1,   605,    -1,   609,    -1,   610,    -1,   616,    -1,
     621,    -1,   625,    -1,   618,    -1,   628,    -1,   627,    -1,
     629,    -1,   637,    -1,   638,    -1,   630,    -1,   641,    -1,
     643,    -1,   644,    -1,   647,    -1,   498,  1445,    -1,  1454,
    1447,    -1,   582,  1456,    -1,  1450,  1446,    -1,   402,  1324,
    1463,    -1,   402,  1324,   402,   658,  1463,   659,    -1,   402,
     193,  1441,  1324,  1463,    -1,   402,   193,  1441,  1324,   402,
     658,  1463,   659,    -1,  1453,  1447,    -1,   582,  1456,    -1,
      -1,   660,  1448,    -1,  1449,    -1,  1448,   660,  1449,    -1,
    1450,  1453,    -1,  1454,    -1,   208,    -1,   280,    -1,   495,
      -1,    -1,   208,    -1,   280,    -1,   495,    -1,    -1,   208,
     666,    -1,   280,   666,    -1,   495,   666,    -1,  1455,  1324,
    1464,    -1,  1455,  1324,  1464,    -1,   665,  1440,  1324,  1197,
      -1,   665,   665,  1452,  1455,  1324,  1464,    -1,  1005,  1010,
      -1,   350,  1324,  1197,    -1,   350,  1007,  1012,    -1,  1438,
      -1,  1438,   666,  1438,    -1,   124,   666,  1438,    -1,  1457,
    1460,    -1,  1459,  1458,    -1,  1461,    -1,    -1,   660,  1457,
      -1,   253,   271,  1462,    -1,    -1,   660,  1459,    -1,   431,
     378,    -1,   431,   640,    -1,   431,   592,    -1,   431,    78,
      -1,   452,   431,    -1,   493,    -1,   569,    -1,  1197,    -1,
     124,    -1,   376,    -1,    13,    -1,    35,    -1,    -1,   283,
    1467,  1466,  1468,    -1,   563,    -1,   560,    -1,  1469,    -1,
    1468,   660,  1469,    -1,  1429,  1263,  1470,    -1,   431,    -1,
     640,    -1,   291,   640,    -1,   431,   280,    -1,    -1,   603,
    1472,  1467,    -1,   504,    -1,   214,  1429,   379,  1263,    -1,
     214,  1431,    68,    -1,    -1,   214,  1431,   431,  1475,  1476,
    1265,  1278,    -1,  1477,    -1,  1438,  1478,    -1,   185,    -1,
     361,    -1,   185,    -1,   361,    -1,   415,    -1,   264,    -1,
      -1,  1480,  1479,   658,  1328,   659,    -1,   159,    -1,   200,
      -1,   265,    -1,   213,    -1,   292,    -1,    -1,   474,   732,
    1482,  1483,    -1,  1488,   376,  1487,  1499,   196,  1500,    -1,
    1488,   376,   199,  1499,   196,  1500,    -1,  1488,   376,   418,
    1499,   196,  1500,    -1,    13,  1489,   660,   209,   383,   196,
    1500,    -1,   423,   376,  1441,   196,  1500,    -1,    -1,   209,
     732,  1485,  1486,    -1,  1488,   376,  1487,  1499,   580,  1501,
    1506,  1507,    -1,  1488,   376,   199,  1499,   580,  1501,  1506,
    1507,    -1,  1488,   376,   418,  1499,   580,  1501,  1506,  1507,
      -1,   423,   376,  1441,   580,  1501,  1508,    -1,    -1,   563,
      -1,  1490,    -1,    13,  1489,    -1,    -1,   417,    -1,  1491,
      -1,  1490,   660,  1491,    -1,    -1,   490,  1492,  1503,    -1,
      -1,   240,  1493,  1503,    -1,    -1,   606,  1494,  1503,    -1,
      -1,   439,  1495,  1503,    -1,   129,    -1,   608,    -1,   234,
      -1,    14,    -1,    98,    -1,   143,    -1,   169,    -1,   447,
      -1,   504,    -1,   419,    -1,   182,    -1,   209,   383,    -1,
     503,   108,    -1,   555,    -1,    98,   566,   560,    -1,   283,
     560,    -1,   455,   508,    -1,   455,    67,    -1,    98,   625,
      -1,   503,   625,    -1,    98,   478,    -1,    14,   478,    -1,
      98,   609,    -1,   166,    -1,   584,    -1,    98,   561,    -1,
      -1,    19,    -1,  1498,  1496,  1497,    -1,  1498,    -1,   550,
     569,    -1,   254,   569,    -1,    65,   569,    -1,   653,    -1,
    1438,   666,   653,    -1,   653,   666,   653,    -1,  1429,    -1,
    1441,    -1,  1500,   660,  1441,    -1,  1502,    -1,  1501,   660,
    1502,    -1,  1441,   227,    48,   569,    -1,  1441,   227,    48,
     402,   569,    -1,  1441,   227,   634,  1440,    -1,  1441,   227,
     634,  1440,    21,  1435,    -1,  1441,   227,   634,  1440,    48,
    1435,    -1,  1441,    -1,    -1,   658,  1504,   659,    -1,  1504,
     660,  1505,    -1,  1505,    -1,  1438,    -1,    -1,   463,  1497,
      -1,   463,   532,    -1,   463,   641,    -1,   463,   363,    -1,
      -1,   634,  1509,    -1,    -1,   634,   209,   383,    -1,  1509,
    1510,    -1,  1510,    -1,   209,   383,    -1,   319,  1283,    -1,
     323,  1283,    -1,   318,  1283,    -1,   324,  1283,    -1,    -1,
      32,  1512,  1513,    -1,    -1,   638,    -1,    -1,    19,   367,
      57,    -1,    19,    57,    -1,    -1,   446,    -1,   367,   446,
      -1,    -1,   484,    -1,    79,  1513,  1514,  1515,    -1,   476,
    1513,  1514,  1515,    -1,   476,  1513,   580,  1516,  1438,    -1,
     484,  1438,    -1,   446,   484,  1438,    -1,    -1,  1522,    -1,
     600,  1527,  1179,    -1,    -1,  1522,    -1,  1525,    -1,    -1,
    1525,    -1,  1526,    -1,  1275,  1278,    -1,  1279,    -1,    -1,
     139,    -1,    13,    -1,   490,  1245,  1185,    -1,   658,  1181,
     659,  1524,    -1,  1528,    -1,  1529,   600,  1527,  1528,    -1,
      -1,  1531,  1529,    -1,    -1,  1533,    -1,  1533,  1534,    -1,
    1534,    -1,   546,    -1,   219,    -1,   139,    -1,   529,    -1,
     524,    -1,   525,    -1,   527,    -1,    13,    -1,  1540,  1536,
      -1,  1539,  1537,    -1,  1541,  1538,  1545,    -1,  1545,    -1,
    1560,    -1,  1569,    -1,  1563,    -1,   719,    -1,  1545,    -1,
    1560,    -1,  1569,    -1,  1563,    -1,  1562,    -1,   719,    -1,
    1539,    -1,  1540,    -1,    -1,   126,   159,  1441,    -1,  1542,
      -1,  1542,  1543,    -1,  1543,    -1,   388,   454,    -1,    12,
     159,   593,    -1,    12,   159,   331,    -1,    12,   159,   567,
      -1,    -1,   530,   489,   126,    -1,   530,   489,   246,    -1,
      -1,  1544,   625,  1429,  1546,  1547,    21,  1549,    -1,    -1,
     658,  1548,   659,    -1,  1438,    -1,  1548,   660,  1438,    -1,
      -1,  1550,  1551,  1557,    -1,    -1,  1555,  1552,  1521,    -1,
     658,  1553,   659,  1523,    -1,    -1,  1554,  1555,    -1,   658,
    1553,   659,    -1,    -1,   490,  1556,  1182,    -1,    -1,   634,
      64,   383,    -1,   634,    53,    64,   383,    -1,   634,   280,
      64,   383,    -1,   190,    -1,   411,    -1,    -1,  1558,  1440,
      -1,    -1,   584,   734,   840,   841,   376,  1429,   193,   148,
     481,  1559,  1561,   789,    -1,    11,   199,  1438,   471,   959,
     513,  1435,    -1,   199,  1438,   471,   959,   513,  1435,    -1,
      -1,    -1,    -1,    -1,    -1,   199,   734,   658,  1564,   745,
     659,  1565,   471,  1566,  1002,  1567,   736,  1568,   789,    -1,
      -1,    -1,    -1,    -1,   418,   734,  1570,   658,  1571,   749,
     659,  1572,   736,  1573,   789,    -1,   642,  1577,  1576,  1578,
      -1,   642,   153,  1576,  1580,    -1,   642,   413,  1576,    -1,
     642,    79,  1576,  1579,    -1,   642,   476,  1576,    -1,   642,
     435,  1575,    -1,    -1,    95,   643,    -1,  1416,    -1,  1416,
     660,  1416,    -1,  1416,   660,  1416,   660,  1283,    -1,    32,
      -1,   536,    -1,    -1,   256,    -1,   469,    -1,    -1,   377,
     403,    -1,    -1,   556,    -1,   556,   193,   334,    -1,   242,
     405,  1438,   513,  1435,    -1,   599,   405,  1438,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1583,  1583,  1596,  1595,  1620,  1627,  1629,  1633,  1634,
    1639,  1640,  1641,  1642,  1643,  1644,  1645,  1646,  1647,  1648,
    1649,  1650,  1651,  1652,  1653,  1654,  1655,  1656,  1657,  1658,
    1659,  1660,  1661,  1662,  1663,  1664,  1665,  1666,  1667,  1668,
    1669,  1670,  1671,  1672,  1673,  1674,  1675,  1676,  1677,  1678,
    1679,  1680,  1681,  1682,  1683,  1684,  1685,  1686,  1687,  1688,
    1689,  1690,  1691,  1692,  1693,  1697,  1707,  1708,  1712,  1732,
    1739,  1750,  1749,  1760,  1762,  1766,  1767,  1771,  1784,  1783,
    1803,  1802,  1816,  1815,  1830,  1831,  1834,  1841,  1848,  1855,
    1862,  1869,  1877,  1886,  1892,  1899,  1906,  1914,  1924,  1930,
    1936,  1944,  1952,  1958,  1965,  1972,  1980,  1993,  1999,  2006,
    2013,  2021,  2032,  2033,  2037,  2041,  2045,  2049,  2059,  2063,
    2067,  2072,  2083,  2088,  2092,  2096,  2100,  2104,  2108,  2112,
    2117,  2121,  2126,  2159,  2164,  2171,  2174,  2176,  2177,  2181,
    2187,  2191,  2207,  2211,  2222,  2226,  2244,  2243,  2289,  2294,
    2288,  2301,  2306,  2299,  2313,  2318,  2311,  2324,  2323,  2336,
    2335,  2343,  2350,  2354,  2358,  2370,  2371,  2375,  2379,  2383,
    2387,  2391,  2396,  2400,  2408,  2407,  2439,  2438,  2447,  2456,
    2457,  2463,  2469,  2479,  2485,  2493,  2495,  2504,  2505,  2509,
    2515,  2524,  2525,  2533,  2533,  2591,  2592,  2593,  2594,  2595,
    2596,  2597,  2598,  2599,  2600,  2601,  2602,  2603,  2607,  2625,
    2635,  2649,  2668,  2669,  2673,  2674,  2679,  2681,  2683,  2685,
    2687,  2689,  2691,  2697,  2698,  2699,  2703,  2707,  2715,  2714,
    2727,  2729,  2732,  2734,  2738,  2744,  2753,  2755,  2759,  2760,
    2765,  2784,  2814,  2816,  2820,  2821,  2825,  2854,  2855,  2856,
    2857,  2861,  2862,  2866,  2867,  2872,  2875,  2903,  2901,  2986,
    3004,  3003,  3083,  3079,  3157,  3158,  3163,  3165,  3170,  3193,
    3204,  3208,  3230,  3231,  3235,  3239,  3252,  3258,  3264,  3273,
    3286,  3312,  3318,  3319,  3325,  3326,  3331,  3337,  3350,  3352,
    3372,  3378,  3380,  3382,  3384,  3386,  3388,  3390,  3392,  3394,
    3396,  3398,  3400,  3405,  3419,  3436,  3437,  3439,  3444,  3450,
    3459,  3465,  3474,  3482,  3510,  3518,  3520,  3529,  3534,  3540,
    3549,  3557,  3559,  3561,  3563,  3565,  3567,  3569,  3571,  3573,
    3575,  3577,  3579,  3581,  3586,  3606,  3630,  3632,  3631,  3642,
    3643,  3644,  3645,  3646,  3647,  3648,  3649,  3650,  3651,  3652,
    3653,  3654,  3659,  3658,  3669,  3669,  3725,  3724,  3783,  3783,
    3805,  3864,  3914,  3939,  3938,  3964,  3987,  3989,  3990,  3994,
    4012,  4033,  4042,  4081,  4033,  4110,  4112,  4113,  4117,  4118,
    4123,  4134,  4122,  4187,  4186,  4200,  4201,  4205,  4206,  4211,
    4220,  4210,  4271,  4280,  4270,  4326,  4339,  4344,  4343,  4381,
    4382,  4387,  4386,  4420,  4420,  4439,  4438,  4488,  4505,  4514,
    4504,  4573,  4582,  4570,  4625,  4627,  4632,  4634,  4636,  4653,
    4658,  4664,  4671,  4672,  4680,  4686,  4695,  4701,  4707,  4708,
    4712,  4712,  4717,  4718,  4719,  4723,  4724,  4725,  4728,  4730,
    4734,  4735,  4736,  4740,  4741,  4742,  4743,  4744,  4745,  4746,
    4747,  4748,  4751,  4753,  4757,  4758,  4759,  4763,  4764,  4765,
    4766,  4767,  4770,  4772,  4776,  4777,  4778,  4782,  4783,  4784,
    4785,  4786,  4787,  4788,  4791,  4793,  4797,  4798,  4799,  4803,
    4804,  4805,  4810,  4818,  4826,  4834,  4846,  4858,  4863,  4868,
    4876,  4884,  4892,  4900,  4908,  4916,  4924,  4937,  4950,  4964,
    4978,  4983,  4996,  4997,  5048,  5049,  5052,  5067,  5085,  5090,
    5088,  5102,  5104,  5103,  5114,  5113,  5126,  5163,  5164,  5169,
    5168,  5187,  5186,  5203,  5207,  5215,  5214,  5217,  5219,  5221,
    5223,  5228,  5229,  5235,  5236,  5253,  5254,  5258,  5259,  5263,
    5282,  5292,  5308,  5322,  5323,  5339,  5341,  5340,  5345,  5343,
    5354,  5355,  5359,  5377,  5395,  5396,  5412,  5427,  5449,  5450,
    5455,  5454,  5478,  5488,  5510,  5509,  5527,  5526,  5546,  5568,
    5572,  5601,  5613,  5614,  5619,  5630,  5618,  5655,  5656,  5660,
    5673,  5696,  5709,  5735,  5736,  5741,  5740,  5777,  5782,  5783,
    5787,  5788,  5792,  5794,  5800,  5802,  5804,  5806,  5808,  5810,
    5819,  5826,  5827,  5831,  5832,  5836,  5837,  5841,  5842,  5846,
    5847,  5851,  5852,  5856,  5860,  5861,  5864,  5866,  5870,  5871,
    5875,  5876,  5877,  5881,  5886,  5891,  5896,  5901,  5906,  5911,
    5916,  5921,  5936,  5942,  5957,  5962,  5977,  5983,  6001,  6006,
    6011,  6016,  6021,  6027,  6026,  6052,  6053,  6054,  6059,  6064,
    6069,  6074,  6076,  6078,  6084,  6092,  6110,  6127,  6153,  6171,
    6172,  6173,  6174,  6175,  6176,  6180,  6181,  6182,  6186,  6187,
    6188,  6189,  6194,  6201,  6202,  6206,  6207,  6211,  6212,  6219,
    6224,  6230,  6236,  6242,  6261,  6267,  6269,  6273,  6281,  6282,
    6286,  6291,  6290,  6315,  6316,  6333,  6335,  6338,  6340,  6344,
    6345,  6349,  6355,  6361,  6362,  6363,  6364,  6372,  6374,  6375,
    6382,  6398,  6427,  6432,  6438,  6444,  6449,  6454,  6459,  6464,
    6471,  6478,  6485,  6492,  6498,  6504,  6511,  6518,  6524,  6540,
    6542,  6547,  6571,  6576,  6581,  6587,  6593,  6598,  6603,  6608,
    6614,  6620,  6627,  6633,  6639,  6645,  6651,  6658,  6657,  6666,
    6665,  6673,  6679,  6685,  6693,  6694,  6695,  6701,  6702,  6703,
    6704,  6705,  6709,  6713,  6714,  6718,  6719,  6723,  6724,  6725,
    6726,  6727,  6731,  6732,  6733,  6734,  6735,  6739,  6744,  6746,
    6752,  6756,  6761,  6765,  6774,  6775,  6779,  6780,  6781,  6789,
    6790,  6794,  6795,  6799,  6800,  6801,  6805,  6806,  6807,  6808,
    6811,  6812,  6817,  6821,  6825,  6826,  6830,  6831,  6835,  6840,
    6841,  6842,  6850,  6851,  6857,  6863,  6869,  6875,  6876,  6889,
    6895,  6901,  6907,  6912,  6917,  6926,  6947,  6953,  6960,  6965,
    6966,  6970,  6978,  6982,  6983,  6987,  6988,  6992,  7001,  7005,
    7006,  7010,  7018,  7019,  7023,  7024,  7028,  7029,  7033,  7034,
    7039,  7040,  7041,  7045,  7053,  7058,  7067,  7071,  7076,  7081,
    7086,  7091,  7096,  7104,  7105,  7110,  7109,  7122,  7123,  7127,
    7130,  7131,  7132,  7133,  7137,  7145,  7152,  7153,  7157,  7167,
    7168,  7172,  7173,  7176,  7178,  7182,  7194,  7195,  7199,  7206,
    7219,  7220,  7222,  7224,  7230,  7235,  7241,  7247,  7254,  7264,
    7265,  7266,  7267,  7268,  7272,  7276,  7277,  7281,  7282,  7286,
    7287,  7291,  7292,  7293,  7297,  7298,  7302,  7306,  7313,  7325,
    7326,  7330,  7331,  7335,  7336,  7340,  7341,  7345,  7346,  7350,
    7351,  7355,  7356,  7360,  7361,  7365,  7367,  7371,  7372,  7376,
    7380,  7381,  7395,  7396,  7397,  7401,  7402,  7406,  7412,  7426,
    7427,  7431,  7432,  7436,  7437,  7445,  7444,  7484,  7483,  7497,
    7511,  7510,  7529,  7528,  7547,  7546,  7565,  7559,  7579,  7578,
    7611,  7616,  7621,  7626,  7631,  7639,  7641,  7651,  7660,  7661,
    7665,  7666,  7670,  7676,  7682,  7688,  7702,  7708,  7715,  7719,
    7720,  7724,  7725,  7729,  7735,  7741,  7747,  7756,  7770,  7771,
    7772,  7773,  7777,  7778,  7790,  7791,  7795,  7796,  7799,  7801,
    7809,  7817,  7819,  7821,  7822,  7830,  7831,  7835,  7844,  7842,
    7856,  7870,  7869,  7883,  7881,  7895,  7902,  7913,  7914,  7940,
    7949,  7960,  7962,  7966,  7970,  7978,  7985,  7989,  7994,  7993,
    8009,  8011,  8016,  8024,  8023,  8039,  8043,  8042,  8054,  8055,
    8059,  8079,  8080,  8084,  8093,  8097,  8102,  8104,  8103,  8114,
    8124,  8113,  8140,  8149,  8158,  8167,  8176,  8182,  8188,  8197,
    8206,  8236,  8246,  8267,  8277,  8281,  8286,  8287,  8288,  8292,
    8295,  8297,  8298,  8299,  8300,  8303,  8308,  8319,  8324,  8335,
    8336,  8340,  8341,  8345,  8346,  8347,  8351,  8352,  8357,  8365,
    8366,  8367,  8368,  8372,  8377,  8385,  8386,  8396,  8412,  8410,
    8432,  8449,  8452,  8459,  8463,  8470,  8474,  8478,  8485,  8490,
    8493,  8500,  8503,  8510,  8513,  8520,  8523,  8531,  8534,  8541,
    8545,  8552,  8556,  8564,  8568,  8594,  8595,  8596,  8601,  8606,
    8614,  8613,  8625,  8626,  8627,  8632,  8631,  8653,  8654,  8658,
    8659,  8663,  8664,  8665,  8670,  8669,  8691,  8700,  8699,  8726,
    8727,  8731,  8732,  8736,  8737,  8738,  8739,  8740,  8741,  8746,
    8745,  8767,  8768,  8769,  8774,  8773,  8779,  8786,  8791,  8799,
    8800,  8804,  8818,  8817,  8830,  8831,  8835,  8836,  8840,  8850,
    8860,  8861,  8866,  8865,  8876,  8877,  8881,  8882,  8886,  8896,
    8907,  8906,  8914,  8918,  8919,  8930,  8931,  8940,  8948,  8952,
    8959,  8963,  8968,  8972,  8981,  8989,  8994,  9024,  9024,  9038,
    9052,  9056,  9057,  9061,  9065,  9074,  9078,  9082,  9087,  9091,
    9096,  9105,  9117,  9118,  9124,  9133,  9139,  9145,  9155,  9156,
    9164,  9165,  9166,  9167,  9168,  9172,  9173,  9178,  9184,  9189,
    9195,  9199,  9203,  9207,  9211,  9215,  9219,  9223,  9227,  9231,
    9235,  9239,  9252,  9256,  9260,  9265,  9269,  9276,  9280,  9287,
    9291,  9295,  9303,  9307,  9314,  9318,  9323,  9327,  9331,  9335,
    9339,  9343,  9347,  9351,  9355,  9359,  9363,  9367,  9371,  9375,
    9379,  9383,  9387,  9388,  9392,  9393,  9397,  9398,  9402,  9403,
    9407,  9408,  9409,  9410,  9411,  9412,  9413,  9417,  9418,  9422,
    9423,  9424,  9425,  9426,  9427,  9431,  9432,  9433,  9434,  9435,
    9439,  9443,  9447,  9451,  9455,  9459,  9461,  9465,  9469,  9473,
    9477,  9481,  9485,  9489,  9493,  9497,  9501,  9505,  9509,  9514,
    9530,  9534,  9538,  9542,  9546,  9550,  9554,  9558,  9562,  9566,
    9570,  9574,  9578,  9582,  9586,  9590,  9594,  9598,  9603,  9608,
    9613,  9617,  9621,  9625,  9629,  9634,  9638,  9657,  9661,  9665,
    9669,  9673,  9678,  9683,  9687,  9691,  9696,  9700,  9704,  9708,
    9712,  9716,  9720,  9724,  9729,  9733,  9737,  9741,  9745,  9757,
    9761,  9765,  9769,  9773,  9777,  9781,  9785,  9789,  9793,  9797,
    9801,  9805,  9809,  9813,  9817,  9821,  9825,  9829,  9833,  9837,
    9842,  9847,  9851,  9855,  9861,  9867,  9873,  9879,  9885,  9891,
    9895,  9913,  9917,  9924,  9926,  9939,  9940,  9944,  9945,  9949,
    9950,  9954,  9960,  9969,  9976,  9980,  9984,  9988,  9992,  9996,
   10000, 10004, 10008, 10017, 10021, 10025, 10029, 10033, 10037, 10041,
   10045, 10049, 10053, 10063, 10067, 10071, 10075, 10082, 10083, 10088,
   10093, 10097, 10098, 10102, 10107, 10117, 10124, 10132, 10140, 10148,
   10156, 10164, 10172, 10180, 10188, 10196, 10204, 10212, 10223, 10224,
   10228, 10234, 10243, 10244, 10248, 10254, 10263, 10264, 10268, 10269,
   10273, 10281, 10292, 10293, 10300, 10314, 10315, 10321, 10322, 10342,
   10346, 10350, 10356, 10362, 10368, 10374, 10380, 10385, 10391, 10397,
   10402, 10409, 10410, 10411, 10419, 10420, 10424, 10439, 10443, 10465,
   10492, 10496, 10504, 10504, 10518, 10525, 10526, 10531, 10534, 10535,
   10536, 10540, 10541, 10545, 10551, 10560, 10561, 10569, 10570, 10574,
   10579, 10585, 10589, 10595, 10604, 10610, 10618, 10629, 10642, 10643,
   10644, 10645, 10646, 10647, 10648, 10649, 10650, 10651, 10652, 10653,
   10657, 10658, 10659, 10660, 10661, 10662, 10663, 10664, 10665, 10669,
   10670, 10671, 10672, 10675, 10677, 10678, 10682, 10683, 10691, 10693,
   10697, 10698, 10705, 10706, 10713, 10714, 10722, 10723, 10730, 10735,
   10745, 10746, 10754, 10769, 10773, 10774, 10778, 10798, 10799, 10803,
   10810, 10815, 10825, 10826, 10827, 10831, 10832, 10836, 10843, 10849,
   10855, 10864, 10868, 10872, 10876, 10880, 10887, 10888, 10892, 10893,
   10894, 10895, 10896, 10897, 10901, 10902, 10903, 10904, 10905, 10909,
   10910, 10911, 10912, 10913, 10917, 10918, 10919, 10920, 10924, 10929,
   10930, 10934, 10935, 10944, 10948, 10953, 10961, 10974, 10980, 10989,
   10993, 11000, 11001, 11005, 11012, 11018, 11022, 11030, 11042, 11054,
   11053, 11064, 11065, 11064, 11081, 11088, 11111, 11143, 11155, 11162,
   11161, 11171, 11177, 11184, 11189, 11194, 11203, 11204, 11208, 11219,
   11225, 11234, 11235, 11239, 11240, 11243, 11245, 11248, 11249, 11250,
   11254, 11255, 11262, 11276, 11294, 11311, 11323, 11339, 11354, 11355,
   11356, 11365, 11369, 11370, 11381, 11383, 11387, 11392, 11397, 11405,
   11410, 11415, 11423, 11429, 11438, 11445, 11449, 11456, 11457, 11461,
   11466, 11476, 11477, 11481, 11482, 11486, 11491, 11496, 11500, 11506,
   11515, 11516, 11524, 11528, 11537, 11553, 11560, 11572, 11580, 11581,
   11587, 11598, 11607, 11619, 11621, 11625, 11626, 11630, 11631, 11632,
   11637, 11636, 11655, 11657, 11660, 11662, 11665, 11666, 11669, 11673,
   11677, 11681, 11685, 11689, 11693, 11697, 11701, 11709, 11712, 11725,
   11724, 11733, 11740, 11748, 11756, 11764, 11772, 11780, 11787, 11789,
   11791, 11800, 11804, 11809, 11808, 11819, 11818, 11828, 11845, 11852,
   11857, 11863, 11869, 11877, 11885, 11893, 11903, 11934, 11936, 11967,
   11974, 11981, 11991, 11998, 12004, 12013, 12021, 12025, 12029, 12036,
   12043, 12049, 12056, 12063, 12068, 12073, 12078, 12087, 12089, 12091,
   12096, 12097, 12100, 12102, 12106, 12107, 12111, 12112, 12116, 12117,
   12121, 12122, 12126, 12127, 12130, 12132, 12139, 12149, 12151, 12158,
   12186, 12185, 12202, 12201, 12209, 12210, 12211, 12212, 12213, 12214,
   12228, 12229, 12234, 12238, 12244, 12250, 12271, 12272, 12273, 12288,
   12287, 12300, 12309, 12299, 12311, 12315, 12316, 12328, 12327, 12349,
   12350, 12355, 12357, 12359, 12361, 12363, 12365, 12367, 12369, 12371,
   12373, 12375, 12377, 12379, 12381, 12386, 12387, 12392, 12391, 12401,
   12402, 12406, 12406, 12408, 12409, 12413, 12414, 12419, 12418, 12429,
   12433, 12437, 12451, 12463, 12464, 12465, 12471, 12483, 12495, 12505,
   12523, 12482, 12534, 12535, 12539, 12540, 12544, 12545, 12546, 12550,
   12551, 12552, 12556, 12557, 12561, 12566, 12570, 12575, 12581, 12586,
   12594, 12595, 12599, 12604, 12608, 12613, 12621, 12622, 12625, 12627,
   12635, 12637, 12641, 12642, 12643, 12647, 12649, 12654, 12655, 12664,
   12665, 12669, 12670, 12674, 12697, 12702, 12707, 12712, 12720, 12728,
   12735, 12745, 12753, 12754, 12755, 12766, 12767, 12768, 12769, 12782,
   12786, 12790, 12794, 12798, 12802, 12809, 12813, 12817, 12821, 12825,
   12833, 12837, 12841, 12855, 12856, 12860, 12864, 12871, 12878, 12882,
   12886, 12890, 12894, 12898, 12902, 12909, 12910, 12926, 12936, 12940,
   12946, 12956, 12966, 12972, 12982, 12992, 12993, 13023, 13036, 13049,
   13065, 13081, 13098, 13099, 13110, 13111, 13122, 13123, 13124, 13128,
   13156, 13193, 13208, 13209, 13210, 13211, 13212, 13213, 13214, 13215,
   13216, 13217, 13218, 13219, 13220, 13221, 13222, 13223, 13224, 13225,
   13226, 13227, 13228, 13229, 13230, 13231, 13232, 13233, 13234, 13235,
   13236, 13237, 13238, 13239, 13240, 13241, 13242, 13243, 13244, 13245,
   13246, 13247, 13248, 13249, 13250, 13251, 13252, 13253, 13254, 13255,
   13256, 13257, 13258, 13259, 13260, 13261, 13262, 13263, 13264, 13274,
   13275, 13276, 13277, 13278, 13279, 13280, 13281, 13282, 13283, 13284,
   13285, 13286, 13287, 13288, 13289, 13290, 13291, 13292, 13293, 13294,
   13295, 13296, 13297, 13298, 13299, 13300, 13301, 13302, 13303, 13304,
   13305, 13306, 13307, 13308, 13309, 13310, 13311, 13312, 13313, 13314,
   13315, 13316, 13317, 13318, 13319, 13320, 13325, 13326, 13327, 13328,
   13329, 13330, 13331, 13332, 13333, 13334, 13335, 13336, 13337, 13338,
   13339, 13340, 13341, 13342, 13343, 13344, 13345, 13346, 13347, 13348,
   13349, 13350, 13351, 13352, 13353, 13354, 13355, 13356, 13357, 13358,
   13359, 13360, 13361, 13362, 13363, 13364, 13365, 13366, 13367, 13368,
   13369, 13370, 13371, 13372, 13373, 13374, 13375, 13376, 13377, 13378,
   13379, 13380, 13381, 13382, 13383, 13384, 13385, 13386, 13387, 13388,
   13389, 13390, 13391, 13392, 13393, 13394, 13395, 13396, 13397, 13398,
   13399, 13400, 13401, 13402, 13403, 13404, 13405, 13406, 13407, 13408,
   13409, 13410, 13411, 13412, 13413, 13414, 13415, 13416, 13417, 13418,
   13419, 13420, 13421, 13422, 13423, 13424, 13425, 13426, 13427, 13428,
   13429, 13430, 13431, 13432, 13433, 13434, 13435, 13436, 13437, 13438,
   13439, 13440, 13441, 13442, 13443, 13444, 13445, 13446, 13447, 13448,
   13449, 13450, 13451, 13452, 13453, 13454, 13455, 13456, 13457, 13458,
   13459, 13460, 13461, 13462, 13463, 13464, 13465, 13466, 13467, 13468,
   13469, 13470, 13471, 13472, 13473, 13474, 13475, 13476, 13477, 13478,
   13479, 13480, 13481, 13482, 13483, 13484, 13485, 13486, 13487, 13488,
   13489, 13490, 13491, 13492, 13493, 13494, 13495, 13496, 13497, 13498,
   13499, 13500, 13501, 13502, 13503, 13504, 13505, 13506, 13507, 13508,
   13509, 13510, 13511, 13512, 13513, 13514, 13515, 13516, 13517, 13518,
   13519, 13520, 13521, 13522, 13523, 13524, 13525, 13526, 13527, 13528,
   13529, 13530, 13531, 13532, 13533, 13534, 13535, 13536, 13537, 13538,
   13539, 13540, 13541, 13542, 13543, 13544, 13545, 13546, 13547, 13548,
   13549, 13550, 13551, 13552, 13553, 13554, 13555, 13556, 13557, 13558,
   13559, 13560, 13561, 13562, 13563, 13564, 13565, 13566, 13567, 13568,
   13569, 13570, 13571, 13572, 13573, 13574, 13575, 13576, 13577, 13578,
   13579, 13580, 13581, 13582, 13583, 13584, 13585, 13586, 13587, 13588,
   13589, 13590, 13591, 13592, 13593, 13594, 13605, 13614, 13618, 13622,
   13626, 13630, 13637, 13641, 13654, 13661, 13671, 13672, 13677, 13681,
   13689, 13693, 13697, 13698, 13699, 13703, 13704, 13705, 13706, 13710,
   13711, 13712, 13713, 13718, 13726, 13732, 13736, 13740, 13744, 13751,
   13758, 13762, 13766, 13773, 13777, 13784, 13791, 13792, 13796, 13803,
   13804, 13808, 13809, 13813, 13814, 13815, 13816, 13820, 13829, 13830,
   13831, 13835, 13839, 13849, 13848, 13864, 13865, 13869, 13870, 13874,
   13902, 13903, 13904, 13909, 13914, 13913, 13930, 13942, 13958, 13977,
   13974, 14024, 14025, 14029, 14030, 14034, 14035, 14036, 14037, 14039,
   14038, 14051, 14052, 14053, 14054, 14055, 14061, 14061, 14066, 14071,
   14081, 14091, 14095, 14104, 14104, 14109, 14115, 14126, 14137, 14145,
   14147, 14151, 14158, 14165, 14167, 14171, 14172, 14177, 14176, 14180,
   14179, 14183, 14182, 14186, 14185, 14188, 14189, 14190, 14191, 14192,
   14193, 14194, 14195, 14196, 14197, 14198, 14199, 14200, 14201, 14202,
   14203, 14204, 14205, 14206, 14207, 14208, 14209, 14210, 14211, 14212,
   14213, 14217, 14218, 14222, 14223, 14227, 14237, 14247, 14260, 14275,
   14288, 14301, 14313, 14318, 14326, 14331, 14339, 14347, 14362, 14370,
   14380, 14391, 14400, 14404, 14408, 14409, 14413, 14440, 14442, 14446,
   14450, 14454, 14461, 14462, 14466, 14467, 14471, 14472, 14476, 14477,
   14483, 14489, 14495, 14505, 14504, 14514, 14515, 14520, 14521, 14522,
   14527, 14528, 14529, 14533, 14534, 14538, 14550, 14559, 14569, 14578,
   14592, 14593, 14597, 14604, 14605, 14606, 14610, 14611, 14615, 14622,
   14626, 14630, 14631, 14632, 14636, 14640, 14648, 14649, 14657, 14657,
   14670, 14671, 14675, 14679, 14683, 14684, 14685, 14686, 14687, 14688,
   14689, 14690, 14700, 14702, 14704, 14709, 14710, 14711, 14712, 14713,
   14717, 14718, 14719, 14720, 14721, 14722, 14732, 14733, 14738, 14751,
   14764, 14766, 14768, 14773, 14778, 14780, 14782, 14788, 14789, 14791,
   14797, 14796, 14814, 14815, 14819, 14824, 14832, 14832, 14857, 14856,
   14877, 14885, 14885, 14893, 14898, 14897, 14911, 14912, 14914, 14916,
   14927, 14929, 14935, 14941, 14959, 14949, 15042, 15060, 15084, 15108,
   15112, 15121, 15144, 15081, 15211, 15231, 15236, 15244, 15209, 15265,
   15270, 15275, 15280, 15285, 15290, 15298, 15299, 15302, 15311, 15321,
   15339, 15340, 15344, 15345, 15346, 15350, 15351, 15356, 15357, 15359,
   15364, 15373
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "ANALYSE_SYM", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM", "AS",
  "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM", "AUTOEXTEND_SIZE_SYM",
  "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM",
  "BEGIN_SYM", "BETWEEN_SYM", "BIGINT", "BINARY", "BINLOG_SYM", "BIN_NUM",
  "BIT_AND", "BIT_OR", "BIT_SYM", "BIT_XOR", "BLOB_SYM", "BLOCK_SYM",
  "BOOLEAN_SYM", "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM",
  "CACHE_SYM", "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "CONCURRENT", "CONDITION_SYM", "CONNECTION_SYM",
  "CONSISTENT_SYM", "CONSTRAINT", "CONSTRAINT_CATALOG_SYM",
  "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM",
  "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM", "COUNT_SYM", "CPU_SYM",
  "CREATE", "CROSS", "CUBE_SYM", "CURDATE", "CURRENT_SYM", "CURRENT_USER",
  "CURSOR_SYM", "CURSOR_NAME_SYM", "CURTIME", "DATABASE", "DATABASES",
  "DATAFILE_SYM", "DATA_SYM", "DATETIME", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM",
  "DECIMAL_NUM", "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT",
  "DEFAULT_AUTH_SYM", "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM",
  "DELETE_SYM", "DESC", "DESCRIBE", "DES_KEY_FILE", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSE",
  "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ", "EQUAL_SYM",
  "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM", "EXISTS",
  "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM", "EXTENDED_SYM",
  "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM", "FAST_SYM", "FAULTS_SYM",
  "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM", "FILTER_SYM",
  "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM", "FLUSH_SYM",
  "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM", "FORMAT_SYM",
  "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM", "FUNCTION_SYM", "GE",
  "GENERAL", "GENERATED", "GROUP_REPLICATION", "GEOMETRYCOLLECTION",
  "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM", "GLOBAL_SYM", "GRANT", "GRANTS",
  "GROUP_SYM", "GROUP_CONCAT_SYM", "GT_SYM", "HANDLER_SYM", "HASH_SYM",
  "HAVING", "HELP_SYM", "HEX_NUM", "HIGH_PRIORITY", "HOST_SYM",
  "HOSTS_SYM", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM",
  "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT", "IDENTIFIED_SYM", "IDENT_QUOTED",
  "IF", "IGNORE_SYM", "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES",
  "INDEX_SYM", "INFILE", "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM",
  "INSENSITIVE_SYM", "INSERT", "INSERT_METHOD", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM", "LOGFILE_SYM",
  "LOGS_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM", "LONG_SYM", "LOOP_SYM",
  "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM", "MASTER_BIND_SYM",
  "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM", "MASTER_SERVER_ID_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM",
  "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MEDIUM_SYM", "MEMORY_SYM",
  "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MINUTE_SYM", "MIN_ROWS",
  "MIN_SYM", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM",
  "MONTH_SYM", "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON",
  "MUTEX_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NATURAL", "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG",
  "NEVER_SYM", "NEW_SYM", "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM",
  "NOT2_SYM", "NOT_SYM", "NOW_SYM", "NO_SYM", "NO_WAIT_SYM",
  "NO_WRITE_TO_BINLOG", "NULL_SYM", "NUM", "NUMBER_SYM", "NUMERIC_SYM",
  "NVARCHAR_SYM", "OFFSET_SYM", "ON", "ONE_SYM", "ONLY_SYM", "OPEN_SYM",
  "OPTIMIZE", "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY",
  "OR2_SYM", "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER", "OUTFILE",
  "OUT_SYM", "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER",
  "PARSER_SYM", "PARSE_GCOL_EXPR_SYM", "PARTIAL", "PARTITION_SYM",
  "PARTITIONS_SYM", "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM",
  "PLUGIN_DIR_SYM", "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON",
  "PORT_SYM", "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL", "REBUILD_SYM",
  "RECOVER_SYM", "REDOFILE_SYM", "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM",
  "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM", "RELAY_LOG_FILE_SYM",
  "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM", "RELOAD",
  "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPEAT_SYM", "REPLACE", "REPLICATION", "REPLICATE_DO_DB",
  "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE", "REPLICATE_IGNORE_TABLE",
  "REPLICATE_WILD_DO_TABLE", "REPLICATE_WILD_IGNORE_TABLE",
  "REPLICATE_REWRITE_DB", "REQUIRE_SYM", "RESET_SYM", "RESIGNAL_SYM",
  "RESOURCES", "RESTORE_SYM", "RESTRICT", "RESUME_SYM",
  "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM", "REVERSE_SYM",
  "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "RTREE_SYM",
  "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM", "SELECT_SYM",
  "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM", "SERIAL_SYM",
  "SESSION_SYM", "SERVER_SYM", "SERVER_OPTIONS", "SET", "SET_VAR",
  "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNAL_SYM", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT",
  "SNAPSHOT_SYM", "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS",
  "SQL_BEFORE_GTIDS", "SQL_BIG_RESULT", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM",
  "SQL_SMALL_RESULT", "SQL_SYM", "SQL_THREAD", "SSL_SYM", "STACKED_SYM",
  "STARTING", "STARTS_SYM", "START_SYM", "STATS_AUTO_RECALC_SYM",
  "STATS_PERSISTENT_SYM", "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM",
  "STDDEV_SAMP_SYM", "STD_SYM", "STOP_SYM", "STORAGE_SYM", "STORED_SYM",
  "STRAIGHT_JOIN", "STRING_SYM", "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM",
  "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM", "SUBSTRING",
  "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM",
  "SYSDATE", "TABLES", "TABLESPACE_SYM", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TERMINATED", "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM",
  "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB",
  "TINYINT", "TINYTEXT", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY", "VARCHAR",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "WITH_CUBE_SYM",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'",
  "'^'", "'~'", "'('", "')'", "','", "'!'", "'{'", "'}'", "';'", "'@'",
  "'.'", "':'", "$accept", "query", "$@1", "opt_end_of_input",
  "verb_clause", "statement", "deallocate", "deallocate_or_drop",
  "prepare", "prepare_src", "execute", "$@2", "execute_using",
  "execute_var_list", "execute_var_ident", "help", "$@3", "change", "$@4",
  "$@5", "filter_defs", "filter_def", "opt_filter_db_list",
  "filter_db_list", "filter_db_ident", "opt_filter_db_pair_list",
  "filter_db_pair_list", "opt_filter_table_list", "filter_table_list",
  "filter_table_ident", "opt_filter_string_list", "filter_string_list",
  "filter_string", "master_defs", "master_def", "ignore_server_id_list",
  "ignore_server_id", "master_file_def", "opt_channel", "create", "$@6",
  "$@7", "$@8", "$@9", "$@10", "$@11", "$@12", "$@13", "$@14",
  "server_options_list", "server_option", "event_tail", "$@15",
  "ev_schedule_time", "$@16", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@17", "ev_sql_stmt_inner", "clear_privileges",
  "clear_password_expire_options", "sp_name", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call", "$@18",
  "opt_sp_cparam_list", "opt_sp_cparams", "sp_cparams", "sp_fdparam_list",
  "sp_fdparams", "sp_init_param", "sp_fdparam", "sp_pdparam_list",
  "sp_pdparams", "sp_pdparam", "sp_opt_inout", "sp_proc_stmts",
  "sp_proc_stmts1", "sp_decls", "sp_decl", "$@19", "$@20", "$@21",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "$@22", "sp_proc_stmt",
  "sp_proc_stmt_if", "$@23", "sp_proc_stmt_statement", "$@24",
  "sp_proc_stmt_return", "$@25", "sp_proc_stmt_unlabeled", "$@26",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch", "$@27", "sp_proc_stmt_close", "sp_opt_fetch_noise",
  "sp_fetch_list", "sp_if", "$@28", "$@29", "$@30", "sp_elseifs",
  "case_stmt_specification", "simple_case_stmt", "$@31", "$@32",
  "searched_case_stmt", "$@33", "simple_when_clause_list",
  "searched_when_clause_list", "simple_when_clause", "$@34", "$@35",
  "searched_when_clause", "$@36", "$@37", "else_clause_opt",
  "sp_labeled_control", "$@38", "sp_opt_label", "sp_labeled_block", "$@39",
  "sp_unlabeled_block", "$@40", "sp_block_content", "$@41",
  "sp_unlabeled_control", "$@42", "$@43", "$@44", "$@45",
  "trg_action_time", "trg_event", "change_tablespace_access",
  "change_tablespace_info", "tablespace_info", "opt_logfile_group_name",
  "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@46", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_file_block_size", "ts_wait", "size_number",
  "create2", "create2a", "$@47", "create3", "$@48", "$@49",
  "opt_create_partitioning", "opt_partitioning", "partitioning", "$@50",
  "partition_entry", "$@51", "partition", "part_type_def", "$@52",
  "opt_linear", "opt_key_algo", "part_field_list", "part_field_item_list",
  "part_field_item", "part_column_list", "part_func", "sub_part_func",
  "opt_num_parts", "opt_sub_part", "$@53", "$@54", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "$@55", "part_name",
  "opt_part_values", "$@56", "$@57", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "$@58", "$@59",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@60", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "create_select", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_table_options",
  "table_options", "table_option", "opt_if_not_exists",
  "opt_create_table_options", "create_table_options_space_separated",
  "create_table_options", "create_table_option", "$@61", "default_charset",
  "default_collation", "storage_engines", "known_storage_engines",
  "row_types", "merge_insert_types", "udf_type", "create_field_list",
  "field_list", "field_list_item", "column_def", "key_def",
  "opt_check_constraint", "check_constraint", "opt_constraint",
  "constraint", "field_spec", "$@62", "field_def", "opt_generated_always",
  "opt_gcol_attribute_list", "gcol_attribute_list", "gcol_attribute",
  "opt_stored_attribute", "parse_gcol_expr", "generated_column_func",
  "type", "$@63", "$@64", "spatial_type", "char", "nchar", "varchar",
  "nvarchar", "int_type", "real_type", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_attribute", "opt_attribute_list", "attribute",
  "type_with_opt_collate", "now", "now_or_signed_literal", "charset",
  "charset_name", "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "opt_collate_explicit",
  "collation_name_or_default", "opt_default", "ascii", "unicode",
  "opt_binary", "opt_bin_mod", "ws_nweights", "$@65", "ws_level_flag_desc",
  "ws_level_flag_reverse", "ws_level_flags", "ws_level_number",
  "ws_level_list_item", "ws_level_list", "ws_level_range",
  "ws_level_list_or_range", "opt_ws_levels", "opt_primary", "references",
  "opt_ref_list", "ref_list", "opt_match_clause", "opt_on_update_delete",
  "delete_option", "normal_key_type", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "fulltext", "spatial", "init_key_options", "key_alg",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "key_using_alg", "all_key_opt", "normal_key_opt", "spatial_key_opt",
  "fulltext_key_opt", "btree_or_rtree", "key_list", "key_part",
  "opt_ident", "opt_component", "string_list", "alter", "$@66", "$@67",
  "$@68", "$@69", "$@70", "$@71", "$@72", "alter_user_command",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "password_expire",
  "connect_options", "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "$@73", "$@74", "$@75",
  "opt_validation", "alter_opt_validation", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule", "$@76",
  "add_part_extra", "reorg_partition_rule", "$@77", "reorg_parts_rule",
  "$@78", "alt_part_name_list", "alt_part_name_item", "alter_list",
  "add_column", "alter_list_item", "$@79", "$@80", "$@81",
  "opt_index_lock_algorithm", "alter_algorithm_option",
  "alter_lock_option", "opt_column", "opt_ignore", "opt_restrict",
  "opt_place", "opt_to", "group_replication", "slave", "slave_start",
  "start_slave_opts", "$@82", "start", "opt_start_transaction_option_list",
  "start_transaction_option_list", "start_transaction_option",
  "slave_connection_opts", "slave_user_name_opt", "slave_user_pass_opt",
  "slave_plugin_auth_opt", "slave_plugin_dir_opt",
  "opt_slave_thread_option_list", "slave_thread_option_list",
  "slave_thread_option", "slave_until", "slave_until_opts", "checksum",
  "$@83", "opt_checksum_type", "repair", "$@84", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "analyze", "$@85",
  "binlog_base64_event", "check", "$@86", "opt_mi_check_type",
  "mi_check_types", "mi_check_type", "optimize", "$@87",
  "opt_no_write_to_binlog", "rename", "$@88", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@89",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@90",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@91", "cache_keys_spec",
  "cache_key_list_or_empty", "opt_ignore_leaves", "select", "select_init",
  "select_paren", "select_paren_derived", "select_part2",
  "select_options_and_item_list", "$@92", "table_expression",
  "from_clause", "opt_from_clause", "table_reference_list",
  "select_options", "select_option_list", "select_option",
  "opt_select_lock_type", "select_item_list", "select_item",
  "select_alias", "optional_braces", "expr", "bool_pri", "predicate",
  "bit_expr", "or", "and", "not", "not2", "comp_op", "all_or_any",
  "simple_expr", "function_call_keyword", "function_call_nonkeyword",
  "function_call_conflict", "geometry_function", "function_call_generic",
  "fulltext_options", "opt_natural_language_mode", "opt_query_expansion",
  "opt_udf_expr_list", "udf_expr_list", "udf_expr", "sum_expr", "variable",
  "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_ref", "join_table_list", "esc_table_ref",
  "derived_table_list", "join_table", "normal_join", "opt_use_partition",
  "use_partition", "table_factor", "select_derived_union",
  "select_part2_derived", "$@93", "select_derived", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition",
  "index_hints_list", "opt_index_hints_list", "opt_key_definition",
  "opt_key_usage_list", "key_usage_element", "key_usage_list",
  "using_list", "interval", "interval_time_stamp", "date_time_type",
  "table_alias", "opt_table_alias", "opt_all", "opt_where_clause",
  "opt_having_clause", "opt_escape", "opt_group_clause", "group_list",
  "olap_opt", "alter_order_clause", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list", "order_dir",
  "opt_limit_clause", "limit_clause", "limit_options", "limit_option",
  "opt_simple_limit", "ulong_num", "real_ulong_num", "ulonglong_num",
  "real_ulonglong_num", "dec_num_error", "dec_num",
  "opt_procedure_analyse_clause", "opt_procedure_analyse_params",
  "procedure_analyse_param", "select_var_list", "select_var_ident",
  "opt_into", "into", "into_destination", "do_stmt",
  "empty_select_options", "drop", "$@94", "$@95", "$@96", "$@97",
  "table_list", "table_name", "table_alias_ref_list", "if_exists",
  "opt_temporary", "drop_ts_options_list", "drop_ts_options",
  "drop_ts_option", "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_from_subquery", "fields", "insert_values",
  "insert_query_expression", "value_or_values", "values_list", "equal",
  "opt_equal", "row_value", "opt_values", "values", "expr_or_default",
  "opt_insert_update_list", "update_stmt", "update_list", "update_elem",
  "opt_low_priority", "delete_stmt", "opt_wild", "opt_delete_options",
  "opt_delete_option", "truncate", "$@98", "opt_table_sym",
  "opt_profile_defs", "profile_defs", "profile_def", "opt_profile_args",
  "show", "$@99", "show_param", "$@100", "$@101", "show_engine_param",
  "master_or_binary", "opt_storage", "opt_db", "opt_full", "from_or_in",
  "binlog_in", "binlog_from", "opt_wild_or_where",
  "opt_wild_or_where_for_show", "describe", "$@102", "$@103",
  "explainable_command", "describe_command", "opt_extended_describe",
  "opt_describe_column", "flush", "$@104", "flush_options", "$@105",
  "$@106", "opt_flush_lock", "$@107", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@108", "reset_options", "reset_option",
  "$@109", "slave_reset_options", "purge", "$@110", "purge_options",
  "purge_option", "kill", "kill_option", "use", "load", "$@111", "$@112",
  "$@113", "$@114", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "opt_field_term", "field_term_list", "field_term",
  "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "field_ident", "table_ident", "table_ident_opt_wild",
  "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident", "label_ident", "ident_or_text",
  "user", "keyword", "keyword_sp", "set", "start_option_value_list",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "option_value_following_option_type", "option_value_no_option_type",
  "internal_variable_name", "transaction_characteristics",
  "transaction_access_mode", "opt_transaction_access_mode",
  "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types", "password",
  "set_expr_or_default", "lock", "$@115", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@116",
  "shutdown_stmt", "handler", "$@117", "handler_read_or_scan",
  "handler_scan_function", "handler_rkey_function", "$@118",
  "handler_rkey_mode", "revoke", "$@119", "revoke_command", "grant",
  "$@120", "grant_command", "opt_table", "grant_privileges",
  "opt_privileges", "object_privilege_list", "object_privilege", "$@121",
  "$@122", "$@123", "$@124", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "grant_list",
  "grant_user", "opt_column_list", "column_list", "column_list_id",
  "require_clause", "grant_options", "opt_grant_option",
  "grant_option_list", "grant_option", "begin", "$@125", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "opt_union_clause", "union_list", "union_opt",
  "opt_union_order_or_limit", "union_order_or_limit", "order_or_limit",
  "union_option", "query_specification", "query_expression_body",
  "subselect", "$@126", "opt_query_spec_options", "query_spec_option_list",
  "query_spec_option", "view_or_trigger_or_sp_or_event", "definer_tail",
  "no_definer_tail", "definer_opt", "no_definer", "definer",
  "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_suid", "view_tail", "$@127", "view_list_opt", "view_list",
  "view_select", "$@128", "view_select_aux", "$@129",
  "create_view_select_paren", "$@130", "create_view_select", "$@131",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@132", "udf_tail",
  "sf_tail", "$@133", "$@134", "$@135", "$@136", "$@137", "sp_tail",
  "$@138", "$@139", "$@140", "$@141", "xa", "opt_convert_xid", "xid",
  "begin_or_start", "opt_join_or_resume", "opt_one_phase", "opt_suspend",
  "install", "uninstall", YY_NULL
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   124,
      38,    45,    43,    42,    47,    37,    94,   126,    40,    41,
      44,    33,   123,   125,    59,    64,    46,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   668,   669,   670,   669,   669,   671,   671,   672,   672,
     673,   673,   673,   673,   673,   673,   673,   673,   673,   673,
     673,   673,   673,   673,   673,   673,   673,   673,   673,   673,
     673,   673,   673,   673,   673,   673,   673,   673,   673,   673,
     673,   673,   673,   673,   673,   673,   673,   673,   673,   673,
     673,   673,   673,   673,   673,   673,   673,   673,   673,   673,
     673,   673,   673,   673,   673,   674,   675,   675,   676,   677,
     677,   679,   678,   680,   680,   681,   681,   682,   684,   683,
     686,   685,   687,   685,   688,   688,   689,   689,   689,   689,
     689,   689,   689,   690,   690,   691,   691,   692,   693,   693,
     694,   694,   695,   695,   696,   696,   697,   698,   698,   699,
     699,   700,   701,   701,   702,   702,   702,   702,   702,   702,
     702,   702,   702,   702,   702,   702,   702,   702,   702,   702,
     702,   702,   702,   702,   702,   702,   703,   703,   703,   704,
     705,   705,   705,   705,   706,   706,   708,   707,   709,   710,
     707,   711,   712,   707,   713,   714,   707,   715,   707,   716,
     707,   707,   707,   707,   707,   717,   717,   718,   718,   718,
     718,   718,   718,   718,   720,   719,   722,   721,   721,   723,
     723,   723,   723,   724,   724,   725,   725,   726,   726,   727,
     727,   728,   728,   730,   729,   731,   731,   731,   731,   731,
     731,   731,   731,   731,   731,   731,   731,   731,   732,   733,
     734,   734,   735,   735,   736,   736,   737,   737,   737,   737,
     737,   737,   737,   738,   738,   738,   739,   739,   741,   740,
     742,   742,   743,   743,   744,   744,   745,   745,   746,   746,
     747,   748,   749,   749,   750,   750,   751,   752,   752,   752,
     752,   753,   753,   754,   754,   755,   755,   757,   756,   756,
     758,   756,   759,   756,   760,   760,   761,   761,   762,   763,
     763,   764,   765,   765,   766,   766,   766,   766,   766,   767,
     768,   768,   769,   769,   770,   770,   771,   771,   772,   772,
     772,   773,   773,   773,   773,   773,   773,   773,   773,   773,
     773,   773,   773,   774,   775,   776,   776,   776,   777,   777,
     778,   778,   779,   780,   780,   781,   781,   782,   783,   783,
     784,   785,   785,   785,   785,   785,   785,   785,   785,   785,
     785,   785,   785,   785,   786,   786,   787,   788,   787,   789,
     789,   789,   789,   789,   789,   789,   789,   789,   789,   789,
     789,   789,   791,   790,   793,   792,   795,   794,   797,   796,
     798,   799,   800,   802,   801,   803,   804,   804,   804,   805,
     805,   807,   808,   809,   806,   810,   810,   810,   811,   811,
     813,   814,   812,   816,   815,   817,   817,   818,   818,   820,
     821,   819,   823,   824,   822,   825,   825,   827,   826,   828,
     828,   830,   829,   832,   831,   834,   833,   835,   836,   837,
     835,   838,   839,   835,   840,   840,   841,   841,   841,   842,
     843,   844,   845,   845,   846,   846,   847,   848,   849,   849,
     851,   850,   852,   852,   852,   853,   853,   853,   854,   854,
     855,   855,   855,   856,   856,   856,   856,   856,   856,   856,
     856,   856,   857,   857,   858,   858,   858,   859,   859,   859,
     859,   859,   860,   860,   861,   861,   861,   862,   862,   862,
     862,   862,   862,   862,   863,   863,   864,   864,   864,   865,
     865,   865,   866,   867,   868,   869,   870,   871,   871,   871,
     872,   873,   874,   875,   876,   877,   878,   879,   880,   881,
     882,   882,   883,   883,   884,   884,   884,   884,   885,   886,
     885,   887,   888,   887,   889,   887,   890,   891,   891,   893,
     892,   895,   894,   896,   897,   898,   897,   897,   897,   897,
     897,   899,   899,   900,   900,   901,   901,   902,   902,   903,
     904,   905,   906,   907,   907,   908,   909,   908,   910,   908,
     911,   911,   912,   913,   914,   914,   915,   915,   916,   916,
     918,   917,   919,   920,   921,   920,   922,   920,   923,   923,
     924,   924,   925,   925,   927,   928,   926,   929,   929,   930,
     930,   931,   931,   932,   932,   934,   933,   935,   936,   936,
     937,   937,   938,   938,   938,   938,   938,   938,   938,   938,
     939,   940,   940,   941,   941,   942,   942,   943,   943,   944,
     944,   945,   945,   946,   947,   947,   948,   948,   949,   949,
     950,   950,   950,   951,   951,   951,   951,   951,   951,   951,
     951,   951,   951,   951,   951,   951,   951,   951,   951,   951,
     951,   951,   951,   952,   951,   951,   951,   951,   951,   951,
     951,   951,   951,   951,   951,   953,   954,   955,   956,   957,
     957,   957,   957,   957,   957,   958,   958,   958,   959,   959,
     959,   959,   960,   961,   961,   962,   962,   963,   963,   964,
     964,   964,   964,   964,   964,   965,   965,   966,   967,   967,
     968,   970,   969,   971,   971,   972,   972,   973,   973,   974,
     974,   975,   975,   975,   975,   975,   975,   976,   976,   976,
     977,   978,   979,   979,   979,   979,   979,   979,   979,   979,
     979,   979,   979,   979,   979,   979,   979,   979,   979,   979,
     979,   979,   979,   979,   979,   979,   979,   979,   979,   979,
     979,   979,   979,   979,   979,   979,   979,   980,   979,   981,
     979,   979,   979,   979,   982,   982,   982,   982,   982,   982,
     982,   982,   983,   984,   984,   985,   985,   986,   986,   986,
     986,   986,   987,   987,   987,   987,   987,   988,   988,   988,
     989,   989,   989,   990,   991,   991,   992,   992,   992,   993,
     993,   994,   994,   995,   995,   995,   996,   996,   996,   996,
     997,   997,   998,   998,   999,   999,  1000,  1000,  1001,  1001,
    1001,  1001,  1001,  1001,  1001,  1001,  1001,  1001,  1001,  1001,
    1001,  1001,  1001,  1001,  1001,  1002,  1003,  1004,  1004,  1005,
    1005,  1006,  1006,  1007,  1007,  1008,  1008,  1009,  1009,  1010,
    1010,  1011,  1012,  1012,  1013,  1013,  1014,  1014,  1015,  1015,
    1016,  1016,  1016,  1017,  1017,  1017,  1018,  1018,  1018,  1018,
    1018,  1018,  1018,  1019,  1019,  1021,  1020,  1022,  1022,  1023,
    1024,  1024,  1024,  1024,  1025,  1026,  1027,  1027,  1028,  1029,
    1029,  1030,  1030,  1031,  1031,  1032,  1033,  1033,  1034,  1034,
    1035,  1035,  1035,  1035,  1036,  1036,  1036,  1036,  1036,  1037,
    1037,  1037,  1037,  1037,  1038,  1039,  1039,  1040,  1040,  1041,
    1041,  1042,  1042,  1042,  1043,  1043,  1044,  1045,  1046,  1047,
    1047,  1048,  1048,  1049,  1049,  1050,  1050,  1051,  1051,  1052,
    1052,  1053,  1053,  1054,  1054,  1055,  1055,  1056,  1056,  1057,
    1058,  1058,  1059,  1059,  1059,  1060,  1060,  1061,  1061,  1062,
    1062,  1063,  1063,  1064,  1064,  1066,  1065,  1067,  1065,  1065,
    1068,  1065,  1069,  1065,  1070,  1065,  1071,  1065,  1072,  1065,
    1065,  1065,  1065,  1065,  1065,  1065,  1065,  1073,  1074,  1074,
    1075,  1075,  1076,  1076,  1076,  1076,  1076,  1076,  1077,  1078,
    1078,  1079,  1079,  1080,  1080,  1080,  1080,  1081,  1082,  1082,
    1082,  1082,  1083,  1083,  1084,  1084,  1085,  1085,  1086,  1086,
    1086,  1086,  1086,  1086,  1086,  1086,  1086,  1086,  1087,  1086,
    1086,  1088,  1086,  1089,  1086,  1086,  1086,  1086,  1086,  1086,
    1086,  1090,  1090,  1091,  1091,  1092,  1093,  1093,  1095,  1094,
    1096,  1096,  1096,  1098,  1097,  1099,  1100,  1099,  1101,  1101,
    1102,  1103,  1103,  1104,  1105,  1105,  1105,  1106,  1105,  1107,
    1108,  1105,  1105,  1105,  1105,  1105,  1105,  1105,  1105,  1105,
    1105,  1105,  1105,  1105,  1105,  1105,  1105,  1105,  1105,  1105,
    1109,  1109,  1109,  1109,  1109,  1110,  1110,  1111,  1111,  1112,
    1112,  1113,  1113,  1114,  1114,  1114,  1115,  1115,  1115,  1116,
    1116,  1116,  1116,  1117,  1117,  1118,  1118,  1119,  1121,  1120,
    1122,  1123,  1123,  1124,  1124,  1125,  1125,  1125,  1126,  1127,
    1127,  1128,  1128,  1129,  1129,  1130,  1130,  1131,  1131,  1132,
    1132,  1133,  1133,  1134,  1134,  1135,  1135,  1135,  1135,  1135,
    1137,  1136,  1138,  1138,  1138,  1140,  1139,  1141,  1141,  1142,
    1142,  1143,  1143,  1143,  1145,  1144,  1146,  1148,  1147,  1149,
    1149,  1150,  1150,  1151,  1151,  1151,  1151,  1151,  1151,  1153,
    1152,  1154,  1154,  1154,  1156,  1155,  1155,  1157,  1157,  1158,
    1158,  1159,  1161,  1160,  1162,  1162,  1163,  1163,  1164,  1165,
    1166,  1166,  1168,  1167,  1169,  1169,  1170,  1170,  1171,  1172,
    1174,  1173,  1175,  1176,  1176,  1177,  1177,  1178,  1179,  1179,
    1180,  1180,  1181,  1181,  1182,  1182,  1182,  1184,  1183,  1185,
    1186,  1187,  1187,  1188,  1188,  1189,  1189,  1190,  1190,  1191,
    1191,  1191,  1192,  1192,  1192,  1193,  1193,  1193,  1194,  1194,
    1195,  1195,  1195,  1195,  1195,  1196,  1196,  1197,  1197,  1197,
    1197,  1197,  1197,  1197,  1197,  1197,  1197,  1197,  1198,  1198,
    1198,  1198,  1198,  1199,  1199,  1199,  1199,  1199,  1199,  1199,
    1199,  1199,  1199,  1199,  1199,  1199,  1199,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1201,  1201,  1202,  1202,  1203,  1203,  1204,  1204,
    1205,  1205,  1205,  1205,  1205,  1205,  1205,  1206,  1206,  1207,
    1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,
    1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,
    1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,
    1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,
    1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,
    1208,  1208,  1208,  1208,  1208,  1208,  1208,  1209,  1209,  1209,
    1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,
    1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,  1210,
    1210,  1210,  1210,  1210,  1210,  1210,  1210,  1210,  1210,  1210,
    1210,  1210,  1210,  1210,  1210,  1210,  1210,  1210,  1210,  1210,
    1210,  1210,  1210,  1211,  1211,  1211,  1211,  1211,  1211,  1211,
    1211,  1212,  1212,  1213,  1213,  1214,  1214,  1215,  1215,  1216,
    1216,  1217,  1217,  1218,  1219,  1219,  1219,  1219,  1219,  1219,
    1219,  1219,  1219,  1219,  1219,  1219,  1219,  1219,  1219,  1219,
    1219,  1219,  1219,  1220,  1221,  1221,  1221,  1222,  1222,  1223,
    1223,  1224,  1224,  1225,  1225,  1226,  1227,  1227,  1227,  1227,
    1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,  1228,  1228,
    1229,  1229,  1230,  1230,  1231,  1231,  1232,  1232,  1233,  1233,
    1234,  1234,  1235,  1235,  1236,  1237,  1237,  1238,  1238,  1239,
    1239,  1239,  1239,  1239,  1239,  1239,  1239,  1239,  1239,  1239,
    1239,  1240,  1240,  1240,  1241,  1241,  1242,  1243,  1243,  1243,
    1244,  1244,  1246,  1245,  1247,  1248,  1248,  1249,  1249,  1249,
    1249,  1250,  1250,  1251,  1251,  1252,  1252,  1253,  1253,  1254,
    1255,  1255,  1256,  1256,  1257,  1257,  1258,  1258,  1259,  1259,
    1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,
    1260,  1260,  1260,  1260,  1260,  1260,  1260,  1260,  1260,  1261,
    1261,  1261,  1261,  1262,  1262,  1262,  1263,  1263,  1264,  1264,
    1265,  1265,  1266,  1266,  1267,  1267,  1268,  1268,  1269,  1269,
    1270,  1270,  1270,  1271,  1272,  1272,  1273,  1274,  1274,  1275,
    1276,  1276,  1277,  1277,  1277,  1278,  1278,  1279,  1280,  1280,
    1280,  1281,  1281,  1281,  1281,  1281,  1282,  1282,  1283,  1283,
    1283,  1283,  1283,  1283,  1284,  1284,  1284,  1284,  1284,  1285,
    1285,  1285,  1285,  1285,  1286,  1286,  1286,  1286,  1287,  1288,
    1288,  1289,  1289,  1290,  1290,  1290,  1291,  1292,  1292,  1293,
    1293,  1294,  1294,  1295,  1296,  1296,  1296,  1297,  1298,  1300,
    1299,  1301,  1302,  1299,  1299,  1299,  1299,  1299,  1299,  1303,
    1299,  1299,  1299,  1299,  1299,  1299,  1304,  1304,  1305,  1306,
    1306,  1307,  1307,  1308,  1308,  1309,  1309,  1310,  1310,  1310,
    1311,  1311,  1312,  1312,  1312,  1313,  1313,  1313,  1314,  1314,
    1314,  1314,  1315,  1315,  1316,  1316,  1317,  1317,  1317,  1318,
    1318,  1318,  1319,  1319,  1320,  1321,  1321,  1322,  1322,  1323,
    1323,  1324,  1324,  1325,  1325,  1326,  1327,  1327,  1328,  1328,
    1329,  1329,  1330,  1330,  1331,  1332,  1332,  1333,  1334,  1334,
    1335,  1335,  1335,  1336,  1336,  1337,  1337,  1338,  1338,  1338,
    1340,  1339,  1341,  1341,  1342,  1342,  1343,  1343,  1344,  1344,
    1344,  1344,  1344,  1344,  1344,  1344,  1344,  1345,  1345,  1347,
    1346,  1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,
    1348,  1348,  1348,  1349,  1348,  1350,  1348,  1348,  1348,  1348,
    1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,
    1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,
    1348,  1348,  1348,  1348,  1348,  1348,  1348,  1351,  1351,  1351,
    1352,  1352,  1353,  1353,  1354,  1354,  1355,  1355,  1356,  1356,
    1357,  1357,  1358,  1358,  1359,  1359,  1359,  1360,  1360,  1360,
    1362,  1361,  1363,  1361,  1364,  1364,  1364,  1364,  1364,  1364,
    1365,  1365,  1366,  1366,  1366,  1366,  1367,  1367,  1367,  1369,
    1368,  1371,  1372,  1370,  1370,  1373,  1373,  1374,  1373,  1375,
    1375,  1376,  1376,  1376,  1376,  1376,  1376,  1376,  1376,  1376,
    1376,  1376,  1376,  1376,  1376,  1377,  1377,  1379,  1378,  1380,
    1380,  1382,  1381,  1381,  1381,  1383,  1383,  1385,  1384,  1386,
    1387,  1387,  1388,  1389,  1389,  1389,  1390,  1392,  1393,  1394,
    1395,  1391,  1396,  1396,  1397,  1397,  1398,  1398,  1398,  1399,
    1399,  1399,  1400,  1400,  1401,  1401,  1402,  1402,  1402,  1402,
    1403,  1403,  1404,  1404,  1405,  1405,  1406,  1406,  1407,  1407,
    1408,  1408,  1409,  1409,  1409,  1410,  1410,  1411,  1411,  1412,
    1412,  1413,  1413,  1414,  1415,  1415,  1415,  1415,  1416,  1416,
    1416,  1417,  1418,  1418,  1418,  1419,  1419,  1419,  1419,  1419,
    1419,  1419,  1419,  1419,  1419,  1420,  1420,  1420,  1420,  1420,
    1421,  1421,  1421,  1422,  1422,  1423,  1423,  1424,  1425,  1425,
    1426,  1426,  1427,  1427,  1427,  1428,  1428,  1428,  1428,  1429,
    1429,  1429,  1430,  1430,  1431,  1432,  1432,  1433,  1434,  1435,
    1436,  1437,  1438,  1438,  1439,  1439,  1440,  1440,  1440,  1441,
    1441,  1441,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1444,  1445,  1445,  1445,
    1445,  1445,  1445,  1445,  1446,  1446,  1447,  1447,  1448,  1448,
    1449,  1449,  1450,  1450,  1450,  1451,  1451,  1451,  1451,  1452,
    1452,  1452,  1452,  1453,  1454,  1454,  1454,  1454,  1454,  1454,
    1455,  1455,  1455,  1456,  1456,  1457,  1458,  1458,  1459,  1460,
    1460,  1461,  1461,  1462,  1462,  1462,  1462,  1463,  1464,  1464,
    1464,  1464,  1464,  1466,  1465,  1467,  1467,  1468,  1468,  1469,
    1470,  1470,  1470,  1470,  1472,  1471,  1473,  1474,  1474,  1475,
    1474,  1476,  1476,  1477,  1477,  1478,  1478,  1478,  1478,  1479,
    1478,  1480,  1480,  1480,  1480,  1480,  1482,  1481,  1483,  1483,
    1483,  1483,  1483,  1485,  1484,  1486,  1486,  1486,  1486,  1487,
    1487,  1488,  1488,  1489,  1489,  1490,  1490,  1492,  1491,  1493,
    1491,  1494,  1491,  1495,  1491,  1491,  1491,  1491,  1491,  1491,
    1491,  1491,  1491,  1491,  1491,  1491,  1491,  1491,  1491,  1491,
    1491,  1491,  1491,  1491,  1491,  1491,  1491,  1491,  1491,  1491,
    1491,  1496,  1496,  1497,  1497,  1498,  1498,  1498,  1499,  1499,
    1499,  1499,  1500,  1500,  1501,  1501,  1502,  1502,  1502,  1502,
    1502,  1502,  1503,  1503,  1504,  1504,  1505,  1506,  1506,  1506,
    1506,  1506,  1507,  1507,  1508,  1508,  1509,  1509,  1510,  1510,
    1510,  1510,  1510,  1512,  1511,  1513,  1513,  1514,  1514,  1514,
    1515,  1515,  1515,  1516,  1516,  1517,  1518,  1518,  1519,  1520,
    1521,  1521,  1522,  1523,  1523,  1523,  1524,  1524,  1525,  1526,
    1526,  1527,  1527,  1527,  1528,  1528,  1529,  1529,  1531,  1530,
    1532,  1532,  1533,  1533,  1534,  1534,  1534,  1534,  1534,  1534,
    1534,  1534,  1535,  1535,  1535,  1536,  1536,  1536,  1536,  1536,
    1537,  1537,  1537,  1537,  1537,  1537,  1538,  1538,  1539,  1540,
    1541,  1541,  1541,  1542,  1543,  1543,  1543,  1544,  1544,  1544,
    1546,  1545,  1547,  1547,  1548,  1548,  1550,  1549,  1552,  1551,
    1551,  1554,  1553,  1553,  1556,  1555,  1557,  1557,  1557,  1557,
    1558,  1558,  1559,  1559,  1561,  1560,  1562,  1562,  1564,  1565,
    1566,  1567,  1568,  1563,  1570,  1571,  1572,  1573,  1569,  1574,
    1574,  1574,  1574,  1574,  1574,  1575,  1575,  1576,  1576,  1576,
    1577,  1577,  1578,  1578,  1578,  1579,  1579,  1580,  1580,  1580,
    1581,  1582
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     4,     1,
       2,     0,     4,     0,     2,     3,     1,     2,     0,     3,
       0,     6,     0,     5,     1,     3,     3,     3,     3,     3,
       3,     3,     3,     2,     3,     1,     3,     1,     2,     3,
       5,     7,     2,     3,     1,     3,     3,     2,     3,     1,
       3,     1,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     5,     3,     1,     0,     1,     3,     1,
       3,     3,     3,     3,     0,     3,     0,     7,     0,     0,
      14,     0,     0,    14,     0,     0,    14,     0,     6,     0,
       3,     8,     4,     3,    11,     1,     3,     2,     2,     2,
       2,     2,     2,     2,     0,    12,     0,     6,     2,     0,
       1,     3,     1,     0,     2,     0,     2,     0,     1,     3,
       4,     0,     2,     0,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       3,     1,     0,     2,     0,     2,     2,     2,     2,     2,
       3,     3,     1,     1,     1,     2,     3,     3,     0,     4,
       0,     3,     0,     1,     3,     1,     0,     1,     3,     1,
       0,     3,     0,     1,     3,     1,     4,     0,     1,     1,
       1,     0,     3,     2,     3,     0,     3,     0,     5,     5,
       0,     7,     0,     6,     1,     1,     1,     3,     1,     1,
       1,     3,     0,     1,     1,     1,     1,     2,     1,     3,
       1,     1,     0,     1,     0,     2,     3,     5,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     4,     0,     1,     1,     1,     3,
       1,     3,     3,     1,     2,     1,     1,     1,     1,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     0,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     5,     0,     2,     0,     3,     0,     2,
       2,     2,     2,     0,     6,     2,     0,     2,     1,     1,
       3,     0,     0,     0,     7,     0,     2,     2,     1,     1,
       0,     0,     8,     0,     6,     1,     2,     1,     2,     0,
       0,     6,     0,     0,     6,     0,     2,     0,     5,     0,
       1,     0,     5,     0,     2,     0,     5,     4,     0,     0,
       8,     0,     0,     8,     1,     1,     1,     1,     1,     2,
       4,     5,     0,     4,     4,     4,     3,     3,     2,     2,
       0,     2,     1,     2,     3,     1,     1,     1,     0,     1,
       1,     2,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     2,     3,     1,     1,     1,
       1,     1,     0,     1,     1,     2,     3,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     2,     3,     1,
       1,     1,     2,     2,     2,     1,     1,     1,     1,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     4,     3,
       1,     1,     1,     1,     2,     3,     2,     4,     5,     0,
       5,     0,     0,     5,     0,     7,     1,     0,     1,     0,
       3,     0,     3,     5,     6,     0,     4,     2,     2,     2,
       2,     0,     1,     0,     3,     0,     1,     1,     3,     1,
       4,     3,     3,     0,     2,     0,     0,     7,     0,    10,
       1,     3,     1,     1,     0,     2,     0,     3,     1,     3,
       0,     6,     1,     0,     0,     5,     0,     4,     1,     1,
       1,     3,     1,     3,     0,     0,     5,     1,     3,     1,
       1,     0,     3,     1,     3,     0,     4,     1,     0,     1,
       2,     1,     3,     4,     3,     3,     3,     4,     4,     3,
       4,     0,     1,     0,     1,     1,     2,     1,     1,     0,
       1,     1,     2,     1,     0,     3,     0,     1,     1,     2,
       1,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     0,     6,     1,     1,     3,     4,     4,
       3,     2,     2,     3,     3,     4,     4,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     1,     2,     2,     7,
       8,     8,     8,     8,     2,     0,     1,     4,     0,     1,
       2,     0,     3,     2,     9,     0,     2,     0,     1,     2,
       1,     1,     2,     2,     2,     1,     2,     0,     1,     1,
       4,     1,     3,     3,     3,     1,     2,     1,     1,     3,
       2,     3,     2,     2,     1,     3,     3,     2,     3,     1,
       2,     2,     2,     1,     2,     1,     1,     1,     2,     3,
       2,     3,     2,     2,     3,     3,     3,     0,     6,     0,
       6,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     1,     2,     1,     2,
       3,     2,     1,     1,     1,     1,     1,     1,     1,     2,
       0,     1,     1,     5,     0,     3,     0,     2,     3,     0,
       1,     2,     1,     1,     1,     1,     3,     3,     3,     3,
       0,     1,     0,     1,     0,     1,     2,     1,     1,     2,
       2,     3,     1,     3,     2,     1,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     1,     1,     2,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     1,
       1,     1,     0,     2,     0,     2,     1,     1,     0,     1,
       1,     2,     2,     1,     2,     2,     0,     1,     1,     1,
       3,     1,     3,     0,     1,     0,     4,     1,     1,     1,
       0,     1,     2,     1,     1,     2,     1,     3,     3,     1,
       1,     0,     2,     0,     1,     5,     0,     3,     3,     1,
       0,     2,     2,     2,     0,     3,     3,     6,     6,     1,
       1,     2,     2,     2,     1,     2,     2,     1,     1,     0,
       1,     1,     1,     1,     0,     1,     1,     1,     0,     1,
       2,     0,     1,     0,     1,     0,     1,     1,     2,     1,
       2,     1,     2,     2,     2,     3,     2,     1,     1,     1,
       1,     3,     1,     1,     1,     4,     2,     1,     4,     0,
       1,     0,     2,     1,     3,     0,     5,     0,     5,     7,
       0,     5,     0,     5,     0,     5,     0,     4,     0,    10,
       3,     4,     3,     3,     7,     5,     5,     4,     0,     1,
       1,     2,     2,     2,     1,     4,     2,     2,     3,     0,
       2,     2,     1,     2,     2,     2,     2,     3,     0,     3,
       1,     4,     0,     3,     0,     2,     0,     1,     0,     2,
       2,     2,     2,     1,     1,     1,     3,     4,     0,     6,
       4,     0,     5,     0,     6,     4,     3,     1,     7,     4,
       4,     0,     1,     2,     2,     2,     1,     1,     0,     5,
       0,     3,     2,     0,     5,     0,     0,     6,     1,     3,
       1,     1,     3,     2,     3,     2,     4,     0,     6,     0,
       0,     7,     4,     4,     3,     3,     2,     2,     6,     5,
       3,     5,     5,     1,     1,     1,     1,     1,     2,     1,
       0,     1,     1,     2,     2,     3,     3,     3,     3,     0,
       1,     0,     1,     0,     1,     1,     0,     2,     1,     0,
       1,     1,     1,     2,     2,     2,     4,     3,     0,     4,
       3,     0,     1,     1,     3,     3,     2,     2,     4,     0,
       3,     0,     3,     0,     3,     0,     3,     0,     1,     1,
       3,     1,     1,     0,     2,     1,     3,     3,     3,     1,
       0,     5,     0,     1,     1,     0,     6,     0,     1,     1,
       2,     1,     1,     1,     0,     5,     2,     0,     5,     0,
       1,     1,     2,     1,     1,     1,     1,     1,     2,     0,
       5,     0,     1,     1,     0,     4,     4,     3,     5,     1,
       3,     3,     0,     6,     1,     1,     1,     3,     2,     3,
       1,     1,     0,     6,     1,     1,     1,     3,     3,     4,
       0,     5,     1,     0,     4,     0,     2,     1,     3,     4,
       2,     3,     3,     3,     4,     3,    11,     0,     3,     8,
       2,     0,     1,     1,     1,     0,     1,     2,     1,     1,
       1,     1,     0,     2,     4,     3,     1,     1,     1,     2,
       0,     2,     2,     1,     1,     0,     2,     3,     3,     3,
       2,     3,     4,     3,     4,     3,     4,     1,     3,     4,
       3,     6,     1,     5,     6,     5,     7,     6,     8,     5,
       6,     4,     4,     5,     3,     4,     1,     3,     3,     3,
       3,     3,     3,     5,     5,     3,     3,     3,     3,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     1,     1,     1,     3,
       2,     2,     2,     2,     3,     3,     5,     6,     4,     4,
       7,     2,     6,     5,     6,     6,     4,     4,     5,     3,
       4,     6,     2,     4,     4,     4,    10,     6,     8,     6,
       4,     4,     6,     4,     4,     4,     6,     4,     7,     7,
       7,     6,     6,     6,     6,     3,     4,     6,     8,     2,
       2,     8,     8,     6,     6,     1,     6,     6,     8,     8,
       6,     8,     6,     2,     8,     8,     2,     2,     2,     4,
       4,     4,     4,     3,     8,     6,     8,     4,     6,     4,
       4,     6,     8,     4,     3,     6,     4,     6,     5,     8,
       7,    10,     1,     6,     4,     4,     4,     4,     4,     6,
       4,     4,     6,     2,     3,     0,     4,     0,     3,     0,
       1,     1,     3,     2,     4,     5,     4,     4,     4,     5,
       4,     5,     4,     5,     4,     5,     4,     4,     4,     4,
       4,     5,     7,     2,     3,     1,     4,     0,     1,     0,
       2,     0,     3,     3,     1,     2,     2,     3,     2,     1,
       2,     1,     2,     1,     2,     2,     2,     1,     0,     1,
       1,     3,     1,     3,     1,     3,     0,     1,     0,     2,
       4,     5,     1,     1,     1,     1,     4,     1,     3,     3,
       3,     5,     5,     7,     4,     7,     9,     6,     7,     9,
       6,     1,     2,     2,     0,     1,     4,     4,     4,     4,
       2,     4,     0,     3,     1,     0,     1,     0,     2,     3,
       3,     1,     1,     6,     6,     1,     2,     0,     1,     1,
       0,     1,     1,     1,     1,     3,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     1,     1,     0,     2,     0,     1,
       0,     2,     0,     2,     2,     0,     0,     4,     3,     1,
       0,     1,     1,     3,     3,     1,     2,     0,     1,     3,
       3,     1,     0,     1,     1,     0,     1,     2,     1,     3,
       3,     1,     1,     1,     1,     1,     0,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     5,     0,     1,     3,     1,     3,     1,     2,
       1,     0,     1,     2,     5,     2,     1,     3,     0,     0,
       7,     0,     0,     8,     4,     6,     4,     4,     5,     0,
       6,     4,     4,     4,     5,     4,     1,     3,     1,     1,
       3,     0,     2,     0,     1,     0,     1,     1,     2,     3,
       1,     1,     8,     9,     8,     6,     7,     6,     0,     1,
       1,     1,     1,     1,     0,     1,     1,     3,     4,     1,
       3,     4,     3,     1,     2,     2,     4,     1,     1,     3,
       1,     1,     1,     0,     1,     3,     0,     1,     3,     1,
       1,     1,     0,     5,     9,     3,     1,     3,     0,     1,
       8,     6,     7,     0,     2,     0,     2,     1,     1,     1,
       0,     4,     0,     1,     0,     1,     1,     3,     1,     1,
       2,     2,     2,     1,     1,     1,     1,     0,     3,     0,
       3,     2,     4,     4,     3,     4,     4,     1,     3,     3,
       6,     2,     2,     0,     6,     0,     7,     5,     2,     1,
       5,     5,     2,     2,     1,     4,     3,     2,     3,     2,
       2,     1,     3,     4,     3,     3,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     4,     1,     1,     1,
       1,     1,     0,     1,     0,     2,     0,     1,     1,     1,
       0,     2,     0,     2,     0,     2,     2,     0,     2,     2,
       0,     4,     0,     4,     1,     1,     1,     1,     1,     3,
       1,     1,     0,     1,     1,     3,     0,     1,     1,     0,
       4,     0,     0,     5,     1,     0,     3,     0,     3,     3,
       1,     2,     2,     2,     2,     2,     3,     2,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     0,     3,     3,
       1,     0,     4,     1,     2,     0,     1,     0,     3,     3,
       2,     2,     3,     0,     1,     1,     2,     0,     0,     0,
       0,    22,     1,     1,     0,     1,     0,     1,     1,     0,
       1,     1,     0,     2,     2,     1,     3,     4,     3,     3,
       0,     2,     2,     1,     3,     3,     0,     4,     0,     3,
       1,     1,     0,     3,     2,     3,     1,     1,     2,     0,
       2,     3,     1,     3,     1,     1,     2,     2,     1,     1,
       1,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       2,     2,     2,     1,     1,     3,     5,     2,     1,     1,
       1,     1,     3,     4,     5,     1,     5,     3,     2,     1,
       3,     2,     2,     4,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     2,     2,
       3,     6,     5,     8,     2,     2,     0,     2,     1,     3,
       2,     1,     1,     1,     1,     0,     1,     1,     1,     0,
       2,     2,     2,     3,     3,     4,     6,     2,     3,     3,
       1,     3,     3,     2,     2,     1,     0,     2,     3,     0,
       2,     2,     2,     2,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     0,     4,     1,     1,     1,     3,     3,
       1,     1,     2,     2,     0,     3,     1,     4,     3,     0,
       7,     1,     2,     1,     1,     1,     1,     1,     1,     0,
       5,     1,     1,     1,     1,     1,     0,     4,     6,     6,
       6,     7,     5,     0,     4,     8,     8,     8,     6,     0,
       1,     1,     2,     0,     1,     1,     3,     0,     3,     0,
       3,     0,     3,     0,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     1,     3,
       2,     2,     2,     2,     2,     2,     2,     2,     1,     1,
       2,     0,     1,     3,     1,     2,     2,     2,     1,     3,
       3,     1,     1,     3,     1,     3,     4,     5,     4,     6,
       6,     1,     0,     3,     3,     1,     1,     0,     2,     2,
       2,     2,     0,     2,     0,     3,     2,     1,     2,     2,
       2,     2,     2,     0,     3,     0,     1,     0,     3,     2,
       0,     1,     2,     0,     1,     4,     4,     5,     2,     3,
       0,     1,     3,     0,     1,     1,     0,     1,     1,     2,
       1,     0,     1,     1,     3,     4,     1,     4,     0,     2,
       0,     1,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     3,
       1,     2,     1,     2,     3,     3,     3,     0,     3,     3,
       0,     7,     0,     3,     1,     3,     0,     3,     0,     3,
       4,     0,     2,     3,     0,     3,     0,     3,     4,     4,
       1,     1,     0,     2,     0,    12,     7,     6,     0,     0,
       0,     0,     0,    14,     0,     0,     0,     0,    11,     4,
       4,     3,     4,     3,     3,     0,     2,     1,     3,     5,
       1,     1,     0,     1,     1,     0,     2,     0,     1,     3,
       5,     3
};

/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  2648,  1171,  2583,     0,     0,     0,     0,     0,     0,
    2585,   159,    66,  1745,  1850,  1851,  1658,  1683,     2,     0,
    1171,   305,   209,     0,    78,  1698,     0,  1903,     0,     0,
    1171,     0,   521,     0,  1897,     0,     0,  1171,  1738,  1887,
     282,   209,  2585,     0,  1217,     0,  1769,  2466,     0,     0,
       0,  1752,     0,  2464,  1738,     0,     0,     0,     0,     3,
       8,    19,     0,    41,    24,    30,    14,    18,    13,    54,
      48,    26,    39,    38,    10,     0,    27,    57,  1133,    58,
      16,    45,    11,    12,    15,    36,    44,    37,    40,    52,
    1207,    22,    23,    31,    46,    62,    20,    59,    55,    21,
    1852,    25,    47,    42,    33,    63,    34,    53,    35,    61,
      56,    29,    49,    28,     9,    17,    50,    51,    43,    64,
      32,    60,     0,  1006,     0,     0,     0,     0,     0,     0,
       0,  1681,   966,  2646,  2647,  2648,  1173,  1172,     0,  2585,
    2009,  1156,  1182,  2023,  2079,  2080,  2081,  2082,  2083,  2084,
    2025,  2085,  2086,  2024,  2087,  2089,  2088,  2090,  2091,  2026,
    2027,  2092,  2093,  2094,  2096,  2095,  2097,  2028,  2029,  2098,
    2099,  2100,  2101,  2102,  2030,  2031,  2103,  2105,  2104,  2032,
    2106,  2107,  2108,  2111,  2110,  2109,  2033,  2112,  2034,  2113,
    2114,  2115,  2116,  2117,  2118,  2119,  2120,  2122,  2121,  2035,
    2123,  2124,  2125,  2126,  2127,  2129,  2128,  2130,  2131,  2132,
    2036,  2133,  2134,  2135,  2136,  2137,  2138,  2139,  2140,  2141,
    2037,  2142,  2143,  2144,  2164,  2038,  2145,  2148,  2147,  2146,
    2149,  2150,  2151,  2153,  2152,  2154,  2155,  2039,  2156,  2157,
    2158,  2159,  2160,  2162,  2161,  2166,  2167,  2168,  2169,  2170,
    2040,  2041,  2042,  2163,  2165,  2373,  2171,  2043,  2173,  2172,
    2174,  2176,  2175,  2044,  2177,  2045,  2046,  2178,  2179,  2005,
    2180,  2006,  2181,  2183,  2184,  2185,  2190,  2047,  2182,  2186,
    2187,  2188,  2189,  2191,  2192,  2048,  2193,  2194,  2195,  2196,
    2197,  2198,  2199,  2200,  2201,  2202,  2225,  2213,  2215,  2206,
    2208,  2209,  2211,  2207,  2214,  2212,  2218,  2219,  2217,  2220,
    2221,  2222,  2223,  2224,  2216,  2204,  2210,  2205,  2226,  2227,
    2203,  2228,  2229,  2230,  2231,  2232,  2233,  2234,  2235,  2236,
    2237,  2238,  2240,  2239,  2241,  2242,  2243,  2244,  2245,  2246,
    2248,  2247,  2249,  2250,  2251,  2252,  2254,  2253,  2256,  2257,
    2049,  2255,  2258,  2259,  2260,  2261,  2262,  2050,  2051,  2052,
    2263,  2264,  2053,  2054,  2265,  2267,  2266,  2268,  2269,  2270,
    2271,  2272,  2273,  2274,  2055,  2056,  2057,  2275,  2276,  2277,
    2278,  2279,  2280,  2281,  2282,  2283,  2284,  2285,  2286,  2287,
    2288,  2290,  2289,  2291,  2292,  2293,  2294,  2295,  2296,  2297,
    2058,  2298,  2059,  2299,  2300,  2301,  2302,  2303,  2304,  2305,
    2306,  2307,  2060,  2308,  2061,  2309,  2310,  2311,  2312,  2062,
    2313,  2314,  2315,  2317,  2318,  2316,  2319,  2063,  2320,  2321,
    2322,  2064,  2324,  2323,  2325,  2065,  2327,  2066,  2067,  2326,
    2069,  2328,  2329,  2068,  2070,  2330,  2331,  2332,  2333,  2334,
    2336,  2335,  2337,  2338,  2339,  2340,  2071,  2341,  2342,  2343,
    2344,  2072,  2345,  2346,  2347,  2348,  2349,  2351,  2350,  2352,
    2353,  2354,  2355,  2357,  2359,  2358,  2356,  2360,  2361,  2362,
    2363,  2366,  2367,  2368,  2369,  2364,  2365,  2073,  2370,  2371,
    2372,  2374,  2375,  2377,  2376,  2074,  2075,  2378,  2379,  2078,
    2380,  2381,  2382,  2385,  2383,  2384,  2387,  2386,  2388,  2391,
    2389,  2390,  2076,  2392,  2077,  2393,  2394,  2395,   228,  2012,
     211,  2013,  2022,     0,     0,  2456,  2455,  1140,  1157,  2586,
    2587,   614,   916,     0,     0,   917,     0,   613,   915,   614,
    2648,     0,   610,   611,     0,     0,     0,  1749,  1748,  1747,
       0,  1745,     0,  1681,  1681,  1681,     0,     0,  1681,  1681,
       0,  1684,  1681,  1681,  1681,     0,    71,  1859,   306,   307,
       0,  2493,   208,     0,     0,     0,  2004,     0,  1700,  1701,
    1699,  1091,     0,  1904,  1905,     0,  1912,     0,  1913,  1907,
    2453,     0,     0,     0,     0,     0,     0,   209,  1174,     0,
    1703,  1739,  1704,  1702,     0,   272,   281,   283,   284,   280,
    2486,  2587,  2598,  2600,  1597,  1225,   830,     0,     0,  2412,
    2413,  2248,  2268,  2414,  2364,     0,     0,  2430,  2396,     0,
    2406,     0,  1826,   284,  1103,  1127,  1111,  1104,  1127,  1753,
    1750,     0,     0,  1091,  1906,  2710,     0,     0,     0,  2705,
       0,  2711,     0,  1217,     0,     0,     1,     5,     0,     0,
    1245,  2018,  2380,     0,  2017,  2016,  2019,  2561,  2567,  2554,
       0,  1105,  1119,  2159,  2042,  2267,  1842,  1840,  1999,     0,
     957,  1007,     0,   962,     0,   960,     0,   973,   972,   970,
       0,   485,   955,     0,   209,     0,  2657,   964,  1154,  2584,
       0,   230,     0,    80,    82,     0,     0,     0,  2590,     0,
       0,     0,     0,   163,     0,   209,     0,   160,  2657,  2657,
    2648,  2650,  2652,   614,   612,     0,     0,     0,     0,     0,
    1679,  1743,  1746,  2080,  2024,  2091,     0,  1972,     0,     0,
       0,  1486,     0,  2030,     0,  2106,  2108,  2035,     0,     0,
    1245,  1245,   786,     0,     0,     0,  2131,  2132,  1978,     0,
       0,     0,  1969,  1979,  2042,  2173,  2174,     0,  1971,  2179,
       0,     0,     0,     0,  2197,  1976,     0,     0,  2235,  2237,
       0,     0,  2241,  2242,  2243,  2244,  1955,  1299,     0,   786,
    1968,  1975,  1961,  2268,  2273,  2274,     0,  2283,     0,     0,
    2312,     0,  2318,  2316,  2322,     0,     0,  2348,     0,     0,
     786,  1954,  2366,  2367,  2368,  2369,     0,  1970,  2073,  1977,
       0,  2380,  1245,   786,   786,     0,     0,     0,  2388,  2391,
    2395,     0,     0,  1237,     0,  2618,  1298,     0,     0,     0,
    1375,  1657,  1236,  1240,  1257,  1262,  1276,     0,  1291,  1310,
    1311,  1313,  1412,  1312,  1318,  1317,  1965,  1316,  1315,  1966,
    1967,  1238,  1309,  1989,  2012,  1988,     0,     0,     0,     0,
       0,     0,     0,  1685,     0,   209,  1669,  1681,    73,     0,
       0,     0,  2001,  1573,  2468,  2469,     0,    79,  1092,  1704,
       0,  1902,  1988,     0,  1916,     0,  1169,     0,   711,   531,
     522,     0,  1821,  1820,     0,  1898,  2599,     0,     0,  1145,
    1705,     0,  1893,     0,  1891,  1888,  1890,   273,     0,     0,
     303,     0,  2593,  2590,  2611,  1208,  2601,     0,     0,  1605,
    1598,     0,  1232,  2631,  2626,  2625,  2628,  2629,  1231,  2630,
    1230,  2627,  2624,     0,  1226,  1228,  1229,   829,     0,   832,
     834,  1721,  1722,   833,   842,     0,   831,     0,     0,     0,
       0,  2398,  2439,  2436,  2435,  2419,     0,   838,   840,   839,
    2427,   837,     0,  2364,  2399,  2406,     0,     0,  2397,     0,
       0,   830,  1834,     0,     0,  1834,     0,  1605,  1824,  1827,
       0,  2416,  1801,   913,   912,   911,  2417,  1820,     0,  1777,
    1789,     0,  1754,  1794,     0,  2418,     0,  1823,     0,  1605,
    1834,     0,  1770,     0,     0,     0,     0,   279,  1132,  1131,
    1107,  1128,  1129,     0,     0,  1110,  1112,  1113,   144,     0,
    2721,  2465,     0,  1960,  1959,  2010,  2707,  1958,  2715,  2717,
    2701,     0,  2704,  2703,  2712,  1210,     0,  2603,     6,    65,
       0,  2021,     0,     0,     0,     0,     0,     0,   989,     0,
       0,     0,     0,     0,  1139,     0,  1135,  1134,     0,  1108,
    1121,     0,     0,  1856,  2655,  2656,  2654,   848,     0,  2649,
     212,   971,     0,   486,   212,     0,     0,     0,     0,     0,
     487,   488,   419,   848,  1682,   977,   968,     0,     0,   967,
    2657,     0,     0,  1184,  1186,  1185,  1203,   232,   229,   210,
       0,     0,  1142,  1676,  1678,  1159,  2589,     0,     0,  2591,
    2595,  1297,  1296,     0,   157,   162,     0,     0,     0,     0,
    2653,     0,   614,     0,     0,     0,  2645,  2633,  2640,  2641,
    2644,  2643,  2642,     0,  2639,  2632,  2635,  2636,  2638,  2637,
    2657,  2651,     0,   918,   918,   918,     0,  1514,  1999,     0,
       0,     0,  2002,     0,     0,  1578,  1331,  1578,  1578,  1578,
    1487,     0,     0,     0,     0,     0,     0,     0,     0,  1578,
    1369,  1342,     0,  1370,     0,     0,     0,  1980,     0,     0,
       0,  2618,     0,     0,  1478,     0,  1457,     0,     0,     0,
    2618,     0,     0,     0,     0,     0,  1482,  1484,  1988,  1578,
       0,     0,  1578,     0,     0,     0,     0,     0,  1250,   826,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1578,  1578,     0,     0,  1578,  1383,  1982,     0,
       0,     0,  1981,     0,     0,     0,  1974,  1973,  1956,     0,
    1386,  1388,  1387,     0,  1578,  1578,     0,     0,     0,  1321,
    1320,  1322,     0,     0,     0,     0,  2419,  1453,  1455,     0,
       0,  1295,  1294,     0,  1293,  1292,     0,  1239,     0,     0,
    1244,  1243,  1300,  1301,  1302,  1303,     0,  1304,  1305,  1306,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1323,
       0,     0,  1957,     0,  1429,     0,  1664,  1671,  1666,     0,
    1685,  1667,  1675,   501,   500,  1690,  1691,  1673,  1686,  1687,
       0,  1672,     0,     0,  1659,     0,    72,     0,  1882,     0,
       0,     0,  1878,  1880,  1884,  1879,     0,     0,  1883,     0,
    1881,  1860,  1864,  1870,  1861,     0,     0,   304,   308,   310,
       0,   313,  2503,  2518,  2519,  2515,  2520,  2538,  2521,  2525,
       0,  2517,  2509,     0,  2524,     0,  2513,  2522,     0,  2507,
       0,  2523,  2528,  2539,  2511,  2516,  2494,     0,  2501,  2505,
    1574,  1575,     0,  2467,     0,  2000,     0,     0,     0,  1192,
    1917,  1918,  1914,  1573,  2454,  2457,     0,   710,   532,     0,
       0,   543,     0,     0,    68,    69,     0,  1176,     0,  1175,
    1179,     0,     0,  1514,  1894,  1895,     0,   271,   296,   291,
     299,   293,   295,   294,   300,   301,   302,   297,   292,   298,
     285,     0,  2503,     0,  2487,     0,  2594,     0,  2596,  2613,
    2612,     0,  2142,     0,     0,  1656,  1648,  1653,  1650,     0,
       0,  1232,  1606,     0,  1580,     0,     0,  1215,  1218,  1227,
    2432,     0,  2429,  2428,     0,     0,  2447,  2400,     0,  2441,
    2442,     0,  2433,     0,  2434,     0,     0,     0,     0,     0,
    2431,  2405,  2404,     0,  2407,  2408,     0,  2411,  2451,  2452,
    2449,  2450,  2448,  2424,  1830,     0,     0,  1800,     0,   614,
       0,     0,     0,     0,     0,   209,     0,  1771,     0,     0,
     658,  1793,  1828,  1829,  1834,     0,     0,  1834,     0,  1806,
    1824,     0,  1834,  1766,     0,     0,  1758,  1763,  1759,     0,
    1765,  1764,  1767,  1755,  1756,  1830,  1782,   144,  1824,  1792,
    1799,     0,  1781,  1788,     0,  1797,  1824,  1824,  1837,  1837,
       0,  1116,  1117,     0,     0,     0,  1106,  1751,  1225,     0,
       0,  1495,     0,  1497,  1494,  1493,  1492,  1514,     0,     0,
    2702,  2718,  2700,  2706,  2713,  2714,  2699,  1211,  1605,  2610,
    2604,  1209,  2605,  2608,     7,     4,  1246,   997,     0,  2020,
       0,     0,     0,     0,  2571,  2569,     0,  2570,  2568,  2544,
    2555,     0,   978,     0,     0,     0,     0,     0,     0,     0,
       0,   144,     0,  1123,  1855,     0,  1844,  1845,  1846,  1847,
    1848,  1843,  1841,  1857,  1858,   849,   848,   605,   608,   607,
       0,     0,   963,     0,   474,   961,     0,     0,   452,   430,
     452,   489,  1089,  1723,  1089,     0,  1723,  1723,  1089,  1723,
       0,     0,  1723,  1723,  1723,     0,     0,  1723,     0,     0,
    1089,     0,  1723,     0,  1074,     0,     0,  1723,  1723,  1723,
    1723,  1723,  1089,     0,     0,  1723,   519,  1723,     0,     0,
    1099,     0,     0,  1723,  1723,  1723,  1723,     0,  1723,  1723,
       0,  1723,     0,     0,     0,  1014,  1073,   618,   645,   646,
     956,  1079,  1013,  1015,  1027,   517,     0,  1051,  1076,  1077,
    1075,   998,     0,     0,   965,  1155,     0,     0,   908,   907,
    1200,     0,  1203,  1188,  1202,     0,   233,   235,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   144,
     112,   135,     0,     0,     0,     0,     0,     0,     0,    83,
      84,  1144,  1143,     0,  1141,  1167,  1166,  1164,     0,  1165,
    1163,  1158,  1160,  1161,  2588,  2592,   615,   848,   462,     0,
     422,  2567,     0,     0,     0,   211,  2694,     0,  2634,   146,
     919,     0,     0,     0,     0,     0,  1580,  1515,     0,  1580,
    1680,  1744,  1743,     0,     0,  1579,  1578,     0,     0,     0,
       0,     0,     0,  1488,     0,     0,  1480,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   787,  1393,     0,     0,
       0,     0,     0,     0,  1549,  1550,  1551,  1552,  1560,  1553,
    1554,  1555,  1562,  1567,  1556,  1557,  1563,  1564,  1565,  1558,
    1566,  1561,  1559,  1568,     0,  1548,     0,     0,  1479,  1572,
    1569,  1571,  1570,     0,  1458,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1578,     0,     0,
       0,  1578,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1404,     0,
       0,     0,     0,     0,  1578,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1365,     0,  1991,  1990,     0,
       0,     0,   881,     0,  1325,     0,  1324,  1522,     0,  2616,
    2619,     0,     0,     0,     0,  1235,  1242,  1241,  1248,  1247,
    1249,  1253,  1258,  1251,  1255,     0,  1307,  2086,  1260,     0,
       0,  1288,  2618,  1585,  1289,  1274,  1279,  1280,     0,  1277,
    1278,     0,  1282,     0,  1281,  1285,  1286,  1287,  1290,     0,
       0,     0,     0,  1314,  1319,  1339,  1240,     0,  1430,  1431,
    1985,  1992,     0,  1661,  1674,  1822,  1688,  1723,  2552,  1668,
    1093,     0,     0,    74,    76,  1875,  1872,  1871,  1873,  1877,
     144,  1874,     0,  1885,  2131,  2366,  2369,   317,     0,   289,
     288,   290,   314,     0,     0,  2504,  2502,  2536,  2535,  2540,
       0,  2537,  2533,  2526,  2562,  2530,     0,  2562,  2532,  2531,
    2562,  2527,  2534,  2562,  2499,     0,  1577,  2169,  2253,     0,
    1580,  2471,  1514,  2720,  1992,     0,  1915,     0,     0,     0,
    1170,     0,     0,   530,   529,   528,   527,     0,   545,   525,
     533,    70,     0,     0,  1899,     0,     0,     0,     0,  1147,
       0,  1896,   144,  1889,     0,     0,  2502,     0,  2499,  2597,
    2602,  2011,  1655,   835,  1649,     0,  1602,  1599,  1601,  1614,
    1615,  1613,  1607,  1608,  1612,  1611,  1214,  1224,  1220,  1223,
       0,  1586,  1233,     0,   847,   846,   843,   841,     0,     0,
       0,     0,  2446,  2438,  2440,  2437,  2420,  2421,  2422,     0,
    2425,  2423,     0,  2410,     0,  1832,  1835,  1836,     0,     0,
    1815,  1809,  1808,  1804,  1810,     0,  1805,  1819,  1818,  1817,
    1779,  1778,  1774,  1825,  1814,  1812,  1802,  1834,  1813,  1811,
    1760,  1761,  1762,     0,  1605,     0,  1832,  1807,  1834,  1824,
       0,  1834,  1834,     0,     0,  1796,  1798,  1130,  1115,  1114,
       0,     0,  1524,     0,  2606,     0,     0,     0,  1511,  1525,
       0,  1525,     0,     0,     0,     0,  1573,  2708,  2716,     0,
    2609,   976,     0,  2556,  2558,  2547,  2546,  2545,  2542,     0,
       0,     0,     0,     0,   990,   992,     0,     0,   975,   979,
     980,   984,   140,  2007,  1632,  1633,  1631,  1629,  1630,   141,
     142,  1622,  1623,  1619,  1620,  1618,  1621,   143,  1138,  1137,
    1136,  1120,  1109,     0,     0,  1125,     0,   606,  1723,  1723,
       0,     0,     0,     0,     0,     0,     0,     0,   213,   222,
       0,     0,   428,   429,  1723,   427,   475,   476,   479,   480,
     481,     0,     0,     0,     0,     0,     0,     0,     0,   165,
     482,  1723,  1723,   424,   453,   454,   457,   458,   459,   460,
     461,   420,     0,   425,  1090,   949,  1171,  1055,     0,   689,
     949,   904,   909,   909,  1053,  1724,     0,     0,  1171,     0,
       0,     0,     0,     0,  1171,     0,     0,     0,     0,  1723,
       0,  1066,     0,  1009,     0,     0,     0,     0,     0,  1067,
       0,     0,     0,  1010,  1723,     0,     0,     0,     0,     0,
       0,  1171,     0,     0,     0,     0,  1171,  1035,  1102,  1101,
    1100,     0,     0,  1171,  1171,     0,     0,     0,     0,   651,
     652,     0,     0,     0,   643,  1078,  1033,  1034,   619,   848,
    1011,   518,  1012,   688,     0,  1096,   685,   691,  1995,     0,
    1000,  1002,  2658,  2659,  2660,  1191,  1183,  1190,  1187,  1203,
       0,  1540,  1189,   231,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    81,     0,     0,
       0,     0,     0,     0,     0,     0,  1677,  1168,  1162,   158,
     848,  1723,  1723,  1723,  1723,   426,   463,   464,   467,   468,
     469,   470,   473,   471,   472,     0,     0,   438,   989,     0,
     174,  2688,     0,     0,   415,   414,     0,   616,     0,     0,
     920,     0,     0,     0,  1580,     0,  1597,  2000,  1741,     0,
    2003,     0,  1389,     0,  1434,  1465,  1436,  1437,  1438,     0,
       0,     0,     0,     0,  1390,     0,  1340,     0,  1391,  1392,
       0,     0,     0,     0,  1440,     0,   788,     0,     0,  1343,
    1344,  1336,  1328,     0,     0,  1414,     0,  1461,  1345,     0,
       0,     0,     0,     0,  1415,  1483,     0,  1485,  1992,     0,
    1444,  1397,  1350,     0,  1442,     0,  1351,  1416,  1417,  1418,
    1399,     0,  1420,     0,  1400,     0,     0,  1403,     0,     0,
    1353,  1448,  1446,     0,     0,     0,     0,  1450,  1355,     0,
       0,     0,  1354,     0,     0,     0,     0,     0,     0,     0,
    1357,     0,  1337,  1447,  1449,  1406,     0,     0,     0,     0,
       0,  1366,     0,  1221,  2620,  1522,     0,     0,  2611,  1329,
     951,  1454,  1993,  1254,  1259,  1252,  1256,  2618,     0,     0,
       0,     0,  1272,  1271,     0,     0,     0,  2618,  1585,  1275,
    1433,  1421,     0,  1478,     0,  1665,  1662,  1689,     0,     0,
    1095,  1094,  1670,  1093,    77,     0,  1876,  1869,  1886,  1862,
       0,   309,   318,   311,   315,   316,   312,  2529,     0,  2510,
       0,  2514,  2508,  2512,     0,     0,  2500,     0,  2506,  2481,
    2475,  2482,  2484,  2478,  2483,  2485,  2476,  2477,  2472,  2479,
    1605,     0,     0,  1193,  1195,  1196,  1194,  1203,     0,     0,
    2460,  2461,  2459,  2458,   535,     0,   553,  1639,  1640,  1625,
    1626,  1624,  1627,   544,  1628,  1638,     0,   556,     0,     0,
       0,  1901,  1900,     0,  1177,  1180,  1181,  1152,  1151,  1153,
    1146,  1148,  1149,  1225,     0,  1718,  1717,     0,  2600,  1695,
    1697,  1706,  1709,     0,  1892,     0,   286,     0,     0,     0,
       0,     0,     0,  1922,  1647,  1603,  1604,  1987,     0,     0,
       0,  1581,     0,  1582,     0,     0,  2402,     0,  2444,  2443,
    2445,     0,  2409,  1831,     0,  1783,     0,  1803,  1816,  1776,
       0,  1795,  1757,  1785,  1775,  1580,  1824,  1772,  1773,  1838,
    1839,   145,  1221,  2611,  1573,  1520,  2607,     0,  1513,  1512,
    1526,     0,     0,  1525,  1525,     0,  1500,  1499,  1580,  1736,
       0,  1498,  1537,     0,  2719,  2557,     0,     0,  2543,   995,
     993,   994,   996,   991,   983,   982,   209,   981,   987,     0,
     986,  1122,     0,     0,  1118,  1849,     0,     0,   959,   216,
     219,   217,     0,   218,     0,     0,   484,   483,     0,  1822,
     477,   169,   168,   170,   171,   173,   172,   167,   974,     0,
       0,     0,  1822,   455,   431,   432,   435,   436,   437,   690,
     950,  1038,     0,     0,     0,   909,   684,   949,   918,   910,
     949,   949,  1085,  1086,     0,     0,   630,   626,  1057,   639,
    1036,  1021,  1037,  1048,  1050,     0,   628,   629,   653,     0,
       0,   641,     0,     0,  1016,  1064,  1065,  1093,   623,   657,
       0,     0,     0,   666,   667,   665,   647,   654,  1087,  1088,
     624,   625,  1059,     0,  1593,  1595,  1602,   632,   631,   520,
     627,     0,     0,  1070,  1043,     0,   664,   662,   659,   661,
     660,   663,   642,   634,   633,   636,   635,   638,   637,   650,
     640,  1026,     0,  1089,  1089,  1052,     0,   672,   673,   675,
     676,  1998,     0,  1098,  1054,     0,   677,   686,   678,     0,
       0,     0,     0,     0,   179,  2662,     0,  1543,     0,  1544,
    1541,  1542,   234,   136,   134,   115,   119,   121,   114,   117,
     118,   120,   124,   125,   123,   126,   127,   130,   131,   128,
     122,   129,   116,   132,   113,     0,    86,    87,     0,    88,
      89,     0,    90,    91,     0,    92,    85,     0,     0,     0,
       0,  1822,   465,     0,     0,  1723,  1723,   421,   439,   440,
     443,   444,   445,   446,   447,   450,   448,   451,   449,   978,
       0,     0,   236,   670,   671,   669,   668,     0,  2695,   418,
     416,   417,     0,     0,   688,   147,   517,   617,   620,   942,
     944,   943,   934,   933,   148,   151,   154,  1742,     0,  1546,
    1616,     0,     0,  1435,     0,  1489,     0,  1333,   800,   800,
     784,  1473,   780,  1477,   800,  1469,   784,  1471,     0,     0,
    1481,     0,     0,     0,  1441,  1439,     0,     0,     0,     0,
       0,     0,  1459,     0,     0,     0,  1338,     0,  1425,  1445,
    1443,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1451,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   870,   876,   879,
     880,   882,   874,     0,  1408,  1326,  2614,  1222,  1580,     0,
    2621,  2623,  1221,     0,  2606,     0,     0,  1456,     0,  1269,
    1265,     0,  1263,  1584,  1284,  1283,     0,     0,     0,  1273,
    1432,     0,  1986,  1994,  1080,   498,  2553,  1660,    75,  1865,
       0,     0,  2566,     0,  2565,     0,  2548,  2551,  1999,     0,
       0,     0,     0,  2470,     0,  1732,  1732,     0,  1203,  1205,
    1908,  2462,  2463,     0,   536,   537,   539,   541,   531,     0,
     523,   526,     0,   535,     0,  1150,     0,  1696,     0,     0,
       0,  1713,  1984,  1983,  1990,  1715,  1726,  1714,  1720,     0,
       0,     0,     0,     0,     0,   836,     0,  1930,  1600,  1610,
    1609,     0,     0,  1597,  1234,     0,  2401,  2426,  1833,  1605,
    1791,  1790,  1768,  1605,  1787,  1834,  1518,     0,  1519,  1496,
       0,  1504,     0,     0,     0,     0,     0,     0,     0,  1597,
       0,  1531,  1532,     0,     0,  1535,  1538,  1539,  1517,  2709,
    2559,  2560,   988,     0,  1124,     0,   656,   655,   221,   220,
     226,   227,  1636,  1634,  1635,   490,   502,  1637,   503,   478,
     166,   491,   492,   456,     0,   433,  1040,     0,   949,   905,
     906,   918,     0,   918,   918,     0,     0,  1020,     0,  1159,
       0,  1025,   842,   648,  1029,  1063,  1062,     0,  1030,   649,
       0,  1018,     0,  1596,  1017,     0,  1045,  1023,  1885,  1056,
     688,  1097,   886,   776,   724,   715,   800,   718,   717,   762,
     784,   729,   780,   778,   747,   780,   780,   755,   754,   772,
     753,   758,   737,   856,   856,   736,   775,   856,   759,   757,
     761,     0,   763,   780,   768,   756,   760,   777,   752,   749,
     774,   800,   784,   784,   733,   773,   856,     0,   766,   800,
     692,   804,   735,   856,   863,     0,     0,   800,   802,  1997,
       0,   189,     0,     0,   999,     0,   182,   180,   191,     0,
       0,     0,  1204,     0,     0,   137,   139,    93,     0,    95,
      97,   102,     0,   104,     0,   107,     0,   109,  2008,   111,
       0,    98,     0,   497,   496,   495,   494,   466,     0,     0,
       0,     0,  1822,   441,   161,     0,     0,     0,   237,   239,
     240,     0,   247,     0,   506,     0,   504,     0,   516,     0,
    1919,   848,   621,     0,     0,     0,  1516,     0,     0,  1740,
       0,  1367,  1490,     0,     0,   801,  1466,   856,     0,  1475,
       0,  1476,   782,   781,  1468,  1470,  1474,  1472,  1332,  1341,
    1413,  1335,  1334,     0,     0,  1373,  1395,     0,  1374,     0,
       0,     0,     0,     0,  1347,     0,  1349,     0,     0,  1427,
    1398,  1419,  1376,  1401,     0,  1352,  1327,     0,  1377,     0,
    1382,  1380,     0,  1356,     0,     0,  1363,     0,  1361,     0,
    1362,     0,  1364,  1405,  1407,     0,     0,   881,   867,   868,
     869,     0,   871,   873,   875,     0,     0,  1586,  1523,  2622,
    1212,  1213,  2615,  2617,   952,  1261,     0,  1270,  1267,     0,
    1264,  1422,  1663,  1082,  1081,  1867,     0,  1863,   326,   321,
     329,   323,   325,   324,   330,   331,   332,   333,   327,   322,
     328,   320,   319,  2563,     0,  2574,     0,     0,     0,     0,
       0,     0,  1732,     0,  1692,  1694,  1197,  1203,  1205,     0,
    1198,  1919,   540,     0,     0,   560,     0,   558,   534,     0,
    1178,  1221,     0,  1707,  1710,  2603,     0,     0,     0,  1731,
    1730,     0,  1727,  1729,     0,   287,     0,  2492,     0,     0,
       0,     0,     0,     0,     0,  1923,  1925,     0,  1654,  1590,
    1589,  1583,  1605,     0,  1784,   144,  1780,  1521,     0,  1492,
       0,     0,     0,  1492,  1502,  1501,     0,  1735,  1616,  1737,
    1527,  1527,  1536,   985,  1126,   434,     0,     0,  1039,     0,
       0,     0,     0,     0,     0,  1069,     0,  1096,  1022,  1049,
    1072,     0,  1060,  1171,  1594,  1071,  1044,  1046,  1147,     0,
     674,     0,   890,   723,   716,   734,   732,   789,   779,     0,
     789,   789,   850,   861,   859,   853,     0,   857,   858,   743,
     762,   738,     0,   856,   751,   742,   764,   767,   769,   771,
     789,     0,   856,   731,   730,   740,   727,   789,   812,     0,
       0,     0,     0,   808,     0,   884,     0,     0,   815,   693,
     805,   807,   695,     0,     0,   765,   856,   720,   864,   863,
     722,   856,   863,   789,     0,   803,   789,     0,   190,   178,
       0,     0,  1001,  1003,     0,     0,  1004,  2664,     0,  2666,
    1201,  1545,   133,     0,    94,     0,   103,     0,     0,   108,
       0,     0,    99,     0,     0,   423,   493,   499,   442,     0,
       0,  2689,     0,     0,  2687,   250,   248,   249,     0,   243,
     245,   240,     0,     0,     0,   616,  1921,  1920,   505,   601,
     622,     0,     0,     0,  1547,  1617,     0,  1491,     0,     0,
       0,     0,  1467,     0,     0,     0,     0,     0,  1462,  1464,
    1460,  1452,     0,     0,     0,     0,     0,  1330,     0,  1423,
       0,     0,     0,     0,     0,     0,  1360,  1358,  1359,   865,
    1410,     0,   878,   872,   870,   877,     0,  1582,  1266,     0,
    1084,  1083,     0,     0,  2564,     0,  2498,  2550,  2549,  2567,
    2567,  2567,     0,  1693,     0,  1199,  1206,     0,   538,     0,
     533,     0,   557,     0,   524,   600,  1716,  1708,  1711,  1712,
    1992,  1725,     0,  1719,     0,  2489,  2490,  2488,     0,     0,
       0,     0,  1924,     0,     0,  1931,  1933,  1591,  1592,     0,
    1587,  1641,  2403,  1786,     0,     0,  1507,  1510,     0,     0,
       0,  1734,     0,     0,     0,  1042,     0,   687,     0,     0,
       0,  1602,   947,     0,     0,     0,     0,     0,     0,     0,
    1068,  1962,  1058,  1031,  1096,  1019,     0,  1024,   644,     0,
     889,     0,   894,   793,   794,   795,   744,   790,   792,     0,
     746,   714,   852,   851,   855,     0,   854,   863,   739,   770,
     745,     0,   741,   728,   818,   819,   821,   820,   817,   827,
     810,   828,     0,     0,   822,   823,   824,   816,     0,   806,
       0,     0,   814,   809,   719,   721,   725,   726,   712,     0,
     713,  1996,   176,   181,   192,   193,   969,  2663,     0,  2661,
       0,   138,    96,   105,   106,   110,     0,     0,     0,  2686,
     187,     0,   238,   842,   241,  2696,   247,     0,     0,   507,
     509,   517,   602,     0,     0,     0,     0,  1368,   798,   796,
     799,   797,   785,     0,  1371,  1372,  1396,     0,  1394,     0,
    1348,  1424,     0,     0,  1402,  1378,  1381,  1379,  1384,  1385,
       0,  1409,     0,  1597,  1268,  1868,  1866,     0,  2572,  2572,
    2572,  2480,     0,     0,     0,   546,     0,   563,   562,   559,
    1728,  2491,  1928,  1929,     0,  1926,     0,     0,  1932,  1588,
       0,  1651,  1505,     0,  1508,     0,  1503,     0,  1528,     0,
    1540,     0,  1041,     0,     0,   921,     0,   946,     0,     0,
       0,  1964,  1963,  1028,  1032,  1061,     0,   887,     0,   891,
     892,   893,     0,   885,   791,     0,   953,   862,   860,     0,
     811,   813,   818,   696,     0,   183,  1005,   354,  2665,  2674,
    2671,  2676,  2668,     0,     0,   164,   179,   188,  2690,   825,
     214,   244,     0,     0,  2603,  1919,     0,   512,   921,   923,
     925,     0,  1463,     0,  1426,  1428,   866,     0,  1605,  2575,
       0,  2496,  2497,  2495,     0,     0,     0,   554,     0,     0,
     588,  1927,  1935,  1934,     0,  1232,  1652,     0,     0,  1530,
    1529,     0,     0,     0,   921,     0,  1723,   679,   922,   938,
     937,   927,  1602,     0,   923,   925,     0,   888,     0,     0,
     856,     0,   856,     0,     0,   185,   380,     0,   366,   352,
       0,     0,     0,   356,   194,   197,   195,     0,   196,   202,
       0,   203,   204,   205,   206,   207,   198,   378,   379,   201,
     199,   200,     0,  2014,     0,  2015,  1217,  2671,     0,     0,
       0,  2667,  2600,   100,     0,   191,     0,  2697,   246,  2682,
     510,   508,     0,  2600,   149,     0,   152,   924,   940,   931,
     155,   926,   939,   929,   783,  1346,  1411,  1641,     0,     0,
       0,     0,     0,  2573,  2577,  1733,  1514,   542,     0,   547,
       0,   550,   552,   566,     0,  1723,     0,     0,  1723,  1723,
    1723,  1723,   581,   589,   591,     0,  1643,  1216,  1506,  1509,
    1534,  1533,   683,   682,   936,     0,   928,   945,   948,   680,
     681,     0,   900,     0,   899,     0,   896,   895,   748,   954,
     750,     0,   184,     0,   177,     0,     0,   365,   368,     0,
       0,   371,   361,   360,   362,     0,   355,   354,   354,   408,
     359,   405,   404,   397,  2675,     0,  2603,  2672,     0,     0,
       0,  2669,     0,     0,  2691,   224,   223,   215,     0,   354,
    2680,  2681,     0,  2684,   514,   513,  1080,     0,  1080,   932,
    1080,   930,  1232,  2578,  2581,  2579,  2580,  2582,  2576,  1909,
     555,   548,     0,     0,   564,     0,  1723,  1723,     0,     0,
       0,     0,     0,   561,   590,  1723,  1646,     0,  1644,   935,
    1047,   902,   903,   901,     0,     0,   707,   186,   381,   392,
     395,   387,   367,     0,     0,     0,   357,   354,     0,   341,
     339,   340,   346,   347,   348,   349,   350,   351,   342,   345,
     343,   344,   354,     0,   255,     0,     0,  2673,  2670,     0,
    2677,     0,   101,   193,   214,   225,  2698,  2683,   354,  2603,
     150,   941,   153,   156,  1219,   835,   554,   551,   574,   567,
     570,     0,   599,     0,     0,   595,   596,   594,   592,   585,
       0,   583,     0,  1642,     0,     0,     0,   709,   708,   697,
       0,     0,   354,   388,     0,   363,     0,   372,     0,     0,
     253,   411,   409,   251,   399,   399,  2678,  2679,   175,  2692,
    2685,   515,  1910,   549,   574,     0,   572,     0,   568,   565,
     569,   597,   598,     0,   582,     0,   593,  1645,   898,   897,
       0,   705,   701,   694,   698,   700,     0,     0,   389,   395,
     385,   393,   354,     0,     0,   353,     0,   407,   254,     0,
       0,     0,   354,     0,   398,   400,   402,   354,  1936,   571,
       0,   579,   575,   577,   580,   588,   587,   584,   703,   702,
     699,   706,   704,     0,   386,     0,     0,   384,   364,   369,
     354,   412,   354,   265,   264,     0,   257,   334,   406,     0,
     256,  2693,     0,  1922,   573,     0,     0,   586,   390,     0,
     354,     0,   354,     0,   354,     0,     0,     0,     0,     0,
     252,     0,  1930,   578,   576,     0,   382,   354,   370,   375,
       0,     0,   260,   335,   336,     0,   262,     0,  1938,   354,
     354,   371,   374,   413,   410,     0,   337,   258,   259,   270,
     269,     0,  1937,     0,  1942,   354,   354,   376,   278,   276,
     354,   266,   274,   268,     0,   275,     0,   263,     0,     0,
    1949,     0,   261,   277,   338,  1940,  1941,  1939,  1944,     0,
       0,  1946,  1947,     0,  1911,   267,  1948,  1943,     0,  1950,
    1952,     0,  1945,     0,     0,  1951,  1953
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    58,   658,  1595,    59,    60,    61,    62,    63,  1414,
      64,   878,  1336,  2003,  2004,    65,   577,    66,  1110,  1111,
    1769,  1770,  2966,  3378,  3379,  2975,  3392,  2969,  3382,  3383,
    2972,  3386,  3387,  1759,  1760,  3374,  3375,  1761,  1566,    67,
    2457,  3423,  4336,  3424,  4338,  3425,  4340,  1787,   540,  2278,
    2279,  1136,  3001,  3364,  4095,  3368,  4175,  4294,  4106,  2380,
    3726,  4096,  4097,  4184,   571,   572,  1794,  1642,  4217,  2258,
    4327,  2259,    68,   701,  1108,  1735,  1736,  3407,  3408,  3753,
    3409,  3758,  3759,  3760,  3761,  4512,  4387,  4463,  4513,  4567,
    4595,  4601,  4545,  4610,  4611,  4612,  4599,   918,  4613,    69,
     607,   608,   920,  1440,  2017,  1441,    70,    71,   570,  1357,
    1358,  1359,  1360,  2626,  2018,  2621,  2622,  3541,  4546,  4597,
    4616,  4388,  4389,  4301,  4390,  4187,  4391,  4305,  4392,  4190,
    4393,  4394,  4395,  4396,  4504,  4397,  4300,  4538,  4384,  4385,
    4506,  4579,  4592,  4398,  4197,  4295,  4450,  4198,  4296,  4499,
    4380,  4500,  4533,  4575,  4381,  4451,  4536,  4454,  4399,  4405,
    4514,  4400,  4406,  4401,  4202,  4312,  4404,  4310,  4403,  4510,
    4509,  4563,  2456,  3012,   687,   688,   713,  2447,   689,  1125,
    1081,  1644,  2291,  2292,  2824,  2825,  2987,  2988,  2989,  2283,
    2284,  2285,  2435,  2436,  2437,  2265,  2266,  2267,  1648,  2262,
    2263,   690,  1082,  1092,  2286,  2287,  2288,  2993,  2439,  2440,
    2441,  2442,  1325,  2997,  1326,  3255,  3015,  3416,  4114,  3768,
    4223,  4419,  3417,  3418,  2371,  2344,    72,   593,   900,  1411,
    2678,  1412,  2680,  3163,  3164,  3165,  2063,  2064,  4035,  2068,
    2677,  4137,  4426,  4250,  4251,  2665,  4249,  3170,  3566,  3567,
    3841,  4037,  4140,  4431,  4353,  4479,  4429,  4475,  4430,  4477,
    4556,  4522,  4523,  4363,  4440,  4441,  4483,  4525,  4262,  4263,
    4264,  2698,  3993,  2429,  1636,  1637,   541,   542,   543,   710,
    3016,  1706,  3017,  3018,  2912,  1708,  1709,  2868,  1519,  2902,
    2876,  3007,  2916,  2917,  2918,  2919,  2920,  2926,  2836,  2298,
    2299,  2376,  2929,  3350,  3951,  4493,  4494,  4495,  4449,    73,
     897,  3983,  3659,  3681,  3352,  3353,  3354,  3355,  3356,  3357,
    3358,  3441,  3442,  3439,  1183,  3916,  3917,  3918,  3435,  3436,
    3716,  3699,  3700,  3701,  3984,   840,  3940,  3666,   953,   954,
    2713,   969,   970,  2115,  1472,  3702,  2116,  1640,  3667,  3668,
    3669,  3710,  3496,  4020,  3502,  3503,  3504,  3097,  3098,  3099,
    3100,  3101,  2570,  3703,  2928,  3652,  3909,  3912,  4083,  4286,
    2300,  2837,  1731,  2840,  1011,   544,  2302,  2303,  1800,  1801,
    4157,  4226,  4230,  4158,  4231,  4227,  4159,  4160,  4161,  4233,
    4229,  3022,  3890,  3891,  2829,  3117,  4085,    74,  1093,  1077,
    1084,  1080,  1100,   696,  1721,    75,  2218,  2219,  2220,  2221,
    1612,  2214,  2215,   663,  2381,  2934,  3966,   680,  1710,  3643,
    3279,  3648,  4073,  1711,  1712,  2851,  1713,  3266,  3628,  1714,
    3296,  3646,  3906,  2852,  2853,  1715,  1716,  1717,  3278,  3290,
    3904,  3522,  3523,  3524,  2304,   889,  2612,  2924,  2352,    76,
      77,    78,   671,  1621,    79,  1025,  1026,  1027,  1069,  1070,
    1623,  2245,  2794,  1020,  1021,  1022,   672,  1067,    80,   705,
    1774,    81,  1422,  2690,  2691,  2692,    82,  1101,    83,    84,
     706,  1781,  1782,  1783,    85,  1406,   138,    86,   908,  1417,
    1419,  1420,    87,   700,  1102,  1103,  1104,  1105,  2386,    88,
    2055,  2653,  2654,  2655,  2656,  1732,  2390,  1733,  1734,  3560,
      89,    90,   655,  2577,   613,   614,   615,  3106,  3107,  3108,
    2108,   943,   944,   945,  1467,   841,   842,  1277,  1051,  1826,
     844,   845,   846,  1278,  1279,  3704,   847,  1290,  1959,   848,
     849,   850,   851,   852,   853,  3468,  3469,  3799,  1987,  1988,
    1989,   854,   855,  1267,  1875,  3461,  3062,  3788,  1817,  3048,
    1867,  1868,  1205,  1206,  1171,  2482,  1823,  1571,  1572,  1573,
    1574,  1575,  2193,  1806,  1807,  1576,  2183,  2573,  2574,  2184,
    2761,  3883,  3234,  3235,  3236,  3237,  3238,  2938,  2939,  2940,
    3028,  1864,  1865,  1873,  1392,  1393,  1818,  2111,  3203,  2592,
    2723,  3599,  3870,  1720,  2884,  2885,   929,  1588,  2097,  2717,
    1461,  1462,  2102,  2103,  3429,  4600,  3102,  2229,  3256,  2674,
    2675,  4051,  4367,  4368,  1455,  1456,   931,   932,  1457,    91,
     552,    92,  2001,  2606,  3134,  1333,  2618,  1113,   729,   694,
     565,  1327,  1328,  1329,    93,    94,   581,   602,   911,  2699,
    2700,  3180,  2701,  2702,  2703,  3187,  2305,  2306,  3188,  3581,
    3582,  3583,  3554,    95,  2768,  2769,   603,    96,  1162,   550,
     551,    97,  1029,   640,  1542,  1543,  1544,  2164,    98,   632,
    1012,  3209,  3213,  2150,   904,  1330,  1524,  1015,  1525,  2135,
    2735,  1507,  2175,    99,  1073,  1072,  1631,   100,   676,  1632,
     101,   879,  1351,  2013,  3139,  3527,  3822,  1352,  1353,  2619,
     102,   604,   915,   916,  1425,  2082,   103,   595,   905,  2074,
     104,   585,   105,   106,   894,  3561,  4425,  4518,   589,  2057,
    1402,  3769,  3197,  3595,  3596,  3598,  3865,  3866,  4553,  4604,
    4627,  4620,  4630,  4631,  4634,  4639,  4640,   856,  1036,   857,
    3900,   858,   859,   860,  3181,   861,  2098,   862,  2770,   863,
    2830,  1577,   730,   575,   519,  3388,  3389,   664,  1037,  2092,
     892,  4204,   666,   667,   521,   522,   107,   628,   974,   978,
    1494,  1495,  1496,  1016,  1488,   975,  1497,   631,   961,   962,
    1484,   963,  1482,   964,  2123,  1477,  1503,   108,   895,   527,
    1404,  1405,  2662,   109,   642,   110,   111,  1394,  2050,  2051,
    2648,  3152,  2649,   112,   921,  1444,   113,   881,  1386,  2637,
    1387,  2026,  1388,  1389,  2040,  2034,  2043,  2037,  2209,  1608,
    1609,  3149,  1999,   668,   669,  2629,  3143,  3144,  1058,  4131,
    3826,  4243,  4244,   114,   139,   530,   708,  1120,  1447,   115,
     116,   117,   118,   925,  1590,  1591,  2755,  1592,  1593,  1451,
    1939,  1940,  1263,  1264,  3109,  3110,   946,   717,  1145,  1137,
     132,   133,   134,   720,   721,   135,  1098,  1099,  2935,  3370,
    3728,  3969,  3970,  4101,  4212,  4208,  4209,  4102,  4206,  4211,
    4332,  4333,  1139,  4418,  1140,  1141,  3002,  3981,  4216,  4414,
    4517,  1142,  2453,  3412,  4110,  4329,   119,  1042,  1038,   652,
    1586,  1580,  1582,   120,   121
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -4054
static const int yypact[] =
{
    4769,  1920,   136, -4054,   -69,   904, 55010,    56,  1324,  1324,
     510,  3368, -4054,  1179, -4054, -4054, -4054,  3324, -4054, 55010,
     136,   401, -4054, 27444, -4054,  1643,   768,   223,   198,  1324,
     136,   553, -4054, 55010, -4054,   812,  -143,   136,  1554, -4054,
   48610, -4054,   510, 55010, -4054, 30663, -4054, -4054, 48610,   971,
     101,   707,   982, -4054,  1379, 55010,  2129,  -136,  1308,  1285,
   -4054, -4054,  1344, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, 43490, -4054, -4054,  1136, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   28088, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054,  1617, 55010,  1649, 55010,  1630, 55010, 47330, 55010,
   27444,  1645,  1687, -4054, -4054,  1733, -4054, -4054,  1324,   510,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
    1305, -4054, -4054,  1327,  1736, -4054, -4054, -4054, -4054, -4054,
    1962,  1756, -4054,  1798, 47330, -4054, 55010, -4054, -4054,  1756,
    1101,  1436, -4054,  1473,  1816,  1822,  1827, -4054, -4054, -4054,
   49250,  1179, 10416,  1645,  1645,  1645, 55010,  1818,  1645,  1645,
   55010, -4054,  1645,  1645,  1645,  1324, -4054, -4054, -4054, -4054,
    1939, -4054, -4054, 55010,  1716,   534,   770, 47330, -4054, -4054,
   -4054,  1882, 55010, -4054, -4054, 13726, -4054,  1865, -4054, -4054,
   -4054,  1324, 13726,  2075,  1931,   943, 55010, -4054, -4054,  1324,
   -4054, -4054,  1885, -4054,    31,  1514, -4054, -4054,  1636, -4054,
   -4054,   161, -4054,  1542,  1411,  2124,   218,  1638,  1480,   384,
     426, 40930,    96,   446,    94, 31306, 41570,  1499, -4054, 49890,
    1492,   957,  6016,  1636, -4054,  1289,  -102, -4054,  1289, -4054,
   -4054, 55010,  1324,  1882, -4054, -4054,   256,   256,   256,  2074,
     256, -4054,   256, -4054,  -136,  1518, -4054, -4054,  1527, 55010,
    1535, -4054,  1549,  1988, -4054, -4054,  1547,  1990,  -122, -4054,
    2242, -4054,  1622,  1963,  2041,  2230, -4054, -4054,  1560,   -25,
   -4054,  1634, 44130, -4054, 55010, -4054,  1855, -4054, -4054, -4054,
    2414, -4054, -4054,  2082, -4054, 55010,  1724, -4054, -4054, -4054,
   27444,  1610, 55010, -4054, -4054, 27444, 27444,   203,    55,    84,
   55010, 55010,  2067, -4054,  2266, -4054,  1834, -4054,  1294,  1975,
    1733,  2269, -4054,  1756, -4054, 55010, 55010, 55010, 27444,   239,
   -4054,  1632, -4054,  1648,  1656,  1665, 18360, -4054,  1679,  1681,
    1684, 13726,  1690,  1694,  1696,  1698,  1700,  1715,  1720,  1723,
    1535,  1535,  1740,  1745,  1768,  1772,  1093,  1778, -4054,  1800,
    1804,  1811, -4054, -4054,  1830,  1843,  1846,  1848, -4054,  1854,
    1864,  1869, 14388,  1876,  1881, -4054, 24863,  1902,  1930,  1934,
    1937,  1946,  1958,  1967,  1979,  1983, -4054, -4054, 13726,  1740,
   -4054, -4054, -4054,  2006,  2009,  2011,  2019,  2021,  2031,  2036,
    2039,  2054,  2061,  2103,  2110,  2113,  2120,  2130,  2143,  2146,
    1740, -4054,  1177,  2156,  2158,  1270,  2162, -4054,  2169, -4054,
     290,  2185,  1535,  1740,  1740,  2187,  2200,  2217,  2220,  2225,
    2236, 18360, 18360, -4054, 18360, 13726, -4054, 55010, 31949, 55010,
   -4054,  1657, -4054, 40287,  3105, -4054,  2591, 18360,   995, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054,  1734, -4054, -4054, -4054,
   -4054, -4054,  2126, -4054,  2240,  1662, 55010, 55010, 55010,  2025,
   55010, 55010, 47330,  1069, 55010, -4054, -4054,  1645,  1820,  3671,
   33878,  3536, -4054,   143, -4054, -4054, 55010, -4054, -4054,  1885,
    1915,  1837,  1780,  2415,   238, 27444, -4054,  1821,  1837,  1404,
   -4054,  -155, -4054, -4054,  2206, -4054, -4054, 44130, 27444, -4054,
   -4054, 27444, -4054,  2493, -4054,  1859, -4054, -4054,  1734,  3415,
   -4054,  4016,  2070,    55,   359, -4054, -4054, 30020,  2517,  2307,
   -4054,  2401,   230, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, 10416,  2124, -4054, -4054, -4054, 55010, -4054,
   -4054, -4054, -4054, -4054,  2711, 13726, -4054, 44130,   794,  2569,
     809, -4054,  2195,  2207, -4054,   104,   957, -4054, -4054, -4054,
   -4054, -4054, 55010,    94, -4054,  1492,   957, 32592, -4054,  9754,
    2735, -4054,   776,  2252,  2623,   776, 44770,  2307,   217, -4054,
     339, -4054,  2719, -4054, -4054, -4054, -4054,  2374,  2357, -4054,
   -4054,   341,  1474, -4054,  2758, -4054,    41, -4054,  2385,  2307,
     776,   217, -4054,  2654,  2785,   587,  -132, -4054, -4054, -4054,
   -4054,  2285, -4054,   819,  2861, -4054,  2290, -4054,  2759, 27444,
   -4054, -4054, 22278, -4054, -4054, -4054,  2294, -4054,  2595,  2426,
   -4054,  2337, -4054, -4054,   831, -4054,  2326,    39,  2842, -4054,
    2340, -4054,  2345,  2957, 47330,   121,  1304, 44130,  2372,  2863,
    2868,  2870,  2871,  2875, -4054,  2876, -4054,  2380,  2883, -4054,
    2646, 47330,  2315, 45410, -4054, -4054, -4054,  2925,  2940, -4054,
   -4054, -4054,  3047, -4054, -4054,  2397,  2953,  2953,  2953,  3065,
   -4054, -4054, -4054,  3767, -4054, -4054, -4054,  2581,  2446, -4054,
    1724, 27444,  2827,  2417, -4054, -4054,  1386, 13726, -4054, -4054,
    4231,  2684,    42, -4054, -4054,   240, -4054,  3023,  2636, -4054,
   -4054, -4054, -4054,  2919, -4054, -4054,  3047,  2980,  2953, 44130,
   -4054,  2896,  1756, 55010, 55010, 55010, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, 55010, -4054, -4054, -4054, -4054, -4054, -4054,
    1724, -4054, 27444, -4054, -4054, -4054,   624,  2697,   549, 22278,
   55010, 37087, -4054, 13726, 13726,  1606,  3026,  3085,  3085,  3085,
    1837,  2471, 13726, 13726, 13726, 13726, 13726, 13726, 13726,  1651,
   -4054, -4054,   -94, -4054,  2447, 13726, 13726, -4054, 13726, 13726,
   28732, -4054,  4697, 13726, 13726,  1051,  2976, 13726, 13726, 13726,
   13726,  2788, 13726, 13726, 28732,  3099,  2459, -4054,  2454,  1672,
   13726, 13726,  1753, 13726, 13726, 13726, 13726, 13726, -4054, -4054,
   13726, 13726, 13726, 18360, 13726, 13726, 13726, 13726, 13726, 13726,
    2463, 13726,  3085,  3085, 13726, 13726,  1788, -4054, -4054, 13726,
    2174,  2174, -4054, 13726,  9092, 13726, -4054, -4054, -4054,  2470,
   -4054, -4054, -4054, 28732,  3085,  3085, 13726, 13726, 13726,  3026,
    3026,  3026,   267,  2478,   677, 13726,   104, -4054,  2629,  2464,
   13726, -4054, -4054, 50530, -4054, -4054, 13726, -4054, 13726, 13726,
   -4054, -4054, -4054, -4054, -4054, -4054,  2197, -4054, -4054, -4054,
   15050, 18360, 18360,  2494, 18360, 18360, 18360, 18360, 18360,  2880,
   18360, 18360, 19022, 19684, 18360, 18360, 18360, 18360,   205,  3026,
   47330, 18360, -4054,  1734, 13726, 37727, -4054, -4054,  2489, 27444,
    1069, -4054, -4054, -4054, -4054, -4054, -4054,  2498,  1069, -4054,
    3002, -4054, 44130, 27444, -4054,  2497, -4054,  2886, -4054,  2889,
    2902,  2904, -4054, -4054, -4054, -4054,  3141,  2907, -4054,  2916,
   -4054, -4054,  2540, -4054, -4054, 20346, 47330, -4054,  2549, -4054,
    3043, -4054,  2794,  2737,  1971, -4054, -4054, -4054, -4054, -4054,
    2836, -4054, -4054,  2663, -4054,  2849, -4054, -4054,   175, -4054,
     215, -4054, -4054, -4054, -4054, -4054, -4054,  2851,  2566, -4054,
   -4054, -4054, 55010, -4054, 55650, -4054, 27444,   -69, 55010, -4054,
   -4054, -4054,  2948,   763,  2570, -4054, 27444, -4054, -4054,   118,
     118,  2829,   219, 47330, -4054, -4054,   170,  2573,  2657,  2574,
   -4054,  2659, 27444,  2697, -4054,  3238,    31, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
    2596,  3096,  2794,  2881, -4054,  2890, -4054, 55010, -4054, -4054,
   -4054,   727,  2690,  2690, 47330,  2607, -4054, -4054, -4054, 13726,
   42210,   188, -4054, 21634,  2637,  2667,  3030, -4054,  1657, -4054,
   -4054, 46050, -4054,  1837,   957,  2620, -4054, -4054,  1541, -4054,
   -4054,  3027, -4054,  2848, -4054,  2615,  2619,  2621, 51170, 13726,
   -4054, -4054, -4054,  9754,  2633, -4054, 51170, -4054, -4054, 18360,
    1800, -4054,  1837, -4054,  3050,   -69, 13726, -4054,  2645,  1756,
   55010, 55010, 55010, 27444, 55010, -4054, 27444, -4054,  1275,  1275,
   -4054, -4054, -4054, -4054,   776, 55010, 55010,   776, 44130, -4054,
     217, 55010,   776, -4054,  3049,  2742, -4054, -4054, -4054,  3121,
   -4054, -4054,  3110,  2644, -4054,  3050, -4054,  2759,   217, -4054,
   -4054, 27444, -4054, -4054,   217, -4054,   217,   217,   786,   786,
    1289, -4054, -4054,  2795,  -102,  3251, -4054, -4054,  2124, 22278,
   55010,  2763,  2814, -4054,  2655, -4054, -4054,  2697,   256,  2911,
   -4054,  3123, -4054, -4054, -4054, -4054, -4054, -4054,  2307, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,  2751, -4054,
    1173, 47330,  2752,  2753, -4054, -4054,  2756, -4054, -4054,   255,
   -4054,  2071,   246,   -69,   847,   -69,  2542,   -69,   -69,  1654,
     -69,  2759,  3168,  3204, -4054,  3245, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054,    88, -4054, -4054, -4054,
    2182,  3198,  2740,   -54,  1249,  2740,  1043,   -69,   903, -4054,
     903, -4054,  3062,   957,  3261,  2937,   957,   957,  3261,   957,
    2938,  2941,   957,   957,   957,  2768,  3207,   957,  3080,   -47,
    1774,  3090,   957,  2944, -4054,   968,  3226,   957,   957,   957,
     957,   957,  3261,  2966,  3320,   957, -4054,   957,  2972,  2968,
     169,  2974,  2975,   957,   957,   957,   957,   201,   957,   957,
    2977,   957,  2979,  2761,  2765, -4054, -4054,  5093, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054,   741, 25507, -4054, -4054, -4054,
   -4054,  3006,   250, 27444, -4054,  2718, 51810, 27444, -4054, -4054,
   -4054,  2727,  1307, -4054, -4054,  2731,  2736,  1837,  3239,  3242,
    3244,  3247,  3249,  3252,  3253,  3254,  3257,  3259,  3265,  3266,
    3268,  3269,  3270,  3273,  3279,  3280,  3281,  3283,  3284,    -4,
   -4054, -4054,  3286,  3288,  3290,  3291,  3292,  3298,  3299,  2754,
   -4054, -4054, -4054, 27444, -4054, -4054, -4054, -4054,  2853, -4054,
   -4054, -4054, -4054,  2499, -4054, -4054, -4054,    97,  2717,  2824,
    2854,  -122, 55010, 55010,  2808,   584, -4054,  1909, -4054, -4054,
     579,  3091,  3092,  3093, 22278,  2815,  2637, -4054, 37087,  2637,
   -4054, -4054,  2806,   307,  1133, -4054,  3085,  2818, 13726,  2821,
    2825,  2826, 13726,    66,   463,  1185,  1837,  1355,   892,  1213,
     343,   299, 13726,  2828, 11078,  2830, -4054, -4054,   368,   518,
    1226,  1241,  2833,  2834, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054,  3278, -4054,   545,  2835,  2823, -4054,
   -4054, -4054, -4054,  2837, -4054, 13726,  1250,   568,   594,   313,
    2843,   598,  1408,  1446,  2838, 28732, 55010,  3085,  2840,  1254,
    1256,  3085,  2844,   650,  1258,  1485,  1525,  1551,  1260,   654,
    1580,  3044,  1288,   656,   694,  1299,   714,   897, -4054,  1306,
    2855,  2858,  1011,   248,  3085,  2859,   349,  2847,  2852,  1310,
   11740, 12402, 13064,   589,  1054, -4054,  2860, -4054,  2454,  2862,
    2866,   355,   212,  1323, -4054, 13726, -4054, -4054,   890, -4054,
    2908,   138, 47330, 13726, 55010, -4054, -4054, -4054,  2228,   165,
   -4054, -4054, -4054, -4054, -4054,  1320, -4054,  2864, -4054,  2872,
    2084,  2857, 13726,   207,  2857,  3412,  2526,  2526, 18360,  3072,
    2543, 14388,  1462, 14388,  1462,  2857,  2857,  2857, -4054, 18360,
    2873, 18360, 18360, -4054,  3026, -4054, 40287,  2867,  2879, -4054,
   -4054,   511, 55010, -4054,  2498,   -76, -4054,   957, -4054,  2887,
     114, 27444, 47330,  2888, -4054, -4054, -4054, -4054, -4054, -4054,
    2759, -4054,  4333, 27444,  2917,  2967,  2984, -4054, 34521, -4054,
   -4054, -4054, -4054, 34521,    11, -4054, -4054, -4054, -4054, -4054,
    2950, -4054, -4054, -4054,  2877, -4054, 44130,  2877, -4054, -4054,
    2877, -4054, -4054,  2877,    40,  4143, -4054,   211,   337,  3633,
    2637, -4054,  2697, -4054,  1360, 27444, -4054,  3321,   -34, 27444,
    2718,  2897, 18360, -4054, -4054, -4054, -4054,  2846,  3007, -4054,
    3550, -4054, 13726,   -69, -4054, 44130, 44130, 27444, 27444,   504,
    1793, -4054,  2759, -4054,  3415, 20346,  2920, 44130,    77, -4054,
   -4054, -4054, -4054,  2209, -4054, 33235,  1635,  2921, -4054, -4054,
   -4054, -4054, -4054,   662, -4054, -4054, -4054, -4054, -4054, -4054,
   13726,  3353, -4054,  3067, -4054, -4054, -4054, -4054,  1259,  3008,
     243,  3145, -4054, -4054, -4054, -4054, -4054, -4054, -4054,   957,
    1837, -4054, 32592, -4054,   -69,  3383, -4054,  1837,  2926, 55010,
   -4054, -4054, -4054, -4054, -4054, 44130, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054,   776, -4054, -4054,
   -4054, -4054, -4054,  3160,  2307,  1474,  3383, -4054,   776,   217,
   27444,   776,   776,   -69, 13726, -4054, -4054, -4054, -4054, -4054,
     -69, 10416,  2655,  -212,    79, 22922,  3331,  3332, -4054,  3202,
      80,  3202, 22922, 22922, 28732, 22278,  1538,  2932, -4054,  3260,
   -4054, -4054,  3029, -4054,  1860, -4054, -4054, -4054, -4054,   164,
    2542,  2542,  2542,  2542,  2071, -4054,   -19,  3422, -4054,   246,
   -4054,  1281, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054,   -69,  3437,  3195,  2846, -4054,   957,   957,
    3256,   -69,  3070,  3073,  3079,  3081,  3083,  3125, -4054, -4054,
     -69,   -69, -4054, -4054,   957, -4054,  1624, -4054, -4054, -4054,
   -4054,   -69,   -69,   -69,   -69,  2542,   -69,   -69,  1627, -4054,
   -4054,   957,   957, -4054,  1045, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054,  1017, -4054, -4054, 29376,   136, -4054,   294, -4054,
   29376, -4054,  1307,  1307, -4054, -4054, 52450, 29376,   136,   847,
    2542, 29376,  2542, 53090,   136,   -69,   -69,   -69,  2209,   957,
    2542, -4054, 53090, -4054,  3354, 55010,  3356, 29376, 29376, -4054,
   47330, 55010, 53090, -4054,   957,   922,  2542, 53730,   847,   847,
   29376,   136, 28732,  2728,  2075,   -69,   136, -4054, -4054, -4054,
   -4054, 29376, 27444,   136,   136,  1536,  2839,  2970,  3084, -4054,
   -4054, 55010,  2542, 53090, -4054, -4054, -4054, -4054, -4054,  3626,
   -4054, -4054, -4054, 20990, 55010,   342,   183, -4054,  2952,   159,
   -4054,  3172, -4054, -4054, -4054, -4054, -4054, -4054, -4054,  1307,
    2965, 54370, -4054, -4054, 13726,  2969,  2542,   -69,  2542,  2542,
     -69,   -69,  2542,  2542,   -69,   -69,   -69,   -69,   -69,   -69,
     -69,   -69,  2542,  2542,   -69,   932,  4231, -4054,  2971,  2971,
    2978,  2978,  2981,  2981,  2983,  2684, -4054, -4054, -4054, -4054,
     209,   957,   957,   957,   957, -4054,  2099, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, 47330,  3340,  2451,  2372,  3157,
   -4054, -4054,   969,  2985, -4054, -4054,    57,  2990,   896,   896,
   -4054, 27444, 27444, 27444,  2637, 55010,  3258,  1167, -4054,  2989,
   -4054, 15712, -4054,  2987, -4054,  1837, -4054, -4054, -4054,   905,
   13726, 13726,  3477,  2762, -4054, 46690, -4054, 13726, -4054, -4054,
   13726, 46690,  2762,  1732, -4054,  2991, -4054,  3404,  3406, -4054,
   -4054, -4054, -4054, 13726, 13726, -4054, 13726,   718, -4054, 13726,
   13726, 13726, 13726, 13726, -4054, -4054, 18360, -4054,  2992,  2996,
   -4054, -4054, -4054,  3000, -4054, 13726, -4054, -4054, -4054, -4054,
   -4054, 13726, -4054, 13726, -4054, 13726, 13726, -4054, 13726, 13726,
   -4054, -4054, -4054, 16374, 13726, 13726,  3003, -4054, -4054, 13726,
   13726, 13726, -4054, 13726,   945, 13726,  1603, 13726,  1708, 13726,
   -4054, 13726, -4054, -4054, -4054, -4054, 13726,  1959,  2846,  2542,
    3005, -4054,  1748,  2401,  1553, -4054,   890,  3009,   359, -4054,
    2995,  1837, -4054, -4054, -4054, -4054, -4054, -4054, 18360,   360,
    3013, 18360, -4054,  3412,  2788,  2788,  2092, 13726,   207,  3412,
   -4054, -4054, 13726, 13726, 38367, -4054, -4054, -4054, 47330, 44130,
   -4054, -4054, -4054,   114, -4054,  2497, -4054, -4054,  2718, -4054,
    3492,  3014, -4054, -4054, -4054, -4054, -4054, -4054, 55010, -4054,
    3086, -4054, -4054, -4054, 26151, 26151, -4054, 26151, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
    2307,  2548, 55010, -4054,  3017, -4054, -4054,  1386,  2690,  3033,
    3387, -4054, -4054, -4054, 55010,  3019,  3412, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054,  3632,  3024,  3034,  3522,
    3046,  1837, -4054,  3108, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054,   928,  2124, 28732, -4054, -4054, 23566,  1542, -4054,
   -4054, -4054, -4054,  3052, -4054,  3542, -4054,  3499,  3517, 26151,
   26151, 26151, 42850,  3641, -4054, -4054, -4054, -4054, 13726, 42210,
   42210,  1837,  3667,  3500,  3377,  3061, -4054,  3071, -4054, -4054,
   -4054,  9754, -4054, -4054,   847, -4054,    83, -4054, -4054, -4054,
    3349, -4054, -4054, -4054, -4054,  2637,   217, -4054, -4054, -4054,
    1837, -4054,   249,   359,  2424, -4054, -4054,  2277, -4054, -4054,
   -4054,  3478, 22922,  3202,  3202,  3479,  3357,   -46,  -205, -4054,
     957, -4054,   303,  2542, -4054, -4054,   -69,   -69, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,  2846,
   -4054, -4054,   -69,  3579, -4054, -4054, 46050, 42850, -4054, -4054,
   -4054, -4054,  3629, -4054,  3630,  1010, -4054, -4054,   116,  1497,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,  1043,
     116,   116,   804, -4054,   133, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054,  3094,  3480,  3483,  1307, -4054, 29376, -4054, -4054,
   29376, 29376, -4054, -4054,   817, 53090, -4054, -4054, -4054, -4054,
   -4054, -4054,  3088, -4054, -4054,  2846, -4054, -4054, -4054, 42850,
     -69, -4054,  3190, 29376,  3088, -4054, -4054,   182, -4054, -4054,
    3119,  3196,   -69, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, 53090,  3098, -4054,   333, -4054, -4054, -4054,
   -4054, 53090,  3176, -4054, -4054, 53090, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054,  3101,  2386,  1896, -4054,  3102,  3100, -4054, -4054,
   -4054, -4054, 55010, -4054, -4054, 27444, -4054, -4054, -4054,  5994,
   55010,  1395,  1119,  3188,  1588,  3113, 53090, -4054,  3116, -4054,
    3112, -4054,  1837,  2542, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, 35164, -4054, -4054, 35804, -4054,
   -4054,   632, -4054, -4054,  1761, -4054, -4054,   -69,  2846,   116,
     116,  2274, -4054,  3396,  3571,   957,   957, -4054,  2387, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,   246,
     969,  3409, 55010, -4054, -4054, -4054, -4054,  3274, -4054, -4054,
   -4054, -4054,  3410, 27444,  8289, -4054,  3394, -4054,  2915, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,  1861, -4054,
    3523, 14388,  1328, -4054, 13726,  1837,  1670, -4054,  3138,  3138,
    3140, -4054,  3142, -4054,  3138,  3556,  3140,  3557,  3153,  3154,
    1837,  1352,  3156,  3162, -4054, -4054, 13726, 13726,  1365,   372,
    1392,  3768,  3334,  1058,  1070,   424, -4054,  1415,  3155, -4054,
   -4054,  1449,  1455,  1476,  1508,  1078,  1561,  1912, 14388,  1574,
    1006,   441, -4054,  1591,  1087,  1103,  1613, 13726,  1615, 13726,
    1631, 13726,  1640,  1659,  1725,  3165,  3165,   269, -4054,  3164,
   -4054, -4054, -4054,  3167, -4054, -4054, -4054, -4054,  2637, 10416,
    1553, -4054,  2401,  3175,    79,   677, 55010, -4054,  3178, -4054,
   -4054, 13726, -4054,   995, -4054, -4054, 18360,   500,  3180, -4054,
   -4054,  3181, -4054, -4054,  1073, -4054, -4054, -4054, -4054,    51,
    4013, 34521, -4054,  1914, -4054, 44130,  3177, -4054,  3179,  3262,
    3267,  3271,  3183, -4054, 28732,  3473,  3473, 27444,  1307,  3624,
   -4054, -4054, -4054,  3199,  3197, -4054, -4054, -4054,  3580,  3460,
   -4054, -4054,  2846, 55010, 44130, -4054, 10416,  3201,  -142,  3206,
    1916, -4054, -4054, -4054,  3200, -4054, 17036,  3203, -4054, 20346,
    3485, 44130,  3673,  3674,  3675, -4054,  1812,  3597, -4054, -4054,
   -4054, 13726, 13726,  3258, -4054,  3008, -4054, -4054, -4054,  2307,
   -4054, -4054, -4054,  2307, -4054,   776, -4054,   677, -4054, -4054,
   22922, -4054,  3618,  3620, 22922, 13726, 13726,  3220, 28732,  3258,
   17036, -4054, -4054,  1307,  1307, -4054,   303, -4054, -4054, -4054,
   -4054, -4054, -4054,  3760, -4054,   -69, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054,  1017, -4054,   674, 13726, 29376, -4054,
   -4054, -4054,  3222, -4054, -4054,  3757,  3769, -4054, 29376,  2499,
   55010, -4054,  2711, -4054, -4054, -4054, -4054,  3333, -4054, -4054,
    5994, -4054, 28732, -4054, -4054, 29376, 55010, -4054, 27444, -4054,
   20990, -4054,  3241, -4054,  3138,  3138,  3138, -4054, -4054, -4054,
    3140, -4054,  3142,  3488, -4054,  3142,  3142, -4054, -4054, -4054,
   -4054, -4054, -4054,   340,   512, -4054, -4054,   340, -4054, -4054,
   -4054,   126,  -192,  3142, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054,  3138,  3140,  3140, -4054, -4054,   340,  3138, -4054,  3138,
   -4054,  2988, -4054,   389,   146,  3138,  3138,  3138,  3248,  3236,
    3491, -4054, 13726, 13726,  3531, 55010,  3535, -4054,  3835, 55010,
    3895,  3264, -4054, 54370,  1947, -4054, -4054, -4054,  1950, -4054,
   -4054, -4054,  1955, -4054,  3272, -4054,  1973, -4054, -4054, -4054,
   55010, -4054,  1985, -4054, -4054, -4054, -4054, -4054,  3263, 55010,
     116,   116,  2188, -4054, -4054,  3407,  3432,  3277,  3285, -4054,
   -4054,   -69,  1105, 27444, -4054, 27444, -4054,  3436, -4054,  3282,
      52,  5363, -4054,  3289,  3293,  3294, -4054, 55010, 42210, -4054,
    2788, -4054,  1837, 13726,   836, -4054, -4054,   340,  3559, -4054,
     941, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054,  2788,  2788, -4054, -4054, 13726, -4054, 13726,
     256,  3295, 13726, 13726, -4054, 13726, -4054,  1008,  3301,  3303,
   -4054, -4054, -4054, -4054, 13726, -4054, -4054,  2788, -4054, 13726,
   -4054, -4054, 13726, -4054, 13726, 13726, -4054,  1737, -4054,  1743,
   -4054,  1755, -4054, -4054, -4054,  2846,  3302,  3656, -4054, -4054,
   -4054,  2846,  3455, -4054, -4054,  2846,  2542,  3353,  1657, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054,  2000, -4054, -4054, 13726,
   -4054, -4054, -4054,  3649,  3927, -4054,  3509, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, 55010,   532,  3297, 39007, 44130, 44130,
   44130, 17036,   -71,  3797, -4054, -4054, -4054,  1307,  3624,  3677,
   -4054,   788, -4054, 55010,  1556, -4054,  2013, -4054, -4054,  3306,
   -4054,   249,  3436, -4054, -4054,    39,  -142, 28732, 37727,  1800,
    1837,  3307,  3312, -4054,  3052, -4054,  3752,  2887, 44130, 44130,
   44130,  3905,  3909,  3815,  3925,  1812, -4054,  -128, -4054,  1430,
   -4054,  1837,  2307,  3315, -4054,  2759, -4054, -4054,  1601,  3364,
   22922, 22922,  2626,  3366,  1837,  1837, 55010, -4054,  3523, -4054,
    3786,  3786, -4054, -4054, -4054, -4054,  2846,  3460, -4054,  1770,
    3326,  3327, 55010,  3328,  3335, -4054,  3419,   342, -4054, -4054,
   -4054, 27444, -4054,   136, -4054, -4054, -4054,  3088,   928,  3323,
   -4054, 55010,  3672, -4054, -4054, -4054, -4054,  1246, -4054,  3338,
    1246,  1246,  3955,   226, -4054,  3962, 46690, -4054, -4054, -4054,
    1638, -4054,  3375,   340, -4054, -4054,  3380, -4054, -4054, -4054,
    1246,  3342,   340, -4054, -4054, -4054, -4054,  1246, -4054, 47330,
    1764,   -69,  2850, -4054,  3398, -4054,  3882,  1114,  3746, -4054,
    3255, -4054,  3807,  3750,  3644, -4054,   340, -4054, -4054,  3980,
   -4054,   340,  3980,  1246,  3645, -4054,  1246, 55010, -4054,  1837,
    2788,  3936, -4054, -4054,  3512,   -69,  3879, -4054,  2016, -4054,
   -4054, -4054, -4054,  2542, -4054, 55010, -4054, 55010, 55010, -4054,
     -69,  3362, -4054,  3365,  1043, -4054, -4054, -4054, -4054,   -69,
    1119, -4054, 55010,  5994, -4054, -4054, -4054, -4054,  3372,  3373,
   -4054, -4054,  3831,  3376,  3378,  5093, -4054, -4054, -4054,  4011,
   -4054, 55010, 55010, 55010, -4054, -4054,   524,  1837,  3379,  3382,
    3385,  3386, -4054,  3397,  2022,  3400,  3414,  1795,  3374, -4054,
   -4054, -4054,  1807,  1124,  2040,  3696,  3779, -4054,  3627, -4054,
    1828,  1331,  1833,  1879,  1907,  1923, -4054, -4054, -4054, -4054,
   -4054,  3417, -4054, -4054,   466, -4054,  3418,  3500, -4054,  2042,
   -4054, -4054,  3872,  3774, -4054,  3865, -4054, -4054, -4054,  -122,
    -122,  -122,  2050, -4054,  3816, -4054, -4054,  3836, -4054,  3423,
    3550, 55010, -4054,  3460, -4054, -4054, -4054, -4054, -4054, -4054,
    3416, -4054, 17036, -4054, 44130,  2887,  2887,  2887,   256,   256,
    4035,   256, -4054,  4038,  4042,  -128, -4054, -4054, -4054, 13726,
   -4054,  3676, -4054, -4054, 13726,  3435, -4054, -4054, 13726,  3440,
    2056, -4054,  1463,  3441,  3442, -4054,  2058, -4054, 55010, 55010,
    2068,   333,  3443, 55010, 55010,  2917,  2967,  2984,   932,   932,
   -4054, -4054, -4054,  1420,   342, -4054,  3863, -4054, -4054,  2091,
   -4054,   814,  3732, -4054, -4054, -4054, -4054,  1246, -4054,   256,
   -4054, -4054, -4054, -4054, -4054, 46690, -4054,  3980, -4054, -4054,
   -4054,   256, -4054, -4054,   319, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054,  3744,  3493, -4054, -4054, -4054, -4054, 47330, -4054,
    4100,  4095, -4054, -4054, -4054, -4054, -4054, -4054, -4054,  3457,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, 55010, -4054,
    1125, -4054, -4054, -4054, -4054, -4054, 55010, 55010,  2094, -4054,
    3531,  3648, -4054,  2711, -4054, -4054,  1572, 55010,  3973, -4054,
   -4054,  3394, -4054,  1138,  2098,  2121,  2133, -4054, -4054, -4054,
   -4054, -4054, -4054,  3751, -4054, -4054, -4054, 13726, -4054, 13726,
   -4054, -4054,  3783,  3952, -4054, -4054, -4054, -4054, -4054, -4054,
    3467, -4054,  2542,  3258, -4054, -4054, -4054,  3742,  3496,  3496,
    3496, -4054,  3525,  3575, 18360, -4054,  3481,  3524, -4054, -4054,
   -4054,  2887, -4054, -4054,   256, -4054,   256,   256, -4054, -4054,
    4124,  3899,  1837, 55010,  1837, 55010, -4054,  4101, -4054,  4102,
   54370, 54370, -4054,  2149,  2152,   328, 55010, -4054,  3777,  2166,
    2191, -4054, -4054, -4054, -4054, -4054,  3494, -4054, 55010, -4054,
   -4054, -4054,   271, -4054, -4054,  2237, -4054, -4054, -4054,  2249,
   -4054, -4054, -4054, -4054,  3497,  3616, -4054, 61410, -4054, -4054,
    3498,  3520, -4054,  3502,  3507, -4054,  1588, -4054, -4054, -4054,
   -4054, -4054,  5994,  3681,    39,    52,  3436, -4054,   328,   120,
     260,  3513, -4054,  1942, -4054, -4054, -4054,  3515,  2307, -4054,
    1911, -4054, -4054, -4054, 28732, 27444,  3516,  3607, 55010,  1559,
    3126, -4054, -4054, -4054,  3510,   188, -4054,  2273,  2276, -4054,
   -4054,  3518,  2278,  3739,   328,   -69,   957, -4054,   328, -4054,
   -4054, -4054,   333,  3527,   120,   260,  3460, -4054,  1063,  1063,
     340,   256,   340, 13726, 13726,  4025,  3552, 55010,   163, -4054,
   62690, 62690, 55010, -4054, -4054, -4054, -4054,  4811, -4054, -4054,
     -32, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054,  4149, -4054,  3521, -4054, -4054,  3498,  3530,  3694,
    1182, -4054,  1542, -4054, 55010,  3835,  5994,  3910, -4054,   134,
   -4054, -4054,  3532,  1542, -4054,  3796, -4054,   120, -4054, -4054,
   -4054,   260, -4054, -4054, -4054, -4054, -4054,  3676,  3810,  2542,
    2542,  2542,  2542,  1911, -4054,  3201,  2697, -4054,  2846, -4054,
    2298, -4054, -4054, -4054,  3623,   957,  4060,  4061,   957,   957,
     957,   957,  3539,  3126, -4054,  4043,  3828, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054,  2542, -4054, -4054, -4054, -4054,
   -4054,  2306, -4054,  4197, -4054,   186,  3829,  3830, -4054, -4054,
   -4054,  3551,  1837, 13726, -4054, 13726,  3578, -4054, -4054,  4017,
   55010, -4054, -4054, -4054, -4054, 13726, -4054, 61410, 61410, -4054,
   -4054, -4054, -4054,  4180, -4054,  3555,    39, -4054,  4156,  3838,
    4158, -4054,  3564,  4082, -4054, -4054, -4054, -4054,  4094, 61410,
   -4054, -4054, 47330, -4054, -4054, -4054,  1073,  1857,  1073, -4054,
    1073, -4054,   188, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, 55010,  3570, -4054,   -69,   957,   957,  1144,  1144,
    2846, 55010,  3678, -4054, -4054,   957, -4054,  3573,  3569, -4054,
   -4054, -4054, -4054, -4054,  3631,  4107,  -147,  1837,  1837, -4054,
      78, -4054, -4054,  3995,  4087, 13726,  1837, 58210,  3581, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, 62050, 13726, -4054,   -32,  4149, -4054, -4054,  3859,
   -4054,  3860, -4054, -4054, -4054, -4054, -4054, -4054, 61410,    39,
   -4054, -4054, -4054, -4054, -4054,  2209,  3607, -4054,  3588, -4054,
   -4054,   -60, -4054,   -69,   -69, -4054, -4054, -4054, -4054, -4054,
    2309, -4054, 47330, -4054,  3828,  1063,  1063, -4054, -4054,  2161,
    3617, 13726, 61410, -4054,  4096, -4054,  4023,  1837,  3963,  3591,
   -4054,  3590,  1837,  4135, 62690, 62690, -4054, -4054, -4054,  3910,
   -4054, -4054, -4054, -4054, -4054,  2329, -4054, 17698, -4054, -4054,
   -4054, -4054, -4054, 47330, -4054,  3678, -4054, -4054, -4054, -4054,
     -69, -4054,  4000, -4054,  2161, -4054,  4001,  3894, -4054,   105,
   -4054,  1837, 58850,  4211, 55010, -4054,  3695, -4054, -4054, 13726,
    4126, 47970, 59490,  3602, -4054, -4054, -4054, 61410,  3790, -4054,
    3588, -4054,  3610, -4054,  3412,  3126, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, 13726, -4054,  4118,  3701, -4054,  3619, -4054,
   61410,  1837, 61410, -4054, -4054,  4062,  3621,   352, -4054,  3614,
   -4054, -4054,  4053,  3641, -4054, 17698,  3625, -4054,  1837,  4228,
   61410, 55010, 56290,  4130, 60130,  4097, 55010,  5994,  4098,  4099,
   -4054,  4239,  3597, -4054, -4054,  3716, -4054, 56930, -4054,  2469,
    3840,  3662, -4054, -4054,  4165,  2733, -4054,   256,  4066, 61410,
   61410, -4054, -4054, -4054, -4054, 39647, -4054, -4054, -4054, -4054,
   -4054,   727, -4054,  3931,  3650, 57570, 60770, -4054, -4054, -4054,
   36444, -4054, -4054, -4054,  4108, -4054, 13726, -4054,    70, 24211,
    3809, 39647, -4054, -4054,  1837, -4054, -4054, -4054, -4054, 47330,
    2331, -4054, -4054, 28732, -4054, -4054, -4054, -4054, 26800,  3654,
   -4054,   957, -4054, 28732, 17036, -4054, -4054
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4054, -4054, -4054, -4054, -4054,   123, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054,  1701, -4054, -4054, -4054, -4054, -4054,
   -4054,  1890,  1898, -4054, -3238, -4054, -4054,  1897, -4054,   583,
    1899, -4054,   581, -4054,  1908, -4054,   590,  -573, -1503, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,   586,
    1513,  3608, -4054,   585, -4054,   227, -4054, -4054, -4054, -3199,
     122,   -77, -4054, -4054,    32,  1552,    23,  3275,   -74, -3181,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,   580,
     591, -4054, -4054,   356, -4054, -4054, -1429, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054,  -277,  -238,  1992, -4054, -4054, -4054,
    4300, -4054,  3717, -4054, -1994,  2265, -4054, -4054, -4054, -4054,
   -4054,  2328, -1935, -4054, -4054, -4054,  1212, -4054, -4054, -4054,
   -4054,  -183,   259, -4054,   261, -4054,   263, -4054,   264, -4054,
     266,   268,   273,   274, -4054,   275, -4054, -4054,  -234, -4054,
   -4054, -4054, -4054,   276, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054,  -135, -4054, -4054,   -14, -4054, -4054,  -124,   279, -4054,
     -87,   283, -4054,   285, -4054,   -21, -4054,   -18, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054,  3276, -4054, -4054, -4054, -2576, -4054, -4054, -2448,  2738,
   -4054, -2099, -4054, -4054, -2266, -4054, -4054, -2043,   917, -4054,
   -4054,   -90,   858, -4054, -1584, -2186, -2147, -4054, -4054, -4054,
   -2346, -2327, -1560, -4054, -1445, -2585, -4054, -4054, -4054,   277,
   -4054, -4054, -2927,  2671,  3296, -4054, -4054, -4054,  2046, -4054,
   -4054,  1223,   555,  1220, -4054,   833,  2993, -1342, -4054, -4054,
   -4054, -4054, -4054, -4054,    45,   364,   -27, -4054, -3407,   557,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4021, -4054,
   -4054, -4054,  -150, -4054, -4054,   -79, -4054, -4054,  -118, -4054,
     145, -2617, -4054, -4054,  2624, -1489, -4054,  3869, -4054,  -439,
     648,  2707, -2426, -1016, -4054, -1018, -1005, -2575, -4054, -4054,
   -4054,  1416,  1401, -4054,  1117,  2702, -1576, -4054,  2043, -4054,
   -4054,  1142, -4054,  1134, -4054, -4054, -4054,   -66, -4054, -4054,
     252, -2656, -4054, -4054, -4054,  1106, -4054,  1108, -4054, -4054,
   -4054, -1134,  1071, -1674,  1486,  -769, -4054,   516,   780,  -873,
   -4054, -4054, -4054,   734, -3639, -2431, -4054,   -41, -2433,  -881,
      12, -4054, -4054, -2559, -3139, -4054,  1642, -4054, -4054, -4054,
   -3052, -3393,  1345, -4054, -4054,   940, -4054, -1710,   938, -4054,
   -4054, -4054,   949, -4053,   295, -4054, -4054, -4054, -4054, -2849,
   -4054, -4054, -1411, -2105, -4054, -4054,  4436,  4438, -1114, -2361,
   -3682,   286,   287, -4054, -4054, -4054,  2651, -1398,   296,   222,
     229,  1998,  -203,   392, -2175, -4054,   528, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054,  1461, -4054,  2245, -4054,
    2018, -4054,  2247, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054,   564,  2755,  -420, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -2233, -2199, -4054, -4054,  2100, -4054, -4054,
   -4054, -2401, -1077, -1075, -1519,  3825, -1556, -2511, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054,  2909, -4054, -4054,
   -4054, -4054, -4054,  3834, -4054,  2914, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054,   827,  1784, -4054, -4054, -4054, -4054, -4054,
   -4054,  1199,  2696, -4054, -4054, -4054,    33, -4054, -4054, -4054,
   -4054,  2403, -4054, -4054, -4054, -4054,  2757, -4054, -4054, -4054,
   -4054, -4054, -4054,  1325, -4054,  1824, -4054, -1682, -4054,   927,
   -1064,  3035,  3833,  1913,  -646, -4054, -4054, -2610,  3560, -4054,
   -4054, -1483, -4054,  3544, -1449,  -915,  3223,  2506,  1180,  4607,
   -4054, -1243, -1193, -4054, -4054,  -706, -4054, -4054, -4054,  -701,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
    1893, -4054, -1307, -4054, -4054, -4054, -4054, -4054,  -898,  2004,
    1894, -1088, -4054,  3300, -4054, -4054, -4054, -2049, -1001,  2305,
    2933, -4054, -4054, -1409, -4054, -2130, -4054,  1926, -4054, -4054,
   -1969,   882, -4054,  1271, -4054, -4054, -4054,   448,  1137,   450,
   -3056, -1175,  1607, -4054, -4054, -1325,  3330, -1735,   695,  1917,
    1007, -4054, -4054, -4054, -4054,  1221, -2423,  -603, -4054, -2811,
    -964, -1028, -4054, -2558,   898, -1585, -1951, -1317, -1384, -2754,
   -4054,   280, -4054,    74, -4054,  2450,   470,   497, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054,  -487,  -875,  3821,  2792,
   -4054,  3230, -4054, -1173,  3486,  3487, -4054, -4054,  3663,  1900,
    1906, -4054, -2925, -2606, -4054, -4054,  -616, -1485,   979, -4054,
    1002, -3166, -2888,  3495, -2637,  1336,  4511,  3503, -1659,  4015,
   -4054, -4054, -4054, -4054, -4054, -4054,  2404, -4054, -4054, -4054,
   -4054, -4054, -4054,  3051,  3940,  -631, -1381, -4054,  -787,  3031,
    2402,  -949,  3015, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,  2565,  1282,
   -4054, -4054, -4054,  3158, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054,  1020,    30, -4054,   990,    14, -4054,   722, -4054, -4054,
   -4054, -4054, -4054,   -50, -4054, -4054,   -52, -4054, -1063, -1422,
     900, -1323, -2359, -4054,  1016, -2571, -2639,  -751, -1233, -1244,
   -1670,   150,  3434, -4054,  3466,  -823, -4054,    89,  -427, -1371,
      -6, -2422,   -73,  -661, -4054,  1149, -4054, -4054, -4054,  3622,
   -4054,  2467,  4550, -4054,  3336,  3107,  4551,  -492,  3628,  3122,
   -4054,  3127, -4054, -4054, -4054, -2023, -1412, -4054, -4054,   254,
   -4054,  2545, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054, -4054,  2518,
    3686,  3169, -4054,  2564, -4054, -4054, -4054, -4054, -4054,  2405,
   -4054,  -120, -3031, -1107,  3553,    64, -4054,  1068, -1767, -1036,
   -4054, -4054,   373, -4054, -4054,   351,  4006,  3697, -4054, -4054,
   -4054, -4054, -4054, -2647,  -611, -3434,  1505, -2046, -4054, -1393,
   -2750, -4054, -1126, -4054, -4054, -4054, -2342, -4054, -4054, -4054,
      71,  4081,  4085, -4054, -4054,   701, -4054,   462, -4054, -4054,
   -4054, -4054, -4054, -4054, -4054,   419, -4054,   422, -4054, -4054,
   -4054, -4054,  3915, -4054, -4054,  3916, -4054, -4054, -4054, -4054,
   -4054,  3917, -4054, -4054, -4054, -4054, -4054, -4054,  1901, -4054,
   -4054, -4054, -4054, -4054, -4054
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -2542
static const yytype_int16 yytable[] =
{
     520,  1014,   926,  1123,   626,   955,   958,  1045,  1626,  1927,
    1633,   930,  2106,   566,  2080,   979,  1718,   576,  1719,  1589,
    1926,  1079,  1791,  1521,  2448,  1207,  1880,   594,  1468,   518,
    1901,  2237,  2020,  3135,   609,  1166,  1517,   612,  2104,   627,
    1802,  1803,   609,  3030,  2167,  1549,  2377,  1958,  2019,   644,
    2392,  3185,  3049,   567,  3257,   686,  2963,  3177,  3052,  1638,
    2268,  1550,  2766,   591,  3619,  1843,  3257,  3257,  2066,   665,
     599,  2466,  1639,   610,  2468,  3293,  2297,  1707,  2058,  3198,
    3179,  2131,  2093,  2620,  2269,  2181,  1827,  1828,  2289,  3420,
    2289,  2706,  2864,   141,   678,  2726,  2727,  1066,  1960,  1961,
     715,  2994,  1964,  1965,  1966,  1967,  2827,  1969,  1970,  1972,
    1974,  1975,  1976,  1977,  1978,  1882,  2673,   681,  2242,   520,
    2995,   520,   665,   691,   678,  2838,  3182,  1895,  1896,  1897,
    1259,  1260,  2870,  1261,  1900,  2307,  2757,   976,  2756,  2311,
    1308,  3846,  3216,  3640,  2767,  2828,  1309,  2247,   683,  2157,
     685,  2328,  3741,  2470,  1567,  1996,  1271,  1272,  1809,  2281,
    3587,  3199,  3200,  2340,  1390,  3722,  2610,  2168,  2196,  1600,
    2982,  2309,  2310,   574,  2312,  2171,  2172,  2315,  2316,  2317,
     707,  3708,  2320,  1271,  1272,  2823,  3009,  2330,  3676,  1565,
    2348,  2061,  2335,  2336,  2337,  2338,  2339,  4155,  2841,  2270,
    2343,  2072,  2345,  2290,  2438,  2290,   697,  -511,  2355,  2356,
    2357,  2358,  1635,  2361,  2362,  2480,  2364,  1771,  1112,  1115,
    3886,  1635,  2765,  2810,  1551,  3257,  3257,  4452,  2443,  1602,
    1271,  1272,  3111,  2567,  2610,  3261,  3262,  2667,  1979,  2634,
    2931,  2301,  2038,  -958,  3525,  3210,  1418,  2832,  3265,  3923,
     677,  2216,  -603,  3573,  4452,   951,  2417,  2659,  4307,  2327,
    1116,  2991,  1546,   528,  2784,  4478,  1271,  1272,  3555,  1819,
    1820,  1821,  3674,  3351,  2208,  3675,  2709,  1835,  1310,  2351,
     692,  1833,  3766,   590,  1152,  1271,  1272,   981,   617,   957,
     598,  3498,  1323,  1033,  3685,  2795,  1474,  3010, -1576,  1775,
    2992,  3707,  1391,  2668,   637,  3553,  1074,  2190,   586,   583,
    4372,  1888,  1485,  1460,  1892,  2650,  3955,  1271,  1272,  3957,
   -2541,  2728,  1400,  2041,  4330,  1271,  1272,  1246,  2349,  1023,
    3226,  1271,  1272,  1635,  1910,  1911,  2762,  4155,  1915,  2359,
    -845,  1056,   269,  2444,   271,   912,  4625,   959,  2693,  2763,
    1489,  2922,  2322,  1460,   653,  2715,  1929,  1930,  2832,  4298,
    1493,  1271,  1272,  3662,  -604,  3513, -2473,  1271,  1272,  2264,
     523,  2591,  1449,  1271,  1272,  3663,  2382, -2030,  1271,  1272,
    4156,  1465,  2260,  2624,  1486,  3782,  1271,  1272,  2753,  3664,
    1271,  1272,   698,   611,  3395,  3396,  4496,  2660,  4447,  3499,
    4168,   981,   617,  1728,  3252,  4155,  3863,  4476,  1558,  1526,
    4480,  1531,  3662,  1522,   140,  1776,   136,   525,  1603,  1777,
     526,  4308,  1118,  1465,  3663,   928, -1652,  2110,  3678,  1312,
    1729,  3679,   587,  1778,  2069,  1159,  4224,  4568,  3664,  1842,
    3864,  4496,  1271,  1272,  2544,  1463,   714,  2754,  1121,  1122,
     981,   617,  1980,  1207,  2282,  3228,  4569,   913,  2635,  1271,
    1272,   712,  2109,  2716,  1523,   928,   597,  3607,  1007,  1772,
     873,  1466,  4273,  4218,  1034,  2695,  2696,  3272,  1981,  4448,
    2070,  1271,  1272,  2568,  2483, -2473,  2833,  3253,  3498,  1559,
     699,  1427, -2474,  2625,  3231,  2710,  2383,  3972,  1450,  4554,
     140,  1119,  3510,   568,   887,   137,  3767,  2616,  1247, -2541,
    1413,   524,  2608,  1466,  2323,  2197,  3572,  3552,  1271,  1272,
    4156,  -845,   654,  1274,  4299,   960,  1275,  2923,   665,  1401,
     691,  2360,  1024,  3232,  4088,  3662,  1271,  1272,  1057,   914,
    3403,  2261,  1075, -2176,   731,  4331,   865,  3663,   956,  4626,
     869,  1324,   966,   971,   691,  2764,  4373,  3855,  3856,  3857,
    3880,  3664,  3600,  1271,  1272,  1836,  3227,   882,  1076,  1779,
    1117,   665,  3574,   981,  3670,  2152,   890,  4324,  2155,  2704,
    1955,  1547,  2611,  2159,  2785, -2199,  1271,  1272,  4156,  3228,
     906,  1010,  3422,  1963,  1311,   952,  3499,  1274,  4474,  1487,
    1275,  4309,   884,  2636,  2021, -2325,  2661,  1271,  1272,   638,
    1984, -2474,  1271,  1272,  1725,   665,  1271,  1272,  1638,   665,
     665,  3928,  2925,   627,  2200,  2779,  2780,  2781,  2782,   907,
    3932,  1639,  3221,  1274,  3351,  1030,  1275,  2844,  2827,   924,
    2636,  2848,  2994,  2651,  2932,  1982,  3257,  3257,  2217,   584,
    2611,  3847,  1274,  1049,  3954,  1275,  2416,  2866,  2867,  3956,
    1554,  2995,  3271,  3011,  3833,  3273,  3274,  1780,  1271,  1272,
    2882,  1998,  1271,  1272,  1271,  1272,   665,  2828,  1083,  2687,
    4220,  2892,  2268,  2039,  1274,  3526,  4040,  1275,  3625,   520,
    2815,  1707,  1274,  1793,   678,  1275,  1109,  2481,  1274,   678,
     678,  1275,  1773,  2377,  1124,  1083,  2269,  3254,  2826,  4379,
    2834,  3211,  1271,  1272,  1606,  3397,  -511, -2030,  1096,  1153,
    1154,  1155,  1158,  3263,  2289,  2847,  1095,  2849,  1274,  3027,
    3270,  1275,  1271,  1272,  1274,  2861,  4498,  1275,  4103,  4104,
    1274,   922,  3500,  1275,  2493,  1274,  3677,  1129,  1275,  2350,
    2073,  2877,  -958,  1274,  4225,  1601,  1275,  1274,  2888,  4281,
    1275,  -603,  2020,  2796,  2797,  1268,  3259,  2170,  3509,  1638,
    1208,  2904,  2906,  2908,  1773,  2593,  2062,  2910,  2019,  2808,
    3602,  4107,  1639,  1276,  1390,  2559,  2596,  2507,  2745,  2599,
    2222,  1150,  2230,  3264,  3222,  3223,  2820,  2821,  1166,  1322,
    3764,  2579,  2991,  2464,  3434, -2541,  3618, -1576,  2470,  1274,
    1276,  2944,  1275,  2946,  2947,  3746,  3747,  2950,  2951,   877,
    3789,  2270,  2607,  4041,  3924,  1035,  1274,  2960,  2961,  1275,
    2281,  1265,   665,  1269,  2860,  2729,  2590,  1281,  3243,  2290,
    2042,  2992,   588, -2473,  4109,   896,  2000,  2572,  1274,  2872,
    1106,  1275,  2438,   909,  1458,  1114,  1114,  1276,  2118,  1248,
    1316,   520,  1318,  2990,  1083,   520,   665,  2156,   520,  2666,
    3775,  2772,  2569,  -604,  1361, -2473,  2443,  4169,  1157,  1527,
    1395,  1532,  4408, -2176, -2030,  1274,  1985,  2996,  1275,   678,
    1317,  2839,  2839,  1276,  1321,  2835,  1031,  1331,  2426,  1160,
    1773,   665,   678,  1274,  3281,   678,  1275,  1332,  2545,  1270,
    3631,  2491,  1276,  1520,  3233,  1271,  1272,  2458,  2473,  2060,
    3501,   665,  1391,  1271,  1272, -2199,  1934,  1935,  4584,  2281,
    1274,  2688,  1280,  1275,   569,  2079,   626,   865,  3665,  3500,
    2459,  2247,  1470,  3019,  1276, -2325,  2977,  2978,  2979,  2980,
    1927,   665,  1276,  1274,  3748,  3179,  1275,  3778,  1276,  2492,
    3275,  3845,  2301,  1271,  1272,   885,  1490,  2471,  2224, -2474,
    3848,   627,  1934,  2511,  1274,  3159,  4322,  1275,   902,  1274,
     665,  1599,  1275,  1274,  3103,  4471,  1275,  3665,  1276,  2519,
    1415,  2444,  2846,  2523,  1276,  3770,  2129,  4147,  1624,  4148,
    1276, -2474,  2998,  2490,   976,  1276,  3182,  1555,  2548,  2549,
    3214,  4079,  3705,  1276,  2565,  2566,  2546,  1276,  3766,  3120,
    3121,  2880,  2881,   678,  1271,  1272,   678,  3394,  2497,  1271,
    1272,  3456,  3457,  3229,  2225,  1274,  4326,  2719,  1275,  1274,
    2264,  1274,  1275,  2281,  1275,  1403,  2240,  3434,   665,  1505,
   -2176,   665,  3795,   758, -1576,  2452,  2994,  3137,  1421,  2173,
   -1822,  1423,  3778,  3647,  4115,   665,  1310,  1634,  2756,  1276,
    2139,  2281,  1271,  1272,  3626,  2995,  1271,  1272,  2827,  1274,
    4067,  3639,  1275,  3464,  3465,  1653,  1276,  1584,  1271,  1272,
    3609,  3003, -2199,  3630,  3613,   678,  1271,  1272,  1927,  1274,
    3481,  3482,  1275,  2687,  3061,  1271,  1272,  2873,  1276,  2886,
    3665,  3020, -2325,   122,  2689,  4282,   951,  2828,  4288,   763,
    4290,  1271,  1272,   665,  3779,  2282,  3902,  1795,   520,   520,
    3934,  3671,  3348,  1354,  2517,  2226,  3250,   520,   142,  2264,
    1686,  3087,  1271,  1272,  3362,  1276,   678,  1556,   529, -1999,
    2271,  1271,  1272,   678,   731,  1812,  1589,  1796,  1797,  3518,
    3519, -1743,  1869,  1276,  1773,  1870,  3825,  1937,  2458,  2603,
    1557,  3608,  1323,   582,   634,  3612,  2512,  2604,  2498,  1114,
    1138,  1146,  3603,  3997,  1208,  3115,  2874,  1479,  3239,  1689,
    1276,  2459,  1057,  3285, -1576,  3585,  1475,  1561,  1208,  3479,
    2741,   140, -1822,  1271,  1272,  2504,  2620,  3780,  2739, -1743,
    3176,   592,  4080,  1276,  3004,  1808,  2991,    44,  2227,  2744,
     775,  3568,  2747,  2748,  2282,  2268, -1822,   124,  2509,  3779,
    4049,  1271,  1272,  3927,  1276,  4318,  1804,  1983,  3944,  1276,
    2826,   722,  3767,  1276,  1271,  1272,  4319,  1928,  2560,  2269,
     702,  1114,  3945,  2264,  2510,  2992,  3251,   903,  2513,  1271,
    1272,  3939,  2289,  2272,   865,  2667,  2752,  1947,  1271,  1272,
     639,  1323,  1271,  1272,  1271,  1272,  1271,  1272,  1271,  1272,
    2598,  2264,  1274,  2022,  1160,  1275,  3363,  3160,  4326,  2875,
    1274,  3385,  1718,  1275,  1719,  1276,   596,  2104,  2104,  1276,
    1585,  1276,  1799,   791,   665,  1131,  1271,  1272,   656,  1991,
    2525,  3286,  3784,   678,  2531,  3276,  2535,  1271,  1272,  3207,
    4287,  4081,  2720,  3068,  1271,  1272,   665,   678,  1271,  1272,
    1274,  2668,  3627,  1275,  2021,  1938,  3171,  2297,  2282,  1276,
    2071,  1271,  1272,  3755,  2377,  3119,  1271,  1272,  1007,  1208,
     665,  4277,  3756,  1707,  2536,  2688,  1679,  2751,  3376,  1276,
    3217,  3796,  1946,  1476,  2270,  3215,  2282,  2332,  4122,  1602,
    1271,  1272,  3446,  3507,  2538,  2630,  4117,  2290,  2487,  3021,
    2575,  2094,  1311,  1271,  1272,    57,  2046,   641,  2049,  4092,
     678,  1274,  2054,  4075,  1275,  2328,  1274,  2438,  2117,  1275,
     678,  2369,  3005, -1576,  2990,  2788, -1822,   665,  1506,   547,
    1271,  1272,  1638,  1323,  2683,  2684,   678,  3208,  2174,  3124,
    3125,  2443,  1151,  2572,  2839,  1639,  2708,  3781,  2996,  3218,
    4283,  1324,  3252,  1271,  1272,  2273,   886,  1323,  2228,  1274,
     657,  2089,  1275,  1274,  3946,  2274,  1275,  1007,   665,  1480,
    1927,  3077,  2275,  1927,  2105,  1274,   952,   678,  1275,  1562,
    1132,  3118,  4320,  1274,  3183,   665,  1275,  1271,  1272,  1993,
     548,  3128,  1274,  1271,  1272,  1275,  3558,  3034,  4646,   635,
    3876,  3877,   627,  1114,  2738,  2264,  2053,  1533,  1274,   716,
     627,  1275,  4087,  1133,  1271,  1272,  3757,  4245,  2583,  4222,
    3400,  3401,  2301,  2327,   520,   520,   520,   678,   520,  1274,
     678,  4090,  1275,  2731,  2613,  3253,  3006,  1534,  1274,  2153,
     520,  1275,   665,   819,  2789,   520,  1271,  1272,  2204,  2333,
    1324,  4284,  3781,  2140,  2141,  2142,  2444,  2144,  2689,  4071,
    4072,  1728,  1276,  2998,  3809,   678,  2052,  2145,  2576,  2154,
    1276,  2488,  2487,   636,  2158,  2276,  1114,  2539,  1603,  1390,
    2147,  4285,  1724,   678,  2185,  4321,   933,  1535,  1729,  1126,
    1274,  1536,  1114,  1275,  2945,  2202,  4335,  2948,  2949,  1271,
    1272,  2952,  2953,  2954,  2955,  2956,  2957,  2958,  2959,  1007,
    1276,  2962,  1271,  1272,  2136,   665,  4488,  4489,  1274,  2249,
    4128,  1275,  1292,  2301,  3257,  3257,   549, -1651,  2377,  1271,
    1272,  1274,  1798,  1007,  1275,  4099,  2896,  1323,  2897,  1815,
    1728,  1271,  1272,  2148,  1871,  3645,  1274,  1872,  2693,  1275,
    2377,  1271,  1272,  1271,  1272,  1274,  3656, -1576,  1275,  1274,
    2790,  1274,  1275,  1274,  1275,  1274,  1275,  1729,  1275,  1271,
    1272,  1276,  2277,  1271,  1272,   927,  1276,  2715,  1271,  1272,
    2898,  2725,  1187,  2143,  1815,  3480,  2146,  1604,  3683,  3684,
     601,  2543,  1324,  1274,  4057,  3885,  1275,  1271,  1272,  1408,
    2826,   600,  1409,  2899,  1274,  1815,  3153,  1275,  1271,  1272,
    2584,  1274,   934, -1576,  1275,  1274,  1324,  1391,  1275,  1276,
    2186,  2169,  2223,  1276,  2223,  2822,  2238,  2239,  1274,  2241,
    2378,  1275,  1134,  1274,  2561,  1276,  1275,   678,  3462,  4058,
    2387,   678,  2900,  1276,  3366,  1537,  1271,  1272,  1320, -1576,
    3463, -1576,  1276,  2264,  1018,  3254,  2280,  1274,  3474,  3367,
    1275,   670,  2203,  1271,  1272,  1816,  1238,  3484,  1276, -1576,
    1274,  1188,  3913,  1275, -1576,  1271,  1272,   659,  4302,  4303,
    3360,  1271,  1272,  3485,  -242,  2716,  1815,   678, -1576,  1276,
     578,  3839,   935,  1271,  1272, -1576,   679,  1274,  1276, -1743,
    1275, -1822, -1576,  4100,  4009,  1730,  2449,   520,  1271,  1272,
    1832,  3812,  2472,  1007, -1576,  3814,  4116,   928,   678,  3089,
    1274,  1815,  2467,  1275,  1538,  1295,  4253, -1576,   682,  3361,
    3755,  1887, -1576,  1271,  1272,  2149,  2450,  3840,  2990,  3756,
    1019, -1576,  3620,  3621,  1097,  1271,  1272, -1743,  1476,  4254,
    1276,  3195,  1410,  2469,  1274,  1239,  1605,  1275,  2187,  1242,
    1274,   684,  2996,  1275,  2484,   601,  1271,  1272,  2294,  4059,
    3914,  1271,  1272,   695,  1606,  1271,  1272,  2188,  1276,   124,
    2264,  1274,   579,   930,  1275,  1323,  2020,  4486,  1539,  2580,
    2189,  1276,  2489,  2384,   693,  3159,  1324,  2389,  1135,  1208,
    2518,  2776,  2019,  3517,   525,  2499,  1276,   526,  3935,  2301,
    3123, -1576,  1891,  1274,  3915,  1276,  1275,  1271,  1272,  1276,
    2500,  1276,  2862,  1276,  3091,  1276,  2585,   703,  2777,  2508,
    1927,  3936,  2871,  2521, -1576,  2522,  3247,  2526,  2454,  2530,
     704,  3816,  2586,  1114, -1576,  1271,  1272,  1914,  1243,  2614,
    1180,  1181,   122,  1276,   580,  4420,   665,  4422,  2582,  4423,
    2455,  1271,  1272,  2911,  1276,  1607,  1274,  2534,  3136,  1275,
    3937,  1276,  1059,  1060,  2190,  1276, -1576,  2998,  2537,  1274,
    1271,  1272,  1275,  3757,  3591,  2540,  2324,  2485,  1276,  2552,
    2294,   702,  2120,  1276,  2901,  3592,  1274,  3874,  3282,  1275,
    1281,   707,  2571,  2512,  1927,   709,  2605,  3431,  1274,  1540,
    4015,  1275,  1323,  2121,  3095,   678,   665,  1276,  1274,   723,
    1274,  1275,  1250,  1275,  1649,  1650,  2104,   678,  1728,   711,
    1276,  3450,  1361, -1576,  2486,  2487,  1274,  1361,  2603,  1275,
    1274,  3096,  1458,  1275,  3455,  1274,  2652,   123,  1275,   870,
     665,  1541,   606,  3516,  2122,  1729, -1576,  1276,  3545,   537,
     606,  1007,  4515,  4515,  1274,  1790,   124,  1275,  1927,   678,
     725,  3458,  2712,   678,  1703,  1274,   726,  1704,  1275,  2886,
    1276,   727,  4028,  4029,  4030,  3867,  3868,  2514,  2487,   665,
     665,   678,   678,   880,  3466,  1280,  2191,   936,   937,  1208,
     939,   665,   941,   269, -1576,   271,  1589,   926,  2324,   665,
    3869,   626, -1853,  1274,  1276,   883,  1275,  1061,  1062,   942,
    1276,  2631,  3873,  2588,  2632,  2515,  1885,  2633,  3470,   893,
    1274,  3126,   888,  1275,  3471,  1304,  1305,  1306,  1307,   125,
    4238,  1276,  1274,   899,  1324,  1275,   627,   901,  1274,   910,
    1728,  1275,   917,  2737,   919,  3472,   947,   933, -1576,   665,
    1274,  1132,   924,  1275,  2527,  2487,   948,  2192,  3376, -1576,
   -1576,  1114,   977,  1276,  3230,  1274, -1853,  1729,  1275,  3633,
    3634,   645,  2682,  1114,   678,   972,  3437,  3473,  1007,  1041,
   -1576,  3444, -1576,  2325,  1143,   865,  2431,  1047,  3657,   678,
    1274,  3660,  3661,  1275,  2528,  2487,   678,   678,  1928,   678,
    2326,  1048,  1274,  1050,  3508,  1275,  3593, -1576, -1576,  3680,
    1071, -1576, -1576, -1853,   126,  2657,  1276,  1052,   646,  1403,
    2529,  2487,  1054,  1274,  2281,  1053,  1275,  1055,  1274,  1276,
    3475,  1275,  1274,  2733,  1292,  1275,   886,  1421,  2686,  4239,
    4240,  1068,  1292,  3478,  4241,  4242,  1276,  1085,  4490,  2532,
    2487,  1078,  3433,   981,   617,  3604,  1271,  1272,  1276,  3605,
    3483,  1324,  1094,  2248,  1097,  3776, -1822,  2869,  1276,  1127,
    1276,  3571,  2749,   934,  1274,  2431,  3606,  1275,  1107,  2223,
     981,   617,  3486,  1128,  3488,  1219,  1276,  2859,  3785,  3786,
    1276,   122,   647,  2693,  2809,  1276,  2818,  2819,  1130,  2378,
    3490,  2694,  1274,  1848,  2378,  1275,  1237,  4350,  1161,  3492,
    2843,  2378,  3801,  1035,  1276,  2378,  1163,  2854,  1274,  1251,
    1252,  1275,  2326,  3901,  1164,  1276,  2854,  1270,  3493,  2854,
    2746,  2378,  2378,  1165,   665,  2854,  2854,  1274,  1315,  2831,
    1275,  2879,  2791,  1927,  2378,  2264,  1928,  1167,   127,  1168,
    2799,  2845,  1169,   935,  3183,  2378,   678,  2855,  1172,  2806,
    2807,  2431,  1173,  1276,  1174,  2909,  1175,  2854,  1176, -1854,
    2811,  2812,  2813,  2814,  2985,  2816,  2817,  2378,  2921,  3901,
    1276,  2986,  2983,  1177,  2883,  1951,  2186,  3794,  1178,  2891,
    3594,  1179,  1276,  1313,  3494,  2941,  2894,  2895,  1276,  2210,
    2211,  3054,  2487,  1134,  2212,  2213,  3806,  3790,  1182,  1852,
    1276,  1319,  3807,  1184,  2856,  2857,  2858,  3105,  2487,  4437,
    2695,  2696,   956,  2281,  3808,  1276,   128, -1853,   956,  3390,
    3391,  1086,  -883, -1854,  2264,  3277,  1185,  1295,  1397,  3887,
    1186,  3819,  1335,  3655,  2890,  1295,  1189,  4127,  2021,   665,
    1276,  3829,  3830,  3831,    13,  1390,  1398,  3821,  3820,  2028,
    -688,  2697,  1276, -1853,  4006,   678,   678,   678,  1190,  3029,
    2294,  2432,  1191,  3291,  2431,  1399,  4008,  1323,  3682,  1192,
   -1854,  3294,  1087,  1276,  2295,  3297,  3687,  2281,  1276,   665,
    1407,   129,  1276,   130,  3713,   665,  2223,  4014,  1193,  2223,
    2223,  1416,  4016,  2223,  2223,  2223,  2223,  2223,  2223,  2223,
    2223,  1194,  2893,  2223,  1195,  1097,  1196,  1853,  1625,  2282,
    2264,  1856,  1197,  3570,  2187,  3150,  3371,  3151,  1857,  1426,
    3426,  3427,  1198, -1576,  1276,  1121,  1122,  1199,  2431,   131,
    1998,  4491,  2029,  2188,  1202,  2869,  2433,  2030,  4017,  1203,
    1059,  1060,   648,  1424, -1822,  3962,  2189,  1589,  1039,  1040,
    2432,  1043,  1276,  1044,  1446,    25,  1323,  1088,  1775,  1135,
    1209,  1121,  1122,  2985,   649,  1459,  4018,  1952,  1276, -1853,
    2986,  3476,  2487,  3543,  3544,  3576,  3577,  3695,  -688, -1576,
    2031,  1460,  4019,  1391,   532,  1297,  1298,  1276,  1210,  3192,
    3193,  3194,  1211,  1297,  1298,  1212,  2032,  1463,  3133,  1858,
     930,  4235,   665,   665,  1213,   650,  3732,  3733, -1822,  3734,
    3735,  3024,  3025,  3026,  3736,  3737,  1214, -1576,  4590,  4591,
    1728, -1853,  3142,  2264,  1291,  1215,   930,  2985,  3148,  3148,
    2190,  3148,  3739,  3740,  2986, -1576,  2432,  1216,  3871,   956,
   -1576,  1217,  1323,  1007,  3742,  3743,  3133,  1729,   936,   937,
     938,   939,   940,   941,  4344,  4345,  4346,  4347,  3166,  3818,
    2487, -1576,  1860,  2231,  1220,   651,  1292,  1221, -1576,  1222,
     942,  4275,  3842,  3843,  1776,  3967,  3968,  1223,  1777,  1224,
   -1576,  4000,  4003,  1292, -1854,  1061,  1062,  2264,  1928,  1225,
    4369,  3184,  1778, -1576,  1226,  2434,  4267,  1227, -1576,  4010,
    2487,  4024,  2487,  3148,  3148,  3148,   665, -1576,  2282,  4031,
    3852,  2433,  1228,  2105,  2105,  4056,  3427,  4062,  3843,  1229,
   -1854,  4228,  4232,  2117,   956,  2186,  1324,  4065,  4066,  2232,
    1509,  1292,  1007,  1300,  1301,  1302,  1303,  1304,  1305,  1306,
    1307,  1300,  1301,  1302,  1303,  1304,  1305,  1306,  1307,  2432,
    4077,  4078,  2191,  4105,  2819,  1323,   678,  4118,  4066,  2981,
    2233,  1230,  4492,  1063,  1064,  1065,  4228,  4232,  1231,    38,
    4355,  1232,  2282,  4358,  4359,  4360,  4361, -1576,  1233,  1089,
    4119,  4066,  1471,  1953,  3147,  3147,   956,  3147,  1234,  1510,
     665,   665,  4120,  4066,  2431,  4042,  4043,  3038,  4045,  1954,
   -1576,  1235,  -688,  1861,  1236,    44,  1271,  1272,  4153,  4066,
   -1576,  4154,  4066,  2432,  1240,  1324,  1241,  2251,  1007,  1323,
    1244,  1863,  1511,  2192,  3039,  4164,  4066,  1245,  1779,  4228,
    2234,  2378,  2252,  4232,  2378,  2378, -1854,  4349,  1293,  2854,
    1478,  2666, -1576,  1249,  1090,  1253,  1091,  1917,  1918,  2231,
    4165,  4066,  2887,   665,  2231,  1481,  4086,  2378,  1254,  3147,
    3147,  3147,  2186,  2187,  1294,  3240,  3241,  1483,  4086,  1295,
    2434,  4433,  4434,  3040, -1822,  1255,  3041,  2854,  1256,  4402,
    4442,  3244,  2188,  1257,  3042,  2854,  1295,   737, -1854,  2854,
    1927,  3920,  3921,  4424,  1258,  2189,  4170,  4171,  1314, -1576,
    1504,  1324,   535,  1844,  1845,  1846,  1847,  1848,  4172,  4171,
    1508,  3930,  1528,  2235,  1529,  2232,  3301,  1530,  3933,   678,
    2232,    54, -1576,  1545,  3359,  1548,  1780,  1998,  1998,  1998,
    2854,  1007,  4268,  3427,  1295,  4269,  3427,  4271,  3373,  1552,
    3219,  1553,  1656,  1657,  3958,  1560,  2233,  3960,  1563,  3283,
    1564,  2233,  1565,  2264,  1578,  1121,  1122,  4351,  4352,  3380,
    2231,  3289,  3384,  2903,  3895,  4370,  3843,  2667,  4484,  4485,
   -1576,   758,  1579,    57,  4435,  4436,  -848,  -848,  1659,  2190,
    1583,  4141,  1581,  4142,  4143,  1587,  -848,  -688,  4519,  4520,
    4637,  4638,  1662,  4132,  4133,  1007,  3410,  1594,  1663,  1596,
    2187,  1664,  3878,  2253,  1597,  1598,  1611,   678,  2378,  -844,
    1849,  1850,  1851,  1852,  1324,  3688,  2234,  1656,  1657,  2188,
    3043,  2234,  1613,  4502, -1576,  1666,  2232,  1614,   762,  1615,
    1616,  1296,  2189,  2668,  1617,  1618, -1576,   763,  2693,  1635,
    1619,  1512,  1620,  1667,  1297,  1298,  3154,  3402,  1622,  1635,
    1641,  -848,  -848,  1659,  1643,  1646, -1576,  2233, -1576,  3689,
    2223,  -848,  1647,  3690,  2669,  3691,  3393,  1662,   768,  1651,
    1722,  1723,  1672,  1663,  1726,  3302,  1664,  1727,  1324,  2432,
    1784,  2254,  1785, -1576, -1576,  1323,  1589, -1576, -1576,  1786,
    1789,  2231,  1297,  1298,  2905,  1792,  1805,  1310,  1815,  2235,
    1666,  2191,  1822,   865,  2235,  1299,  1837,  2255,  4289,  1884,
    3514,  4562,  3692,  4564,  1635,  1874,  2190,  3044,  1667,  1885,
    1886,  1853,  1908,  1854,  1855,  1856,  -688,  2234,  1943,  1925,
    1944,  4577,  1857,  2236,  2670,  1361,  2294,  1936,   775,   665,
    1762,  1763,  1764,  1765,  1766,  1767,  1768,  1672,  1928,  1676,
    2295,   678,  1962,  1968,  2433,  1992,  1677,  2232,  1995,  1997,
    4605,  4606,  2002,  3414,  4237,  2695,  2696,  3166,   665,  2256,
     865,  2005,  2192,  1274,  2006,  1678,  1275,  1302,  1303,  1304,
    1305,  1306,  1307,  1208,  1292,   665,  1513,  2007,  2233,  2008,
    -844,  2009,  2010,  1998,  1302,  1303,  1304,  1305,  1306,  1307,
    2012,  2011,  2024,  4255,   786,  2231,  2697,  1514,  2907,  2023,
    2235,  2025,  1292,  1858,   678,  2027,   789,  2671,   678,  2033,
     790,   791,  1928,  2035,  1676,  2036,  2045,  2044,  2056,  2067,
    2059,  1677,  1515,  2075,  2077,  1680,  4256,  2076,  2191,  2078,
    1300,  1301,  1302,  1303,  1304,  1305,  1306,  1307,  1516,  -883,
    1678,  2081,   605,  1681,  -688,  2085,  2084,  2087,  2234,  2091,
     532,  1007,  2378,  3013,  1282,  1283,  2088,  2095,  3045,  2110,
    2257,  2232,  2378,  2112,  2854,  1859,  1860,  2113,  2119,   960,
     959,  2126,  3688, -1822,  4524,  2127,  1928,  2128,  1589,  2378,
    2854,  2533,   678,  2132,  2378,  1292,  1728,  2134,  2138,  2160,
    2161,  2162,  2233,  2163,  2165,  1284,  2178,  3557,  1685,  2192,
    1680,  2180,  2194,  2434,  2198,  2195,  2199,  1687,  1285,  2236,
    2201,  2205,  2206,  1729,  2236,  2207,  3948,  2243,  1681,  2244,
    3690,  2246,  3691,  2250,  3624,  2294,  2308,  2313,  3046,  2321,
    2314,  2235,  2319,  2331,  1324,   866,   867,   868,  2318,  2329,
     871,   872,  1121,  1122,   874,   875,   876,  1286,  3693,   520,
    4257,  2334,  4524,  3727,  3694,  2341,  3047,  2941,  2342,  2347,
    1287,  2346,  2234,  2353,  2354,  1927,  2363,  2366,  1773,  3692,
    2365,  2367,  2379,  1685,  3380,  2391,  4632,  1295,  3723,  1927,
    2393,  1589,  1687,  3745,  1927,  1693,  2394,  1288,  2395,  1927,
    4641,  2396,  3467,  2397,  3695,  4632,  2398,   678,  2399,   678,
    4641,  2400,  2401,  2402,  2425,  1295,  2403,  1861,  2404,   811,
     930,  3774,  2105,  3896,  2405,  2406,  3897,  2407,  2408,  2409,
    2236,   553,  2410,  1276,  1862,  1863,   817,  2672,  2411,  2412,
    2413,   819,  2414,  2415,   820,  2418,  4258,  2419,  1114,  2420,
    2421,  2422,  1694,  1695,  1696,  2235,   737,  2423,  2424,  1697,
    2427,  2296,  1289,  2445,  4259,  2446,  2451,  2461,  2462,  2463,
    1693,  1428,  2469,  2465,  2503,   531,  1698,  2474,  -688,  1699,
    2476,  1429,  3696,  2487,  2477,  2478,  1187,  2494,  4260,  2496,
     554,  1430,  2501,  2502,  2505,  2512,  2516,  2506,  1295,  2520,
    3754,  3898,  3899,  2524,  1431,  1432,  1433,  2550,  2578,  4265,
    2627,  4328,  2551,  1307,  2541,  1701,  -883,  2542,  2547,  2562,
    1434,  2563, -1308,   555,  4602,  2564,  2601,  1694,  1695,  1696,
    2587,  2597,  3697,  3895,  1697,  2628,  1238,  4617,  3142,  2602,
     758,  1395,   665,   665,   665,  1297,  1298,  2609,  2615,  1362,
    1363,  1698,  1292,  1242,  1699,  2664,  2658,  3166,   556,  2676,
    4314,  2236,  2679,  3762,  2722,  3763,   532,  2724,  3994,  3995,
    3996,  3184,  3850,  1297,  1298,  3421,  2730,  1476,   535,  2734,
    2707,  2718,   665,   665,   665,  2736,  2740,  2758,  2759,  3698,
    1701,  2760,  2773,   956,  2774,  2786,  2792,   762,  2775,  2793,
    2800,   926,  -914,  2801,   678,   678,   763,  2798,   557,  2802,
    3029,  2803,   926,  2804,  2805,  2863,  2117,  2865,  2930,  1121,
    1122,  2933,  3925,  2936,  2984,  3693,  3892,  2943,  3000,  2965,
    3037,  3694,  4265,  2913,  1364,   678,  2968,   768,  1653,  2971,
    1654,  2974,  1811,  3008,   928,  3910,  3033,  3056,  3014,  3057,
    3055,  3140,   533,  1656,  1657,  3069,  1297,  1298,  2652,  3070,
     665,  3116,  3082,  -688,  3104,  1365,  3145,  3162,  3114,  1334,
    1007,  3695,  3122,  3161,  3141,  2236,  3905,  3157,  3167,  1366,
    3168,  3172,  3169,   665,  1658,  4063,  4064,  4261,  3174,  1659,
    4069,  4070,  2062,  1300,  1301,  1302,  1303,  1304,  1305,  1306,
    1307,  3189,  1367,  1662,  3173,  1368,  1337,   775,  3190,  1663,
    3186,  3961,  1664,  3191,  3196,  3201,  3202,  3204,  1369,  3205,
    3212,  1665,  1301,  1302,  1303,  1304,  1305,  1306,  1307,  3380,
    3206,  3384,  3974,  3225,  3220,  3224,  1666,   -67,  3245,  3248,
    3249,  3268,   558,  4497,  3269,  1370,  3410,  1435,  3280,  3696,
    1635,  3284,  3267,  3287,  1667,  1295,  3295,  3288,  3292,  3298,
    3300,  3299,  1668,  4328,  1436,  3892,  3892,  3892,  3365,  2914,
    1371,  3369,  3373,   786,  1652,  3372,  1372,  1671,  3398,  1653,
    3938,  1654,  3399,  1672,  1655,  3406,  3413,  3411,  4497,   790,
     791,  3903,  2639,  1686,  1656,  1657,  3434,  3428,  3438,  3697,
    3440,  3445,  3447,  1338,  1300,  1301,  1302,  1303,  1304,  1305,
    1306,  1307,  3448,  3449,  3964,  3451,  3459,  1674,  2640,  1373,
     559,  3452,  3443,  3495,  3505,  1658,  3460,  3506,  1339,  2223,
    1659,  1660,  1340,  2641,  3511,  4038,  1661,  3515,  3979,  3520,
    3521,  3551,  3548,  3546,  1662,  3547,  2642,  3549,   665,  3553,
    1663,  3550,   956,  1664,  3559,  1408,  3698,  3563,  3562,  3565,
    1676,  3228,  1665,  3584,   534,  3575,  3578,  1677,  3586,  3588,
    3589,  3590,  1341,  3597,  3610,  2117,  3611,  1666,  3616,  3623,
    3632,  3635,  3892,  3892,   535,   560,  1678,  3892,  3892,  4614,
     561,  1635,  1342,  3636,  4265,  1667,  3641,  2643,  2644,  3651,
    3658,  1437,  3717,  1668,  1669,  3718,  3714,  3721,   562,  1679,
    1670,  3724,  3725,  1297,  1298,  4614,  3729,  3750,  1671,   665,
    3749,  3744, -1008,  3730,  1672,  2645,  2693,  2568,  3500,   536,
    3783,  -609,  1679,   563,   537,  1673,  3751,  3798,  3738,  1653,
    3823,  3765,   665,  3834,  3836,  3752,  1680,  3771,  3854,   564,
    3827,  3772,  3773,  3858,  3791,  1374,  1343,  3859,  1674,  1375,
    3797,  3810,  4098,  1438,  1681,  3844,  3851,  3860,  1682,   538,
    3380,  3380,  3852,  3861,  3872,  1376,  3875,   539,  3879,  3882,
    1439,  4112,  3908,  1377,  3888,  3889,  3893,  2251,   811,  3911,
    3922,  1378,  3896,  3894,  2646,  3897,  3919,  3926,  3705,  1675,
    3931,  1676,  2252,  3929,  3942,   817,  3943,  3947,  1677,  3950,
     819,  3952,  1684,   820,  3953,  3708,  3959,  2931,   864,  1685,
    3963,  3965,  3976,  3977,  3988,  4644,  1379,  1678,  1687,  1442,
    1363,  3985,  3992,  3986,  4007,  3989,  4011,  3990,  3998,  1380,
    1381,  3999,  4012,  4325,  4000,  4001,  4025,  3029,  2647,  3029,
    1679,   864,  1344,  4013,  2941,  2941,  4002,  4026,   864,  4004,
    3892,  1300,  1301,  1302,  1303,  1304,  1305,  1306,  1307,  3528,
    3898,  3899,  4167,  4005,  4027,  1690,  4021,  4032,  4022,  3529,
    4033,  4034,  2604,  4044,  3653,  3654,  4046,  1680,  1345,  3530,
    4047,  1382,  3443,  4053,  4050,  3443,  3443,  1346,  4055,  4060,
    4061,  4068,  3531,  3532,  3533,  1681,  1693,  4076,  4082,  1682,
     789,  4091,  1347,  3443,  1364,  4093,  4094,  4003,  3534,  4108,
    1383,  4113,  4121,  4124,  4125,  4129,  4126,  3686,  1928,   678,
    4130,  4134,  4252,  3706,  3709,  3711,  3712,  1348,  4135,  4138,
    4144,  4139,  1384,   927,  1385,  1365,  4416,  1683,  4163,  4149,
    4150,  4174,  4166,  1684,  4210,  4173,  4207,  1363,  4248,  1366,
    1685,  4213,  4219,  1694,  1695,  1696,  1686,  4214,  4266,  1687,
    1697,  4297,  4234,  2253,  4236,  4247,  4304,  4270,  2925,  4293,
    1349,  4311,  1367,  -383,  4099,  1368,  4278,  1698,  4313,  4316,
    1699,  4334,  4337,  4343,  4354,  4356,  4357,  4362,  1369,  4366,
    4365,  1688,   864,  4371,  4459,  4374,  4375,   864,  3380,  4379,
    4376,  1350,  -401,  4382,  4407,  1689,  1690,  1691,  1692,  4459,
    4409,  4410,  4411,  4412,  4413,  1370,  1701,  4415,  4428,  4444,
    4439,   525,  4443,  1702,   526,  4470,  4446,  4445,   864,  4455,
    4456,  1364,  4466,  4467,  4274,  4460,  4474,  1693,  4498,  4503,
    1371,  2254,  4505,  4507,   864,  4508,  1372, -2379,  4511,  4417,
    1703,  4529,  4531,  1704,  4532,  4537,  4550,  4540,  4542,  4552,
    4555,  4559,  1365,  4560,  1121,  1122,  4565,  2255,  4570,  4561,
    4571,  4566,  4576,  4580,  4574,  4246,  1366,  4587,  4589,  4596,
    4582,  4585,  4586,  4593,  4383,  4594,  4603,   864,   864,  1373,
     864,   864,  4618,  4623,  1694,  1695,  1696,  4633,  4619,  1367,
    4306,  1697,  1368,   864,  4643,  2976,  3138,  2967,  2970,  4459,
    3973,  3975,  2973,  3971,  2964,  1369,   665,  1144,  1698,  4549,
    3978,  1699,  3260,  4215,  4551,  3980,  4468,  4323,  3242,  2256,
    4469,  3987,  4111,  3982,  4635,  3535,  4252,  4598,   633,  2705,
    1017,  2623,  1370,  3542,  1700,  4438,  4185,  4607,  4186,  1645,
    4188,  4189,  3536,  4191,  4534,  4192,  4453,  1701,  1337,  2869,
    4193,  4194,  4195,  4196,  1702,  4535,  4199,  1371,  4516,  4459,
    4200,  4459,  4201,  1372,  2712,  4465,  2370,  4464,  2293,  1705,
    2889,  3564,  4221,  3569,  4459,  4036,  3838,  4427,  4136,  4473,
    4039,  1703,  1788,  2065,  1704,  4573,  4527,  4557,  4364,   864,
    4526,  2430,   724,  3991,  2368,  3419,  3405,  3650,  2375,  2927,
    3637,   864,  4459,  4459,  3642,  4291,  1373,  4622,  4530,  3715,
    3672, -1008,  3673,  4084,  3949,  1374,   665,  4472,  3246,  1443,
    2257,  3497,  3813,  3815,  4432,   864,  3811,   545,  4272,   546,
    4279,  2460,  4280,  4341,  4276,  1376,  4339,  3023,  4162,  4089,
    3404,  2783,  1738,  1377,  2787,  1338,  2999,  4074,  1032,  2915,
    2372,  1378,  1028,  2179,  2177,  3907,  3175,   665,  3638,  2428,
    2685,  3158,  3556,  3537,  2388,  3835,  2090,  1046,  1469,  3113,
    1339,  1464,  2600,  1945,  1340,  3130,  3053,  3131,  4539,  3538,
    2771,  3112,  2182,  3884,  1883,  4547,  1379,  3622,  4151,  1834,
    3731,  4152,  4023,  3644,  3817,  3129,  3881,  4342,  4487,  1380,
    1381,  4145,  4481,  4482,  1739,  1740,  1741,  1742,  1743,  1059,
    1060,  1744,  1745,  1746,  1341,  1747,  1748,  1749,  1750,  1751,
    1752,  1753,  1754,  1755,  1756,  2714,  1757,  1758,  4146,  1156,
    1994,  3155,  1396,  3832,  1342,  4578,  4636,  3156,  1627,  1628,
    4583,  3539,  1374,  3853,  3617,   643,   732,  1629,  2743,  2742,
    2151,  1382,  1013,   864,  2176,  1630,  2166,  2617,  3540,  4528,
    3649,  3837,  1376,  4572,  2083,  3862,  4588,  4048,  4642,  4615,
    1377,  4645,  3941,  3849,  1810,   629,   630,  1492,  1378,  2732,
    1383,  1491,  1942,  2133,  2663,  2125,  2711,  1445,  2124,  2638,
    1610,  2086,  3824,  1928,  2778,  4615,  4348,   923,  1343,  3512,
    1448,   718,  1384,   665,  1385,   719,  4315,  1928,     0,   864,
     864,  4317,  1928,  1379,  1147,  1148,  1149,  1928,   864,   864,
     864,   864,   864,   864,   864,     0,  1380,  1381,     0,     0,
       0,   864,   864,     0,   864,   864,     0,     0,     0,   864,
     864,     0,     0,   864,   864,   864,   864,     0,   864,   864,
       0,     0,     0,     0,  1061,  1062,   864,   864,     0,   864,
     864,   864,   864,   864,     0,     0,   864,   864,   864,   864,
     864,   864,   864,   864,   864,   864,     0,   864,  1382,     0,
     864,   864,     0,     0,     0,   864,     0,     0,     0,   864,
     864,   864,     0,     0,  1344,     0,     0,     0,     0,     0,
       0,     0,   864,   864,   864,     0,     0,  1383,     0,     0,
       0,   864,     0,     0,     0,     0,   864,     0,     0,     0,
       0,     0,   864,     0,   864,   864,     0,     0,     0,  1384,
    1345,  1385,     0,     0,     0,     0,   864,   864,   864,  1346,
     864,   864,   864,   864,   864,     0,   864,   864,   864,   864,
     864,   864,   864,   864,  1347,     0,     0,   864,     0,     0,
     864,     0,     0,     1,     0,     0,     2,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1348,
       0,     3,     0,     0,     0,     4,     0,     0,     0,     0,
       0,     0,  1844,  1845,  1846,  1847,  1848,     0,     0,     5,
       6,     0,     0,     0,     0,     1,     0,     7,     2,     0,
       0,     0,     8,     9,     0,     0,     0,     0,     0,     0,
       0,     0,  1349,     0,     0,     0,     0,     4,    10,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     5,     6,     0,     0,     0,     0,    11,     0,     7,
       0,     0,     0,  1350,     8,     9,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    12,
      10,     0,     0,     0,     0,     0,     0,     0,    13,    14,
      15,     0,     0,     0,     0,     0,     0,     0,     0,    11,
       0,    16,    17,     0,     0,     0,     0,     0,     0,  1849,
    1850,  1851,  1852,     0,    18,   864,     0,     0,     0,     0,
       0,    12,     0,     0,     0,     0,     0,     0,    19,     0,
      13,    14,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,   864,     0,     0,    20,   864,
       0,     0,     0,     0,     0,   864,     0,     0,     0,     0,
       0,     0,   864,     0,     0,     0,    21,     0,    22,     0,
      19,     0,     0,    23,     0,     0,    24,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,     0,     0,     0,     0,     0,     0,     0,    25,
       0,    26,     0,     0,     0,     0,     0,     0,    21,     0,
      22,     0,     0,     0,     0,    23,     0,     0,    24,     0,
    1853,    27,  1854,  1855,  1856,     0,     0,     0,     0,     0,
       0,  1857,     0,     0,     0,     0,     0,     0,    28,     0,
       0,    25,    29,    26,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    27,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1656,  1657,  1858,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,  -848,  -848,  1659,     0,     0,   843,
       0,     0,     0,     0,  -848,     0,    31,     0,    32,     0,
    1662,     0,     0,     0,     0,     0,  1663,     0,     0,  1664,
       0,     0,    33,     0,  1859,  1860,     0,     0,     0,     0,
       0,    30,   891,    34,     0,     0,     0,     0,     0,   898,
       0,     0,     0,  1666,     0,     0,     0,     0,    31,     0,
      32,     0,     0,     0,     0,    35,     0,  1635,    36,     0,
      37,  1667,     0,    38,    33,     0,     0,     0,     0,     0,
       0,     0,     0,    39,    40,    34,     0,     0,     0,     0,
       0,     0,     0,    41,     0,    42,  4205,     0,     0,     0,
    1672,     0,     0,    43,     0,     0,     0,    35,     0,    44,
      36,     0,    37,     0,     0,    38,     0,    45,     0,     0,
       0,     0,    46,    47,    48,    39,    40,     0,     0,     0,
       0,     0,     0,     0,   864,    41,     0,    42,   864,     0,
       0,     0,     0,     0,     0,    43,     0,     0,   864,     0,
     864,    44,     0,     0,     0,    49,     0,     0,     0,    45,
       0,     0,    50,     0,    46,    47,    48,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1861,  1676,     0,  4205,
    4205,     0,     0,     0,  1677,     0,     0,     0,     0,     0,
       0,   864,     0,  1862,  1863,     0,     0,    49,  1170,     0,
       0,     0,     0,  1678,    50,     0,    51,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    52,     0,
       0,     0,    53,     0,     0,    54,     0,     0,     0,  1201,
      55,     0,     0,     0,     0,     0,   864,   864,   864,     0,
    1656,  1657,     0,     0,     0,  1218,     0,     0,    51,     0,
       0,   864,     0,     0,     0,     0,     0,     0,     0,   864,
      52,    56,     0,  1680,    53,     0,     0,    54,     0,     0,
       0,     0,    55,     0,     0,     0,  1659,    57,   864,     0,
       0,  1681,     0,     0,   864,     0,     0,   864,     0,   864,
    1662,     0,  1262,     0,     0,   864,  1663,   864,   864,  1664,
       0,     0,     0,    56,     0,     0,  4205,  4205,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    57,
       0,     0,     0,  1666,     0,     0,     0,     0,  4205,     0,
       0,     0,     0,     0,     0,     0,  1685,  1635,     0,     0,
       0,  1667,     0,     0,     0,  1687,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1672,     0,     0,     0,     0,     0,     0,     0,   864,     0,
       0,     0,     0,     0,     0,     0,  4205,     0,   864,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     843,  4205,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1473,     0,     0,     0,     0,  4205,     0,     0,
       0,     0,     0,  1693,     0,     0,   864,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1502,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1676,     0,     0,
       0,  4205,     0,     0,  1677,     0,     0,     0,     0,     0,
       0,     0,     0,  4205,  4205,     0,     0,     0,     0,     0,
       0,     0,     0,  1678,     0,     0,     0,     0,     0,     0,
    1694,  1695,  1696,     0,     0,     0,     0,  1697,     0,     0,
     864,     0,     0,     0,     0,     0,     0,   864,     0,     0,
       0,  4205,     0,     0,  1698,     0,     0,  1699,     0,     0,
       0,  4205,     0,     0,     0,     0,  4205,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1680,     0,     0,     0,     0,     0,  4205,
       0,  4205,     0,  1701,     0,     0,     0,     0,     0,     0,
       0,  1681,     0,     0,     0,     0,     0,     0,     0,  4205,
       0,  4205,     0,  4205,  1737,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4205,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4205,  4205,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4205,  4205,  1685,     0,     0,  4205,
       0,     0,     0,     0,     0,  1687,     0,     0,     0,     0,
    1813,  1814,     0,     0,     0,     0,     0,     0,     0,  1824,
    1825,     0,     0,  1829,  1830,  1831,     0,     0,     0,     0,
       0,     0,  1838,  1839,     0,  1840,  1841,     0,     0,     0,
    1866,     0,     0,     0,  1876,  1877,  1878,  1879,     0,  1881,
       0,     0,     0,     0,     0,     0,     0,  1889,  1890,     0,
    1893,  1894,     0,     0,     0,     0,     0,  1898,  1899,     0,
       0,  1902,  1903,  1904,  1905,  1906,  1907,     0,  1909,     0,
       0,  1912,  1913,  1693,     0,     0,  1916,     0,     0,     0,
    1919,  1923,  1924,     0,     0,     0,     0,     0,     0,     0,
     864,     0,     0,  1931,  1932,  1933,     0,     0,     0,     0,
       0,     0,  1941,     0,     0,     0,     0,   843,     0,     0,
       0,     0,     0,  1948,     0,  1949,  1950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1694,  1695,  1696,     0,     0,     0,     0,  1697,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1986,     0,     0,  1698,     0,     0,  1699,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   864,     0,     0,
       0,     0,     0,     0,     0,     0,   864,   864,     0,     0,
       0,     0,     0,   864,     0,     0,   864,     0,     0,     0,
       0,     0,     0,  1701,     0,     0,     0,     0,     0,   864,
     864,     0,   864,     0,     0,   864,   864,   864,   864,   864,
       0,     0,   864,     0,     0,     0,     0,     0,     0,     0,
       0,   864,     0,     0,     0,     0,     0,   864,     0,   864,
       0,   864,   864,     0,   864,   864,     0,     0,     0,   864,
     864,   864,     0,     0,     0,   864,   864,   864,     0,   864,
       0,   864,     0,   864,     0,   864,     0,   864,  3303,  3304,
       0,     0,   864,     0,  3305,     0,  3306,     0,  3307,  3308,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   902,   980,     0,   864,     0,  3309,   864,     0,     0,
       0,     0,     0,   864,     0,     0,  2096,     0,   864,   864,
       0,     0,     0,     0,     0,     0,     0,   981,   617,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   982,     0,
       0,     0,     0,     0,     0,     0,  2130,     0,     0,     0,
    1502,     0,     0,     0,     0,  3310,     0,     0,  3311,     0,
       0,     0,   983,  2137,   984,     0,  3312,     0,     0,     0,
       0,     0,     0,     0,   985,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3313,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3314,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1822,   986,     0,     0,     0,     0,   987,     0,
    3315,   988,  3316,     0,   864,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   864,  3317,  3318,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   989,     0,   990,     0,     0,     0,     0,
       0,     0,     0,     0,   991,     0,   992,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3319,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   993,
     994,     0,  3320,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3321,     0,     0,  3258,   995,     0,     0,     0,     0,
    3322,  3323,     0,  3324,     0,     0,  3258,  3258,     0,     0,
       0,     0,     0,     0,     0,     0,   996,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3325,  3326,  3327,     0,     0,     0,     0,     0,     0,     0,
     997,     0,     0,     0,     0,     0,     0,     0,     0,  3328,
    3329,  3330,     0,     0,     0,     0,  3331,     0,     0,  3332,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3333,  3334,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   998,     0,     0,     0,     0,
       0,  3335,  3336,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   999,     0,     0,  2475,     0,  3337,     0,  2479,
       0,     0,     0,  1000,  1001,     0,     0,  1002,  1003,     0,
       0,  2475,     0,     0,     0,  3258,  3258,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1004,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3338,     0,
       0,     0,  3339,     0,     0,     0,     0,   864,     0,     0,
     864,     0,     0,     0,  3340,     0,     0,     0,     0,     0,
       0,  1005,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   864,   864,  1006,     0,     0,  2554,  2556,  2558,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   864,     0,     0,     0,     0,     0,
    2581,     0,     0,   864,     0,   864, -2415,   864,     0,     0,
    1007,     0,     0,     0,  3341,     0,     0,  3342,     0,  2589,
    3343,  3344,  3345,  3346,     0,   864,     0,     0,  2594,  1008,
    2595,     0,     0,     0,     0,     0,     0,   864,     0,     0,
       0,     0,   864,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3347,  3348,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -2415,     0,     0,
       0,  3349,   864,     0,  1009,     0,     0,     0,     0,     0,
       0,     0,   864,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   864,   864,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2681,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   864,   864,     0,     0,     0,   864,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2721,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   864,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2750,     0,     0,     0,     0,     0,     0,   843,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   864,   864,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3258,  3258,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   864,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   864,     0,   864,     0,     0,   864,   864,
       0,   864,     0,     0,     0,     0,     0,     0,     0,     0,
     864,     0,     0,     0,     0,   864,     0,     0,   864,     0,
     864,   864,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   864,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2942,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   864,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3032,     0,
       0,     0,     0,     0,     0,     0,     0,  3035,  3036,     0,
       0,     0,     0,     0,  3050,     0,     0,  3051,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3058,  3059,     0,  3060,     0,     0,  3063,  3064,  3065,  3066,
    3067,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3071,     0,     0,     0,     0,     0,  3072,     0,
    3073,     0,  3074,  3075,     0,  3076,     0,     0,     0,     0,
    3079,  3080,  3081,     0,     0,     0,  3083,  3084,  3085,     0,
    3086,     0,  3088,     0,  3090,     0,  3092,     0,  3093,     0,
       0,     0,     0,  3094,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3127,     0,     0,     0,     0,  1986,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   864,     0,
       0,     0,     0,     0,     0,  2096,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   864,     0,     0,  1502,     0,
     864,     0,     0,     0,   864,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   864,     0,   864,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     864,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4203,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3430,   864,
     864,  3432,     0,     0,     0,     0,  4203,  4203,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3453,  3454,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3477,     0,     0,     0,     0,
       0,     0,     0,     0,  3487,     0,  3489,     0,  3491,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   843,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   864,
       0,   864,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   864,     0,  4203,  4203,     0,     0,     0,     0,     0,
       0,     0,     0,   843,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3580,     0,  4203,     0,     0,     0,     0,
       0,     0,     0,  4421,     0,     0,     0,     0,  2096,  3601,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3614,  3615,     0,     0,     0,  3580,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   864,     0,  4203,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4203,   864,
       0,     0,     0,     0,  3629,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4203,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   864,  4203,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4203,  4203,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   864,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4203,  3719,
    3720,     0,     0,     0,     0,   864,     0,     0,  4203,     0,
       0,     0,     0,  4203,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   864,
       0,     0,     0,     0,     0,     0,  4203,     0,  4203,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   864,     0,     0,     0,     0,  4203,     0,  4203,     0,
    4203,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3777,     0,     0,  4203,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4203,  4203,     0,     0,     0,
       0,     0,     0,     0,  3787,     0,  2096,     0,     0,  3792,
    3793,  4203,  4203,     0,     0,     0,  4203,     0,     0,     0,
       0,  3800,   864,     0,     0,     0,  3802,     0,     0,  3803,
       0,  3804,  3805,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     864,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3580,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   143,   144,     0,   145,   146,   147,
     148,   149,     0,     0,   150,   151,     0,     0,     0,   152,
       0,     0,   153,     0,   154,   155,   156,   157,   158,   159,
       0,   160,     0,     0,     0,   161,     0,     0,     0,   162,
       0,     0,   163,   164,   165,     0,   166,     0,   167,   168,
       0,     0,   169,     0,     0,   170,   171,     0,   172,   173,
     174,     0,   175,     0,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,   195,  2295,   196,   197,
     198,   199,   200,     0,     0,     0,   201,     0,     0,   202,
       0,   203,     0,     0,   204,     0,     0,     0,   205,   206,
     207,     0,     0,   208,     0,     0,     0,     0,   209,   210,
       0,     0,     0,     0,   211,   212,     0,   213,     0,     0,
       0,   214,     0,   215,   216,   217,   218,   219,     0,     0,
       0,   220,     0,     0,   221,   222,   223,     0,     0,     0,
     224,     0,   225,   226,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,   235,   236,   237,  3580,
       0,   238,   239,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,  2096,     0,   250,   251,
       0,  4052,     0,   252,   253,  4054,   254,   532,   255,     0,
     256,     0,   257,   258,   259,   260,     0,   261,     0,   262,
       0,     0,     0,   263,   264,     0,   265,     0,     0,   266,
     267,     0,     0,     0,   268,   269,   270,   271,     0,     0,
     272,   273,   274,  1728,     0,   275,     0,     0,     0,     0,
     276,   277,     0,     0,     0,   278,     0,     0,     0,   279,
     280,     0,   281,   282,     0,     0,     0,   283,     0,   284,
    1729,     0,   285,   286,     0,     0,   287,     0,     0,   288,
     289,     0,  3415,     0,     0,     0,   290,   291,     0,   292,
       0,   293,     0,   294,   295,     0,     0,     0,     0,     0,
       0,     0,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,   315,   316,   317,     0,   318,   319,   320,
     321,     0,   322,   323,  2096,     0,  4123,     0,   324,   325,
     326,   327,   328,   329,     0,     0,   330,   331,     0,   332,
       0,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,     0,     0,   343,   344,     0,     0,   345,   346,
     347,   348,   349,     0,     0,     0,   350,   351,     0,     0,
       0,   352,     0,   353,   354,     0,   355,   356,   357,     0,
       0,   358,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   359,   360,   361,     0,   362,   363,   364,  1686,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,     0,
     375,     0,   376,   377,   378,     0,   379,     0,   380,   381,
     382,   383,   384,     0,   385,   386,   387,     0,     0,   388,
       0,     0,     0,   389,   390,   391,   392,   393,     0,     0,
     394,   395,   396,   397,   398,     0,   399,   400,     0,   401,
     402,   403,     0,     0,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,     0,   413,   414,     0,   415,   416,
     417,     0,   418,     0,     0,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,     0,   430,   431,  -517,
     898,  4292,   432,   433,   434,   435,     0,     0,     0,   436,
       0,     0,     0,   437,     0,   438,   439,   440,   441,     0,
     442,   443,   444,   445,   446,   535,     0,     0,     0,     0,
     447,   448,   449,     0,   450,   451,     0,   452,     0,     0,
     453,     0,   454,     0,   455,   456,   457,   458,   459,   460,
       0,     0,   461,   462,     0,     0,   463,   464,   465,   466,
     467,   468,     0,     0,   469,   470,   471,   472,     0,   473,
     474,     0,     0,   475,   476,   477,   478,     0,     0,   479,
     480,     0,   481,   482,   483,   484,     0,     0,     0,     0,
       0,   485,   486,     0,     0,     0,   487,   488,   489,   490,
       0,   491,   492,     0,   493,   494,     0,   495,   496,     0,
       0,   497,     0,     0,   498,     0,   499,     0,   500,   501,
    4377,     0,  4378,     0,     0,   502,     0,   503,     0,     0,
     504,     0,  4386,     0,   505,     0,   506,   507,   508,   509,
       0,     0,     0,     0,     0,     0,   510,   511,   512,     0,
     513,   514,   515,   516,     0,     0,   517,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2374,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4457,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4462,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4501,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   143,   144,     0,
     733,   146,   147,   148,   149,     0,     0,   150,   151,     0,
       0,     0,   152,     0,     0,   734,  4541,   154,   155,   156,
     157,   735,   159,     0,   160,     0,     0,   736,   161,   737,
     738,   739,   162,   740,     0,   163,   164,   165,  1920,   166,
    4558,   167,   168,     0,     0,   169,   741,   742,   170,   171,
       0,   172,   173,   743,   744,   175,     0,   176,   177,   178,
     179,   745,   181,     0,   746,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,   747,   200,     0,   748,   749,   201,
       0,     0,   202,   750,   203,   751,     0,   204,   752,   753,
       0,   205,   206,   207,   754,   755,   756,     0,     0,     0,
       0,   757,   210,   758,     0,     0,   759,   211,   212,     0,
     213,     0,     0,  4624,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,   220,     0,     0,   221,   222,   223,
       0,     0,     0,   224,     0,   225,   226,     0,   227,   228,
     229,  3580,     0,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   760,     0,   238,   239,   240,   241,   242,   761,
     762,   243,   244,     0,   245,   246,   247,   248,   249,   763,
       0,   250,   251,     0,     0,     0,   764,   253,     0,   254,
       0,   255,     0,   256,     0,   257,   765,   259,   766,     0,
     261,     0,   262,     0,   767,     0,   263,   264,     0,   265,
     768,     0,   266,   267,     0,     0,     0,   769,   269,   270,
     271,   770,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,   771,   276,   277,   772,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,     0,     0,     0,
     283,     0,   284,     0,     0,   285,   286,     0,  1921,   287,
       0,   773,   288,   289,     0,     0,     0,     0,     0,   774,
     291,     0,   292,     0,   293,     0,   294,   295,     0,     0,
     775,     0,     0,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,   316,   317,   776,
     318,   319,   320,   321,   777,   322,   323,     0,     0,     0,
       0,   324,   325,   326,   327,   778,   329,     0,     0,   779,
     331,   780,   332,     0,   333,   781,   782,   783,   784,   785,
     338,   339,   340,   341,   342,     0,   786,   343,   344,     0,
       0,   345,   346,   347,   348,   349,   787,   788,   789,   350,
     351,     0,   790,   791,   352,     0,   353,   354,     0,   355,
     356,   357,     0,     0,   358,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   359,   360,   361,   792,   362,   363,
     364,     0,   365,   366,   793,   368,   369,   370,   371,   794,
     795,   374,   796,   375,     0,   376,   377,   378,     0,   379,
       0,   380,   381,   382,   383,   384,     0,   797,   386,   387,
       0,     0,   388,     0,     0,     0,   389,   390,   391,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,   402,   403,   798,   799,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,     0,   413,   414,
       0,   415,   416,   417,     0,   800,     0,   801,   419,   420,
     421,   422,   423,   802,   803,   426,   427,   428,   429,     0,
     804,   431,     0,     0,     0,   432,   433,   434,   435,     0,
       0,     0,   436,     0,     0,     0,   437,     0,   438,   439,
     440,   441,     0,   442,   443,   444,   445,   446,     0,     0,
       0,     0,     0,   447,   448,   449,     0,   450,   451,     0,
     452,     0,     0,   453,     0,   454,     0,   455,   456,   457,
     458,   459,   460,   805,   806,   461,   462,     0,     0,   463,
     464,   807,   466,   467,   468,   808,   809,   469,   470,   471,
     472,   810,   473,   474,     0,     0,   475,   476,   477,   478,
       0,   811,   479,   480,     0,   812,   813,   814,   815,     0,
       0,     0,     0,  1922,   485,   486,     0,   816,   817,   818,
     488,   489,   490,   819,   491,   492,   820,   493,   494,     0,
     495,   496,     0,     0,   497,     0,     0,   498,     0,   499,
       0,   821,   501,     0,     0,   822,   823,   824,   502,   825,
     503,     0,     0,   504,   826,     0,   827,   505,     0,   506,
     507,   828,   829,     0,     0,     0,     0,     0,     0,   510,
     511,   512,     0,   513,   514,   515,   516,     0,     0,   830,
       0,     0,     0,   831,   832,     0,     0,     0,     0,   834,
     835,     0,     0,   836,   837,     0,     0,   838,   839,   143,
     144,     0,   733,   146,   147,   148,   149,  1498,     0,   150,
     151,     0,     0,     0,   152,     0,     0,   734,     0,   154,
     155,   156,   157,   735,   159,     0,   160,     0,     0,  1499,
     161,   737,   738,   739,   162,   740,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,   741,   742,
     170,   171,     0,   172,   173,   743,   744,   175,     0,   176,
     177,   178,   179,   745,   181,     0,   746,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,   747,   200,     0,   748,
     749,   201,     0,     0,   202,   750,   203,   751,     0,   204,
     752,   753,     0,   205,   206,   207,   754,   755,   756,     0,
       0,     0,     0,   757,   210,   758,     0,     0,  1500,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,   760,     0,   238,   239,   240,   241,
     242,   761,   762,   243,   244,     0,   245,   246,   247,   248,
     249,   763,     0,   250,   251,     0,     0,     0,   764,   253,
       0,   254,     0,   255,     0,   256,     0,   257,   765,   259,
     766,     0,   261,     0,   262,     0,   767,     0,   263,   264,
       0,   265,   768,     0,   266,   267,     0,     0,     0,   769,
     269,   270,   271,   770,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,   771,   276,   277,   772,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,   773,   288,   289,     0,     0,     0,     0,
       0,   774,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,   775,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,   316,
     317,   776,   318,   319,   320,   321,   777,   322,   323,     0,
       0,     0,     0,   324,   325,   326,   327,   778,   329,     0,
       0,   779,   331,   780,   332,     0,   333,   781,   782,   783,
     784,   785,   338,   339,   340,   341,   342,     0,   786,   343,
     344,     0,     0,   345,   346,   347,   348,   349,   787,   788,
     789,   350,   351,     0,   790,   791,   352,     0,   353,   354,
    1501,   355,   356,   357,     0,     0,   358,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   359,   360,   361,   792,
     362,   363,   364,     0,   365,   366,   793,   368,   369,   370,
     371,   794,   795,   374,   796,   375,     0,   376,   377,   378,
       0,   379,     0,   380,   381,   382,   383,   384,     0,   797,
     386,   387,     0,     0,   388,     0,     0,     0,   389,   390,
     391,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,   402,   403,   798,   799,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,     0,
     413,   414,     0,   415,   416,   417,     0,   800,     0,   801,
     419,   420,   421,   422,   423,   802,   803,   426,   427,   428,
     429,     0,   804,   431,     0,     0,     0,   432,   433,   434,
     435,     0,     0,     0,   436,     0,     0,     0,   437,     0,
     438,   439,   440,   441,     0,   442,   443,   444,   445,   446,
       0,     0,     0,     0,     0,   447,   448,   449,     0,   450,
     451,     0,   452,     0,     0,   453,     0,   454,     0,   455,
     456,   457,   458,   459,   460,   805,   806,   461,   462,     0,
       0,   463,   464,   807,   466,   467,   468,   808,   809,   469,
     470,   471,   472,   810,   473,   474,     0,     0,   475,   476,
     477,   478,     0,   811,   479,   480,     0,   812,   813,   814,
     815,     0,     0,     0,     0,     0,   485,   486,     0,   816,
     817,   818,   488,   489,   490,   819,   491,   492,   820,   493,
     494,     0,   495,   496,     0,     0,   497,     0,     0,   498,
       0,   499,     0,   821,   501,     0,     0,   822,   823,   824,
     502,   825,   503,     0,     0,   504,   826,     0,   827,   505,
       0,   506,   507,   828,   829,     0,     0,     0,     0,     0,
       0,   510,   511,   512,     0,   513,   514,   515,   516,     0,
       0,   830,     0,     0,     0,   831,   832,     0,     0,     0,
       0,   834,   835,     0,     0,   836,   837,     0,     0,   838,
     839,   143,   144,     0,   733,   146,   147,   148,   149,     0,
       0,   150,   151,     0,     0,     0,   152,     0,     0,   734,
       0,   154,   155,   156,   157,   735,   159,     0,   160,     0,
       0,   736,   161,   737,   738,   739,   162,   740,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
     741,   742,   170,   171,     0,   172,   173,   743,   744,   175,
       0,   176,   177,   178,   179,   745,   181,     0,   746,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   747,   200,
       0,   748,   749,   201,     0,     0,   202,   750,   203,   751,
       0,   204,   752,   753,     0,   205,   206,   207,   754,   755,
     756,     0,     0,     0,     0,   757,   210,   758,     0,     0,
     759,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   760,     0,   238,   239,
     240,   241,   242,   761,   762,   243,   244,     0,   245,   246,
     247,   248,   249,   763,     0,   250,   251,     0,     0,     0,
     764,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     765,   259,   766,     0,   261,     0,   262,     0,   767,     0,
     263,   264,     0,   265,   768,     0,   266,   267,     0,     0,
       0,   769,   269,   270,   271,   770,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,   771,   276,   277,   772,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,   773,   288,   289,     0,     0,
       0,     0,     0,   774,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,   775,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,   316,   317,   776,   318,   319,   320,   321,   777,   322,
     323,     0,     0,     0,     0,   324,   325,   326,   327,   778,
     329,     0,     0,   779,   331,   780,   332,     0,   333,   781,
     782,   783,   784,   785,   338,   339,   340,   341,   342,     0,
     786,   343,   344,     0,     0,   345,   346,   347,   348,   349,
     787,   788,   789,   350,   351,     0,   790,   791,   352,     0,
     353,   354,     0,   355,   356,   357,     0,     0,   358,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   359,   360,
     361,   792,   362,   363,   364,     0,   365,   366,   793,   368,
     369,   370,   371,   794,   795,   374,   796,   375,     0,   376,
     377,   378,     0,   379,     0,   380,   381,   382,   383,   384,
       0,   797,   386,   387,     0,     0,   388,     0,     0,     0,
     389,   390,   391,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,   402,   403,   798,
     799,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,     0,   413,   414,     0,   415,   416,   417,     0,   800,
       0,   801,   419,   420,   421,   422,   423,   802,   803,   426,
     427,   428,   429,     0,   804,   431,     0,     0,     0,   432,
     433,   434,   435,     0,     0,     0,   436,     0,     0,     0,
     437,     0,   438,   439,   440,   441,     0,   442,   443,   444,
     445,   446,     0,     0,     0,     0,     0,   447,   448,   449,
       0,   450,   451,     0,   452,     0,     0,   453,     0,   454,
       0,   455,   456,   457,   458,   459,   460,   805,   806,   461,
     462,     0,     0,   463,   464,   807,   466,   467,   468,   808,
     809,   469,   470,   471,   472,   810,   473,   474,     0,     0,
     475,   476,   477,   478,     0,   811,   479,   480,     0,   812,
     813,   814,   815,     0,     0,     0,     0,     0,   485,   486,
       0,   816,   817,   818,   488,   489,   490,   819,   491,   492,
     820,   493,   494,     0,   495,   496,     0,     0,   497,     0,
       0,   498,     0,   499,     0,   821,   501,     0,     0,   822,
     823,   824,   502,   825,   503,     0,     0,   504,   826,     0,
     827,   505,     0,   506,   507,   828,   829,     0,     0,     0,
       0,     0,     0,   510,   511,   512,     0,   513,   514,   515,
     516,     0,     0,   830,     0,     0,     0,   831,   832,   833,
       0,     0,     0,   834,   835,     0,     0,   836,   837,     0,
       0,   838,   839,   143,   144,     0,   733,   146,   147,   148,
     149,     0,     0,   150,   151,     0,     0,     0,   152,     0,
       0,   734,     0,   154,   155,   156,   157,   735,   159,     0,
     160,     0,     0,   736,   161,   737,   738,   739,   162,   740,
       0,   163,   164,   165,     0,   166,     0,   167,   168,     0,
       0,   169,   741,   742,   170,   171,     0,   172,   173,   743,
     744,   175,     0,   176,   177,   178,   179,   745,   181,     0,
     746,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,   195,     0,   196,   197,   198,
     747,   200,     0,   748,   749,   201,     0,     0,   202,   750,
     203,   751,     0,   204,   752,   753,     0,   205,   206,   207,
     754,   755,   756,     0,     0,     0,     0,   757,   210,   758,
       0,     0,   759,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
     220,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,   237,   760,     0,
     238,   239,   240,   241,   242,   761,   762,   243,   244,     0,
     245,   246,   247,   248,   249,   763,     0,   250,   251,     0,
       0,     0,   764,   253,     0,   254,     0,   255,     0,   256,
       0,   257,   765,   259,   766,     0,   261,     0,   262,     0,
     767,     0,   263,   264,     0,   265,   768,     0,   266,   267,
       0,     0,     0,   769,   269,   270,   271,   770,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,   771,   276,
     277,   772,     0,     0,   278,     0,     0,     0,   279,   280,
       0,   281,   282,     0,     0,     0,   283,     0,   284,     0,
       0,   285,   286,     0,     0,   287,     0,   773,   288,   289,
       0,     0,     0,     0,     0,   774,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,   775,     0,     0,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,   316,   317,   776,   318,   319,   320,   321,
     777,   322,   323,     0,     0,     0,     0,   324,   325,   326,
     327,   778,   329,     0,     0,   779,   331,   780,   332,     0,
     333,   781,   782,   783,   784,   785,   338,   339,   340,   341,
     342,     0,   786,   343,   344,     0,     0,   345,   346,   347,
     348,   349,   787,   788,   789,   350,   351,     0,   790,   791,
     352,     0,   353,   354,     0,   355,   356,   357,     0,     0,
     358,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     359,   360,   361,   792,   362,   363,   364,     0,   365,   366,
     793,   368,   369,   370,   371,   794,   795,   374,   796,   375,
       0,   376,   377,   378,     0,   379,     0,   380,   381,   382,
     383,   384,     0,   797,   386,   387,     0,     0,   388,     0,
       0,     0,   389,   390,   391,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,   399,   400,     0,   401,   402,
     403,   798,   799,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,     0,   413,   414,     0,   415,   416,   417,
       0,   800,     0,   801,   419,   420,   421,   422,   423,   802,
     803,   426,   427,   428,   429,     0,   804,   431,     0,     0,
       0,   432,   433,   434,   435,     0,     0,     0,   436,     0,
       0,     0,   437,     0,   438,   439,   440,   441,     0,   442,
     443,   444,   445,   446,     0,     0,     0,     0,     0,   447,
     448,   449,     0,   450,   451,     0,   452,     0,     0,   453,
       0,   454,     0,   455,   456,   457,   458,   459,   460,   805,
     806,   461,   462,     0,     0,   463,   464,   807,   466,   467,
     468,   808,   809,   469,   470,   471,   472,   810,   473,   474,
       0,     0,   475,   476,   477,   478,     0,   811,   479,   480,
       0,   812,   813,   814,   815,     0,     0,     0,     0,     0,
     485,   486,     0,   816,   817,   818,   488,   489,   490,   819,
     491,   492,   820,   493,   494,     0,   495,   496,     0,     0,
     497,     0,     0,   498,     0,   499,     0,   821,   501,     0,
       0,   822,   823,   824,   502,   825,   503,     0,     0,   504,
     826,     0,   827,   505,     0,   506,   507,   828,   829,     0,
       0,     0,     0,     0,     0,   510,   511,   512,     0,   513,
     514,   515,   516,     0,     0,   830,     0,     0,     0,   831,
     832,  2495,     0,     0,     0,   834,   835,     0,     0,   836,
     837,     0,     0,   838,   839,   143,   144,     0,   733,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   734,     0,   154,   155,   156,   157,   735,
     159,     0,   160,     0,     0,   736,   161,   737,   738,   739,
     162,   740,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,   741,   742,   170,   171,     0,   172,
     173,   743,   744,   175,     0,   176,   177,   178,   179,   745,
     181,     0,   746,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   747,   200,     0,   748,   749,   201,     0,     0,
     202,   750,   203,   751,     0,   204,   752,   753,     0,   205,
     206,   207,   754,   755,   756,     0,     0,     0,     0,   757,
     210,   758,     0,     0,   759,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
     760,     0,   238,   239,   240,   241,   242,   761,   762,   243,
     244,     0,   245,   246,   247,   248,   249,   763,     0,   250,
     251,     0,     0,     0,   764,   253,  2553,   254,     0,   255,
       0,   256,     0,   257,   765,   259,   766,     0,   261,     0,
     262,     0,   767,     0,   263,   264,     0,   265,   768,     0,
     266,   267,     0,     0,     0,   769,   269,   270,   271,   770,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
     771,   276,   277,   772,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,   773,
     288,   289,     0,     0,     0,     0,     0,   774,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,   775,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,   776,   318,   319,
     320,   321,   777,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   778,   329,     0,     0,   779,   331,   780,
     332,     0,   333,   781,   782,   783,   784,   785,   338,   339,
     340,   341,   342,     0,   786,   343,   344,     0,     0,   345,
     346,   347,   348,   349,   787,   788,   789,   350,   351,     0,
     790,   791,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,   792,   362,   363,   364,     0,
     365,   366,   793,   368,   369,   370,   371,   794,   795,   374,
     796,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   797,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,   798,   799,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   800,     0,   801,   419,   420,   421,   422,
     423,   802,   803,   426,   427,   428,   429,     0,   804,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,   805,   806,   461,   462,     0,     0,   463,   464,   807,
     466,   467,   468,   808,   809,   469,   470,   471,   472,   810,
     473,   474,     0,     0,   475,   476,   477,   478,     0,   811,
     479,   480,     0,   812,   813,   814,   815,     0,     0,     0,
       0,     0,   485,   486,     0,   816,   817,   818,   488,   489,
     490,   819,   491,   492,   820,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   821,
     501,     0,     0,   822,   823,   824,   502,   825,   503,     0,
       0,   504,   826,     0,   827,   505,     0,   506,   507,   828,
     829,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,     0,     0,   830,     0,     0,
       0,   831,   832,     0,     0,     0,     0,   834,   835,     0,
       0,   836,   837,     0,     0,   838,   839,   143,   144,     0,
     733,   146,   147,   148,   149,     0,     0,   150,   151,     0,
       0,     0,   152,     0,     0,   734,     0,   154,   155,   156,
     157,   735,   159,     0,   160,     0,     0,   736,   161,   737,
     738,   739,   162,   740,     0,   163,   164,   165,     0,   166,
       0,   167,   168,     0,     0,   169,   741,   742,   170,   171,
       0,   172,   173,   743,   744,   175,     0,   176,   177,   178,
     179,   745,   181,     0,   746,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,   747,   200,     0,   748,   749,   201,
       0,     0,   202,   750,   203,   751,     0,   204,   752,   753,
       0,   205,   206,   207,   754,   755,   756,     0,     0,     0,
       0,   757,   210,   758,     0,     0,   759,   211,   212,     0,
     213,     0,     0,     0,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,   220,     0,     0,   221,   222,   223,
       0,     0,     0,   224,     0,   225,   226,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   760,     0,   238,   239,   240,   241,   242,   761,
     762,   243,   244,     0,   245,   246,   247,   248,   249,   763,
       0,   250,   251,     0,     0,     0,   764,   253,  2555,   254,
       0,   255,     0,   256,     0,   257,   765,   259,   766,     0,
     261,     0,   262,     0,   767,     0,   263,   264,     0,   265,
     768,     0,   266,   267,     0,     0,     0,   769,   269,   270,
     271,   770,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,   771,   276,   277,   772,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,     0,     0,     0,
     283,     0,   284,     0,     0,   285,   286,     0,     0,   287,
       0,   773,   288,   289,     0,     0,     0,     0,     0,   774,
     291,     0,   292,     0,   293,     0,   294,   295,     0,     0,
     775,     0,     0,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,   316,   317,   776,
     318,   319,   320,   321,   777,   322,   323,     0,     0,     0,
       0,   324,   325,   326,   327,   778,   329,     0,     0,   779,
     331,   780,   332,     0,   333,   781,   782,   783,   784,   785,
     338,   339,   340,   341,   342,     0,   786,   343,   344,     0,
       0,   345,   346,   347,   348,   349,   787,   788,   789,   350,
     351,     0,   790,   791,   352,     0,   353,   354,     0,   355,
     356,   357,     0,     0,   358,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   359,   360,   361,   792,   362,   363,
     364,     0,   365,   366,   793,   368,   369,   370,   371,   794,
     795,   374,   796,   375,     0,   376,   377,   378,     0,   379,
       0,   380,   381,   382,   383,   384,     0,   797,   386,   387,
       0,     0,   388,     0,     0,     0,   389,   390,   391,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,   402,   403,   798,   799,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,     0,   413,   414,
       0,   415,   416,   417,     0,   800,     0,   801,   419,   420,
     421,   422,   423,   802,   803,   426,   427,   428,   429,     0,
     804,   431,     0,     0,     0,   432,   433,   434,   435,     0,
       0,     0,   436,     0,     0,     0,   437,     0,   438,   439,
     440,   441,     0,   442,   443,   444,   445,   446,     0,     0,
       0,     0,     0,   447,   448,   449,     0,   450,   451,     0,
     452,     0,     0,   453,     0,   454,     0,   455,   456,   457,
     458,   459,   460,   805,   806,   461,   462,     0,     0,   463,
     464,   807,   466,   467,   468,   808,   809,   469,   470,   471,
     472,   810,   473,   474,     0,     0,   475,   476,   477,   478,
       0,   811,   479,   480,     0,   812,   813,   814,   815,     0,
       0,     0,     0,     0,   485,   486,     0,   816,   817,   818,
     488,   489,   490,   819,   491,   492,   820,   493,   494,     0,
     495,   496,     0,     0,   497,     0,     0,   498,     0,   499,
       0,   821,   501,     0,     0,   822,   823,   824,   502,   825,
     503,     0,     0,   504,   826,     0,   827,   505,     0,   506,
     507,   828,   829,     0,     0,     0,     0,     0,     0,   510,
     511,   512,     0,   513,   514,   515,   516,     0,     0,   830,
       0,     0,     0,   831,   832,     0,     0,     0,     0,   834,
     835,     0,     0,   836,   837,     0,     0,   838,   839,   143,
     144,     0,   733,   146,   147,   148,   149,     0,     0,   150,
     151,     0,     0,     0,   152,     0,     0,   734,     0,   154,
     155,   156,   157,   735,   159,     0,   160,     0,     0,   736,
     161,   737,   738,   739,   162,   740,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,   741,   742,
     170,   171,     0,   172,   173,   743,   744,   175,     0,   176,
     177,   178,   179,   745,   181,     0,   746,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,   747,   200,     0,   748,
     749,   201,     0,     0,   202,   750,   203,   751,     0,   204,
     752,   753,     0,   205,   206,   207,   754,   755,   756,     0,
       0,     0,     0,   757,   210,   758,     0,     0,   759,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,   760,     0,   238,   239,   240,   241,
     242,   761,   762,   243,   244,     0,   245,   246,   247,   248,
     249,   763,     0,   250,   251,     0,     0,     0,   764,   253,
    2557,   254,     0,   255,     0,   256,     0,   257,   765,   259,
     766,     0,   261,     0,   262,     0,   767,     0,   263,   264,
       0,   265,   768,     0,   266,   267,     0,     0,     0,   769,
     269,   270,   271,   770,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,   771,   276,   277,   772,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,   773,   288,   289,     0,     0,     0,     0,
       0,   774,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,   775,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,   316,
     317,   776,   318,   319,   320,   321,   777,   322,   323,     0,
       0,     0,     0,   324,   325,   326,   327,   778,   329,     0,
       0,   779,   331,   780,   332,     0,   333,   781,   782,   783,
     784,   785,   338,   339,   340,   341,   342,     0,   786,   343,
     344,     0,     0,   345,   346,   347,   348,   349,   787,   788,
     789,   350,   351,     0,   790,   791,   352,     0,   353,   354,
       0,   355,   356,   357,     0,     0,   358,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   359,   360,   361,   792,
     362,   363,   364,     0,   365,   366,   793,   368,   369,   370,
     371,   794,   795,   374,   796,   375,     0,   376,   377,   378,
       0,   379,     0,   380,   381,   382,   383,   384,     0,   797,
     386,   387,     0,     0,   388,     0,     0,     0,   389,   390,
     391,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,   402,   403,   798,   799,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,     0,
     413,   414,     0,   415,   416,   417,     0,   800,     0,   801,
     419,   420,   421,   422,   423,   802,   803,   426,   427,   428,
     429,     0,   804,   431,     0,     0,     0,   432,   433,   434,
     435,     0,     0,     0,   436,     0,     0,     0,   437,     0,
     438,   439,   440,   441,     0,   442,   443,   444,   445,   446,
       0,     0,     0,     0,     0,   447,   448,   449,     0,   450,
     451,     0,   452,     0,     0,   453,     0,   454,     0,   455,
     456,   457,   458,   459,   460,   805,   806,   461,   462,     0,
       0,   463,   464,   807,   466,   467,   468,   808,   809,   469,
     470,   471,   472,   810,   473,   474,     0,     0,   475,   476,
     477,   478,     0,   811,   479,   480,     0,   812,   813,   814,
     815,     0,     0,     0,     0,     0,   485,   486,     0,   816,
     817,   818,   488,   489,   490,   819,   491,   492,   820,   493,
     494,     0,   495,   496,     0,     0,   497,     0,     0,   498,
       0,   499,     0,   821,   501,     0,     0,   822,   823,   824,
     502,   825,   503,     0,     0,   504,   826,     0,   827,   505,
       0,   506,   507,   828,   829,     0,     0,     0,     0,     0,
       0,   510,   511,   512,     0,   513,   514,   515,   516,     0,
       0,   830,     0,     0,     0,   831,   832,     0,     0,     0,
       0,   834,   835,     0,     0,   836,   837,     0,     0,   838,
     839,   143,   144,     0,   733,   146,   147,   148,   149,     0,
       0,   150,   151,     0,     0,     0,   152,     0,     0,   734,
       0,   154,   155,   156,   157,   735,   159,     0,   160,     0,
       0,   736,   161,   737,   738,   739,   162,   740,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
     741,   742,   170,   171,     0,   172,   173,   743,   744,   175,
       0,   176,   177,   178,   179,   745,   181,     0,   746,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   747,   200,
       0,   748,   749,   201,     0,     0,   202,   750,   203,   751,
       0,   204,   752,   753,     0,   205,   206,   207,   754,   755,
     756,     0,     0,     0,     0,   757,   210,   758,     0,     0,
     759,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   760,     0,   238,   239,
     240,   241,   242,   761,   762,   243,   244,     0,   245,   246,
     247,   248,   249,   763,     0,   250,   251,     0,     0,     0,
     764,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     765,   259,   766,     0,   261,     0,   262,     0,   767,     0,
     263,   264,     0,   265,   768,     0,   266,   267,     0,     0,
       0,   769,   269,   270,   271,   770,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,   771,   276,   277,   772,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,   773,   288,   289,     0,     0,
       0,     0,     0,   774,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,   775,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,   316,   317,   776,   318,   319,   320,   321,   777,   322,
     323,     0,     0,     0,     0,   324,   325,   326,   327,   778,
     329,     0,     0,   779,   331,   780,   332,     0,   333,   781,
     782,   783,   784,   785,   338,   339,   340,   341,   342,     0,
     786,   343,   344,     0,     0,   345,   346,   347,   348,   349,
     787,   788,   789,   350,   351,     0,   790,   791,   352,     0,
     353,   354,     0,   355,   356,   357,     0,     0,   358,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   359,   360,
     361,   792,   362,   363,   364,     0,   365,   366,   793,   368,
     369,   370,   371,   794,   795,   374,   796,   375,     0,   376,
     377,   378,     0,   379,     0,   380,   381,   382,   383,   384,
       0,   797,   386,   387,     0,     0,   388,     0,     0,     0,
     389,   390,   391,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,   402,   403,   798,
     799,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,     0,   413,   414,     0,   415,   416,   417,     0,   800,
       0,   801,   419,   420,   421,   422,   423,   802,   803,   426,
     427,   428,   429,     0,   804,   431,     0,     0,     0,   432,
     433,   434,   435,     0,     0,     0,   436,     0,     0,     0,
     437,     0,   438,   439,   440,   441,     0,   442,   443,   444,
     445,   446,     0,     0,     0,     0,     0,   447,   448,   449,
       0,   450,   451,     0,   452,     0,     0,   453,     0,   454,
       0,   455,   456,   457,   458,   459,   460,   805,   806,   461,
     462,     0,     0,   463,   464,   807,   466,   467,   468,   808,
     809,   469,   470,   471,   472,   810,   473,   474,     0,     0,
     475,   476,   477,   478,     0,   811,   479,   480,     0,   812,
     813,   814,   815,     0,     0,     0,     0,     0,   485,   486,
       0,   816,   817,   818,   488,   489,   490,   819,   491,   492,
     820,   493,   494,     0,   495,   496,     0,     0,   497,     0,
       0,   498,     0,   499,     0,   821,   501,     0,     0,   822,
     823,   824,   502,   825,   503,     0,     0,   504,   826,     0,
     827,   505,     0,   506,   507,   828,   829,     0,     0,     0,
       0,     0,     0,   510,   511,   512,     0,   513,   514,   515,
     516,     0,     0,   830,     0,     0,     0,   831,   832,     0,
       0,     0,     0,   834,   835,     0,     0,   836,   837,     0,
       0,   838,   839,   143,   144,     0,   733,   146,   147,   148,
     149,     0,     0,   150,   151,     0,     0,     0,   152,     0,
       0,   734,     0,   154,   155,   156,   157,   735,   159,     0,
     160,     0,     0,   736,   161,   737,   738,   739,   162,   740,
       0,   163,   164,   165,     0,   166,     0,   167,   168,     0,
       0,   169,   741,   742,   170,   171,     0,   172,   173,   743,
     744,   175,     0,   176,   177,   178,   179,   745,   181,     0,
     746,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,   195,     0,   196,   197,   198,
     747,   200,     0,   748,   749,   201,     0,     0,   202,   750,
     203,   751,     0,   204,   752,   753,     0,   205,   206,   207,
     754,   755,   756,     0,     0,     0,     0,   757,   210,   758,
       0,     0,   759,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
     220,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,   237,   760,     0,
     238,   239,   240,   241,   242,   761,   762,   243,   244,     0,
     245,   246,   247,   248,   249,   763,     0,   250,   251,     0,
       0,     0,   764,   253,     0,   254,     0,   255,     0,   256,
       0,   257,   765,   259,   766,     0,   261,     0,   262,     0,
     767,     0,   263,   264,     0,   265,   768,     0,   266,   267,
       0,     0,     0,   769,   269,   270,   271,   770,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,   771,   276,
     277,   772,     0,     0,   278,     0,     0,     0,   279,   280,
       0,   281,   282,     0,     0,     0,   283,     0,   284,     0,
       0,   285,   286,     0,     0,   287,     0,   773,   288,   289,
       0,     0,     0,     0,     0,   774,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,   775,     0,     0,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,   316,   317,   776,   318,   319,   320,   321,
     777,   322,   323,     0,     0,     0,     0,   324,   325,   326,
     327,   778,   329,     0,     0,   779,   331,   780,   332,     0,
     333,   781,   782,   783,   784,   785,   338,   339,   340,   341,
     342,     0,   786,   343,   344,     0,     0,   345,   346,   347,
     348,   349,   787,   788,   789,   350,   351,     0,   790,   791,
     352,     0,   353,   354,     0,   355,   356,   357,     0,     0,
     358,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     359,   360,   361,   792,   362,   363,   364,     0,   365,   366,
     793,   368,   369,   370,   371,   794,   795,   374,   796,   375,
       0,   376,   377,   378,     0,   379,     0,   380,   381,   382,
     383,   384,     0,   797,   386,   387,     0,     0,   388,     0,
       0,     0,   389,   390,   391,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,   399,   400,     0,   401,   402,
     403,   798,   799,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,     0,   413,   414,     0,   415,   416,   417,
       0,   800,     0,   801,   419,   420,   421,   422,   423,   802,
     803,   426,   427,   428,   429,     0,   804,   431,     0,     0,
       0,   432,   433,   434,   435,     0,     0,     0,   436,     0,
       0,     0,   437,     0,   438,   439,   440,   441,     0,   442,
     443,   444,   445,   446,     0,     0,     0,     0,     0,   447,
     448,   449,     0,   450,   451,     0,   452,     0,     0,   453,
       0,   454,     0,   455,   456,   457,   458,   459,   460,   805,
     806,   461,   462,     0,     0,   463,   464,   807,   466,   467,
     468,   808,   809,   469,   470,   471,   472,   810,   473,   474,
       0,     0,   475,   476,   477,   478,     0,   811,   479,   480,
       0,   812,   813,   814,   815,     0,     0,     0,     0,     0,
     485,   486,     0,   816,   817,   818,   488,   489,   490,   819,
     491,   492,   820,   493,   494,     0,   495,   496,     0,     0,
     497,     0,     0,   498,     0,   499,     0,   821,   501,     0,
       0,   822,   823,   824,   502,   825,   503,     0,     0,   504,
     826,     0,   827,   505,     0,   506,   507,   828,   829,     0,
       0,     0,     0,     0,     0,   510,   511,   512,     0,   513,
     514,   515,   516,     0,     0,   830,     0,     0,     0,   831,
     832,     0,     0,     0,     0,   834,  1200,     0,     0,   836,
     837,     0,     0,   838,   839,   143,   144,     0,   733,   146,
     147,   148,   149,  1956,     0,   150,   151,     0,     0,     0,
    1957,     0,     0,   734,     0,   154,   155,   156,   157,   735,
     159,     0,   160,     0,     0,   736,   161,   737,   738,   739,
     162,   740,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,   741,   742,   170,   171,     0,   172,
     173,   743,   744,   175,     0,   176,   177,   178,   179,   745,
     181,     0,   746,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   747,   200,     0,   748,   749,   201,     0,     0,
     202,   750,   203,   751,     0,   204,   752,   753,     0,   205,
     206,   207,   754,   755,   756,     0,     0,     0,     0,   757,
     210,   758,     0,     0,   759,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
     760,     0,   238,   239,   240,   241,   242,   761,   762,   243,
     244,     0,   245,   246,   247,   248,   249,   763,     0,   250,
     251,     0,     0,     0,   764,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   765,   259,   766,     0,   261,     0,
     262,     0,   767,     0,   263,   264,     0,   265,   768,     0,
     266,   267,     0,     0,     0,   769,   269,   270,   271,   770,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
     771,   276,   277,   772,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,   773,
     288,   289,     0,     0,     0,     0,     0,   774,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,   775,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,   776,   318,   319,
     320,   321,   777,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   778,   329,     0,     0,   779,   331,   780,
     332,     0,   333,   781,   782,   783,   784,   785,   338,   339,
     340,   341,   342,     0,   786,   343,   344,     0,     0,   345,
     346,   347,   348,   349,   787,     0,   789,   350,   351,     0,
     790,   791,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,   792,   362,   363,   364,     0,
     365,   366,   793,   368,   369,   370,   371,   794,   795,   374,
     796,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   797,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,   798,   799,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   800,     0,   801,   419,   420,   421,   422,
     423,   802,   803,   426,   427,   428,   429,     0,   804,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,   805,   806,   461,   462,     0,     0,   463,   464,   807,
     466,   467,   468,   808,   809,   469,   470,   471,   472,   810,
     473,   474,     0,     0,   475,   476,   477,   478,     0,   811,
     479,   480,     0,   812,   813,   814,   815,     0,     0,     0,
       0,     0,   485,   486,     0,   816,   817,   818,   488,   489,
     490,   819,   491,   492,   820,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   821,
     501,     0,     0,   822,   823,   824,   502,   825,   503,     0,
       0,   504,   826,     0,   827,   505,     0,   506,   507,   828,
     829,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,     0,     0,   830,     0,     0,
       0,   831,   832,     0,     0,     0,     0,   834,   835,     0,
       0,   836,   837,     0,     0,   838,   839,   143,   144,     0,
     733,   146,   147,   148,   149,     0,     0,   150,   151,     0,
       0,     0,   152,     0,     0,   734,     0,   154,   155,   156,
     157,   735,   159,     0,   160,     0,     0,   736,   161,   737,
     738,   739,   162,   740,     0,   163,   164,   165,     0,   166,
       0,   167,   168,     0,     0,   169,   741,   742,   170,   171,
       0,   172,   173,   743,   744,   175,     0,   176,   177,   178,
     179,   745,   181,     0,   746,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,   747,   200,     0,   748,   749,   201,
       0,     0,   202,   750,   203,   751,     0,   204,   752,   753,
       0,   205,   206,   207,   754,   755,   756,     0,     0,     0,
       0,   757,   210,   758,     0,     0,   759,   211,   212,     0,
     213,     0,     0,     0,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,   220,     0,     0,   221,   222,   223,
       0,     0,     0,   224,     0,   225,   226,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   760,     0,   238,   239,   240,   241,   242,   761,
     762,   243,   244,     0,   245,   246,   247,   248,   249,   763,
       0,   250,   251,     0,     0,     0,   764,   253,     0,   254,
       0,   255,     0,   256,     0,   257,   765,   259,   766,     0,
     261,     0,   262,     0,   767,     0,   263,   264,     0,   265,
     768,     0,   266,   267,     0,     0,     0,   769,   269,   270,
     271,   770,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,   771,   276,   277,  3031,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,     0,     0,     0,
     283,     0,   284,     0,     0,   285,   286,     0,     0,   287,
       0,   773,   288,   289,     0,     0,     0,     0,     0,   774,
     291,     0,   292,     0,   293,     0,   294,   295,     0,     0,
     775,     0,     0,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,   316,   317,   776,
     318,   319,   320,   321,   777,   322,   323,     0,     0,     0,
       0,   324,   325,   326,   327,   778,   329,     0,     0,   779,
     331,   780,   332,     0,   333,   781,   782,   783,   784,   785,
     338,   339,   340,   341,   342,     0,   786,   343,   344,     0,
       0,   345,   346,   347,   348,   349,   787,   788,   789,   350,
     351,     0,   790,   791,   352,     0,   353,   354,     0,   355,
     356,   357,     0,     0,   358,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   359,   360,   361,   792,   362,   363,
     364,     0,   365,   366,   793,   368,   369,   370,   371,   794,
     795,   374,   796,   375,     0,   376,   377,   378,     0,   379,
       0,   380,   381,   382,   383,   384,     0,   797,   386,   387,
       0,     0,   388,     0,     0,     0,   389,   390,   391,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,   402,   403,   798,   799,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,     0,   413,   414,
       0,   415,   416,   417,     0,   800,     0,   801,   419,   420,
     421,   422,   423,   802,   803,   426,   427,   428,   429,     0,
     804,   431,     0,     0,     0,   432,   433,   434,   435,     0,
       0,     0,   436,     0,     0,     0,   437,     0,   438,   439,
     440,   441,     0,   442,   443,   444,   445,   446,     0,     0,
       0,     0,     0,   447,   448,   449,     0,   450,   451,     0,
     452,     0,     0,   453,     0,   454,     0,   455,   456,   457,
     458,   459,   460,   805,   806,   461,   462,     0,     0,   463,
     464,   807,   466,   467,   468,   808,   809,   469,   470,   471,
     472,   810,   473,   474,     0,     0,   475,   476,   477,   478,
       0,   811,   479,   480,     0,   812,   813,   814,   815,     0,
       0,     0,     0,     0,   485,   486,     0,   816,   817,   818,
     488,   489,   490,   819,   491,   492,   820,   493,   494,     0,
     495,   496,     0,     0,   497,     0,     0,   498,     0,   499,
       0,   821,   501,     0,     0,   822,   823,   824,   502,   825,
     503,     0,     0,   504,   826,     0,   827,   505,     0,   506,
     507,   828,   829,     0,     0,     0,     0,     0,     0,   510,
     511,   512,     0,   513,   514,   515,   516,     0,     0,   830,
       0,     0,     0,   831,   832,     0,     0,     0,     0,   834,
     835,     0,     0,   836,   837,     0,     0,   838,   839,   143,
     144,     0,   733,   146,   147,   148,   149,     0,     0,   150,
     151,     0,     0,     0,   152,     0,     0,   734,     0,   154,
     155,   156,   157,   735,   159,     0,   160,     0,     0,   736,
     161,   737,   738,   739,   162,   740,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,   741,   742,
     170,   171,     0,   172,   173,   743,   744,   175,     0,   176,
     177,   178,   179,   745,   181,     0,   746,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,   747,   200,     0,   748,
     749,   201,     0,     0,   202,   750,   203,   751,     0,   204,
     752,   753,     0,   205,   206,   207,   754,   755,   756,     0,
       0,     0,     0,   757,   210,   758,     0,     0,   759,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,   760,     0,   238,   239,   240,   241,
     242,   761,   762,   243,   244,     0,   245,   246,   247,   248,
     249,   763,     0,   250,   251,     0,     0,     0,   764,   253,
       0,   254,     0,   255,     0,   256,     0,   257,   765,   259,
     766,     0,   261,     0,   262,     0,   767,     0,   263,   264,
       0,   265,   768,     0,   266,   267,     0,     0,     0,   769,
     269,   270,   271,   770,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,   771,   276,   277,  3078,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,   773,   288,   289,     0,     0,     0,     0,
       0,   774,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,   775,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,   316,
     317,   776,   318,   319,   320,   321,   777,   322,   323,     0,
       0,     0,     0,   324,   325,   326,   327,   778,   329,     0,
       0,   779,   331,   780,   332,     0,   333,   781,   782,   783,
     784,   785,   338,   339,   340,   341,   342,     0,   786,   343,
     344,     0,     0,   345,   346,   347,   348,   349,   787,   788,
     789,   350,   351,     0,   790,   791,   352,     0,   353,   354,
       0,   355,   356,   357,     0,     0,   358,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   359,   360,   361,   792,
     362,   363,   364,     0,   365,   366,   793,   368,   369,   370,
     371,   794,   795,   374,   796,   375,     0,   376,   377,   378,
       0,   379,     0,   380,   381,   382,   383,   384,     0,   797,
     386,   387,     0,     0,   388,     0,     0,     0,   389,   390,
     391,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,   402,   403,   798,   799,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,     0,
     413,   414,     0,   415,   416,   417,     0,   800,     0,   801,
     419,   420,   421,   422,   423,   802,   803,   426,   427,   428,
     429,     0,   804,   431,     0,     0,     0,   432,   433,   434,
     435,     0,     0,     0,   436,     0,     0,     0,   437,     0,
     438,   439,   440,   441,     0,   442,   443,   444,   445,   446,
       0,     0,     0,     0,     0,   447,   448,   449,     0,   450,
     451,     0,   452,     0,     0,   453,     0,   454,     0,   455,
     456,   457,   458,   459,   460,   805,   806,   461,   462,     0,
       0,   463,   464,   807,   466,   467,   468,   808,   809,   469,
     470,   471,   472,   810,   473,   474,     0,     0,   475,   476,
     477,   478,     0,   811,   479,   480,     0,   812,   813,   814,
     815,     0,     0,     0,     0,     0,   485,   486,     0,   816,
     817,   818,   488,   489,   490,   819,   491,   492,   820,   493,
     494,     0,   495,   496,     0,     0,   497,     0,     0,   498,
       0,   499,     0,   821,   501,     0,     0,   822,   823,   824,
     502,   825,   503,     0,     0,   504,   826,     0,   827,   505,
       0,   506,   507,   828,   829,     0,     0,     0,     0,     0,
       0,   510,   511,   512,     0,   513,   514,   515,   516,     0,
       0,   830,     0,     0,     0,   831,   832,     0,     0,     0,
       0,   834,   835,     0,     0,   836,   837,     0,     0,   838,
     839,   143,   144,     0,   733,   146,   147,   148,   149,     0,
       0,   150,   151,     0,     0,     0,   152,     0,     0,   734,
       0,   154,   155,   156,   157,   735,   159,     0,   160,     0,
       0,   736,   161,   737,   738,   739,   162,   740,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
     741,   742,   170,   171,     0,   172,   173,   743,   744,   175,
       0,   176,   177,   178,   179,   745,   181,     0,   746,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   747,   200,
       0,   748,   749,   201,     0,     0,   202,   750,   203,   751,
       0,   204,   752,   753,     0,   205,   206,   207,   754,   755,
     756,     0,     0,     0,     0,   757,   210,   758,     0,     0,
    3579,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   760,     0,   238,   239,
     240,   241,   242,   761,   762,   243,   244,     0,   245,   246,
     247,   248,   249,   763,     0,   250,   251,     0,     0,     0,
     764,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     765,   259,   766,     0,   261,     0,   262,     0,   767,     0,
     263,   264,     0,   265,   768,     0,   266,   267,     0,     0,
       0,   769,   269,   270,   271,   770,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,   771,   276,   277,   772,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,   773,   288,   289,     0,     0,
       0,     0,     0,   774,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,   775,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,   316,   317,   776,   318,   319,   320,   321,   777,   322,
     323,     0,     0,     0,     0,   324,   325,   326,   327,   778,
     329,     0,     0,   779,   331,   780,   332,     0,   333,   781,
     782,   783,   784,   785,   338,   339,   340,   341,   342,     0,
     786,   343,   344,     0,     0,   345,   346,   347,   348,   349,
     787,   788,   789,   350,   351,     0,   790,   791,   352,     0,
     353,   354,     0,   355,   356,   357,     0,     0,   358,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   359,   360,
     361,   792,   362,   363,   364,     0,   365,   366,   793,   368,
     369,   370,   371,   794,   795,   374,   796,   375,     0,   376,
     377,   378,     0,   379,     0,   380,   381,   382,   383,   384,
       0,   797,   386,   387,     0,     0,   388,     0,     0,     0,
     389,   390,   391,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,   402,   403,   798,
     799,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,     0,   413,   414,     0,   415,   416,   417,     0,   800,
       0,   801,   419,   420,   421,   422,   423,   802,   803,   426,
     427,   428,   429,     0,   804,   431,     0,     0,     0,   432,
     433,   434,   435,     0,     0,     0,   436,     0,     0,     0,
     437,     0,   438,   439,   440,   441,     0,   442,   443,   444,
     445,   446,     0,     0,     0,     0,     0,   447,   448,   449,
       0,   450,   451,     0,   452,     0,     0,   453,     0,   454,
       0,   455,   456,   457,   458,   459,   460,   805,   806,   461,
     462,     0,     0,   463,   464,   807,   466,   467,   468,   808,
     809,   469,   470,   471,   472,   810,   473,   474,     0,     0,
     475,   476,   477,   478,     0,   811,   479,   480,     0,   812,
     813,   814,   815,     0,     0,     0,     0,     0,   485,   486,
       0,   816,   817,   818,   488,   489,   490,   819,   491,   492,
     820,   493,   494,     0,   495,   496,     0,     0,   497,     0,
       0,   498,     0,   499,     0,   821,   501,     0,     0,   822,
     823,   824,   502,   825,   503,     0,     0,   504,   826,     0,
     827,   505,     0,   506,   507,   828,   829,     0,     0,     0,
       0,     0,     0,   510,   511,   512,     0,   513,   514,   515,
     516,     0,     0,   830,     0,     0,     0,   831,   832,     0,
       0,     0,     0,   834,   835,     0,     0,   836,   837,     0,
       0,   838,   839,   143,   144,     0,   733,   146,   147,   148,
     149,     0,     0,   150,   151,     0,     0,     0,   152,     0,
       0,   734,     0,   154,   155,   156,   157,   735,   159,     0,
     160,     0,     0,   736,   161,   737,   738,   739,   162,   740,
       0,   163,   164,   165,     0,   166,     0,   167,   168,     0,
       0,   169,   741,   742,   170,   171,     0,   172,   173,   743,
     744,   175,     0,   176,   177,   178,   179,   745,   181,     0,
     746,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,   195,     0,   196,   197,   198,
     747,   200,     0,   748,   749,   201,     0,     0,   202,   750,
     203,   751,     0,   204,   752,   753,     0,   205,   206,   207,
     754,   755,   756,     0,     0,     0,     0,   757,   210,   758,
       0,     0,   759,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
     220,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,   237,   760,     0,
     238,   239,   240,   241,   242,   761,   762,   243,   244,     0,
     245,   246,   247,   248,   249,   763,     0,   250,   251,     0,
       0,     0,   764,   253,     0,   254,     0,   255,     0,   256,
       0,   257,   765,   259,   766,     0,   261,     0,   262,     0,
     767,     0,   263,   264,     0,   265,   768,     0,   266,   267,
       0,     0,     0,   769,   269,   270,   271,   770,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,   771,   276,
     277,   772,     0,     0,   278,     0,     0,     0,   279,   280,
       0,   281,   282,     0,     0,     0,   283,     0,   284,     0,
       0,   285,   286,     0,     0,   287,     0,   773,   288,   289,
       0,     0,     0,     0,     0,   774,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,   775,     0,     0,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,   316,   317,   776,   318,   319,   320,   321,
     777,   322,   323,  4521,     0,     0,     0,   324,   325,   326,
     327,   778,   329,     0,     0,   779,   331,   780,   332,     0,
     333,   781,   782,   783,   784,   785,   338,   339,   340,   341,
     342,     0,   786,   343,   344,     0,     0,   345,   346,   347,
     348,   349,   787,     0,   789,   350,   351,     0,   790,   791,
     352,     0,   353,   354,     0,   355,   356,   357,     0,     0,
     358,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     359,   360,   361,   792,   362,   363,   364,     0,   365,   366,
     793,   368,   369,   370,   371,   794,   795,   374,   796,   375,
       0,   376,   377,   378,     0,   379,     0,   380,   381,   382,
     383,   384,     0,   797,   386,   387,     0,     0,   388,     0,
       0,     0,   389,   390,   391,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,   399,   400,     0,   401,   402,
     403,   798,   799,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,     0,   413,   414,     0,   415,   416,   417,
       0,   800,     0,   801,   419,   420,   421,   422,   423,   802,
     803,   426,   427,   428,   429,     0,   804,   431,     0,     0,
       0,   432,   433,   434,   435,     0,     0,     0,   436,     0,
       0,     0,   437,     0,   438,   439,   440,   441,     0,   442,
     443,   444,   445,   446,     0,     0,     0,     0,     0,   447,
     448,   449,     0,   450,   451,     0,   452,     0,     0,   453,
       0,   454,     0,   455,   456,   457,   458,   459,   460,   805,
     806,   461,   462,     0,     0,   463,   464,   807,   466,   467,
     468,   808,   809,   469,   470,   471,   472,   810,   473,   474,
       0,     0,   475,   476,   477,   478,     0,   811,   479,   480,
       0,   812,   813,   814,   815,     0,     0,     0,     0,     0,
     485,   486,     0,   816,   817,   818,   488,   489,   490,   819,
     491,   492,   820,   493,   494,     0,   495,   496,     0,     0,
     497,     0,     0,   498,     0,   499,     0,   821,   501,     0,
       0,   822,   823,   824,   502,   825,   503,     0,     0,   504,
     826,     0,   827,   505,     0,   506,   507,   828,   829,     0,
       0,     0,     0,     0,     0,   510,   511,   512,     0,   513,
     514,   515,   516,     0,     0,   830,     0,     0,     0,   831,
     832,     0,     0,     0,     0,   834,   835,     0,     0,   836,
     837,     0,     0,   838,   839,   143,   144,     0,   733,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   734,     0,   154,   155,   156,   157,   735,
     159,     0,   160,     0,     0,   736,   161,   737,   738,   739,
     162,   740,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,   741,   742,   170,   171,     0,   172,
     173,   743,   744,   175,     0,   176,   177,   178,   179,   745,
     181,     0,   746,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   747,   200,     0,   748,   749,   201,     0,     0,
     202,   750,   203,   751,     0,   204,   752,   753,     0,   205,
     206,   207,   754,   755,   756,     0,     0,     0,     0,   757,
     210,   758,     0,     0,   759,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
     760,     0,   238,   239,   240,   241,   242,   761,   762,   243,
     244,     0,   245,   246,   247,   248,   249,   763,     0,   250,
     251,     0,     0,     0,   764,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   765,   259,   766,     0,   261,     0,
     262,     0,   767,     0,   263,   264,     0,   265,   768,     0,
     266,   267,     0,     0,     0,   769,   269,   270,   271,   770,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
     771,   276,   277,   772,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,   773,
     288,   289,     0,     0,     0,     0,     0,   774,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,   775,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,   776,   318,   319,
     320,   321,   777,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   778,   329,     0,     0,   779,   331,   780,
     332,     0,   333,   781,   782,   783,   784,   785,   338,   339,
     340,   341,   342,     0,   786,   343,   344,     0,     0,   345,
     346,   347,   348,   349,   787,     0,   789,   350,   351,     0,
     790,   791,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,   792,   362,   363,   364,     0,
     365,   366,   793,   368,   369,   370,   371,   794,   795,   374,
     796,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   797,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,   798,   799,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   800,     0,   801,   419,   420,   421,   422,
     423,   802,   803,   426,   427,   428,   429,     0,   804,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,   805,   806,   461,   462,     0,     0,   463,   464,   807,
     466,   467,   468,   808,   809,   469,   470,   471,   472,   810,
     473,   474,     0,     0,   475,   476,   477,   478,     0,   811,
     479,   480,     0,   812,   813,   814,   815,     0,     0,     0,
       0,     0,   485,   486,     0,   816,   817,   818,   488,   489,
     490,   819,   491,   492,   820,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   821,
     501,     0,     0,   822,   823,   824,   502,   825,   503,     0,
       0,   504,   826,     0,   827,   505,     0,   506,   507,   828,
     829,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,     0,     0,   830,     0,     0,
       0,   831,   832,     0,     0,     0,     0,   834,   835,     0,
       0,   836,   837,     0,     0,   838,   839,   143,   144,     0,
     733,   146,   147,   148,   149,     0,     0,   150,   151,     0,
       0,     0,   152,     0,     0,   734,     0,   154,   155,   156,
     157,   735,   159,     0,   160,     0,     0,   736,   161,   737,
     738,   739,   162,   740,     0,   163,   164,   165,     0,   166,
       0,   167,   168,     0,     0,   169,   741,   742,   170,   171,
       0,   172,   173,   743,   744,   175,     0,   176,   177,   178,
     179,   745,   181,     0,   746,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,   747,   200,     0,   748,   749,   201,
       0,     0,   202,   750,   203,   751,     0,   204,   752,   753,
       0,   205,   206,   207,   754,   755,   756,     0,     0,     0,
       0,   757,   210,   758,     0,     0,   759,   211,   212,     0,
     213,     0,     0,     0,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,   220,     0,     0,   221,   222,   223,
       0,     0,     0,   224,     0,   225,   226,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   760,     0,   238,   239,   240,   241,   242,   761,
     762,   243,   244,     0,   245,   246,   247,   248,   249,   763,
       0,   250,   251,     0,     0,     0,   764,   253,     0,   254,
       0,   255,     0,   256,     0,   257,   765,   259,   766,     0,
     261,     0,   262,     0,   767,     0,   263,   264,     0,   265,
     768,     0,   266,   267,     0,     0,     0,   769,   269,   270,
     271,   770,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,   771,   276,   277,  1971,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,     0,     0,     0,
     283,     0,   284,     0,     0,   285,   286,     0,     0,   287,
       0,   773,   288,   289,     0,     0,     0,     0,     0,   774,
     291,     0,   292,     0,   293,     0,   294,   295,     0,     0,
     775,     0,     0,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,   316,   317,   776,
     318,   319,   320,   321,   777,   322,   323,     0,     0,     0,
       0,   324,   325,   326,   327,   778,   329,     0,     0,   779,
     331,   780,   332,     0,   333,   781,   782,   783,   784,   785,
     338,   339,   340,   341,   342,     0,   786,   343,   344,     0,
       0,   345,   346,   347,   348,   349,   787,     0,   789,   350,
     351,     0,   790,   791,   352,     0,   353,   354,     0,   355,
     356,   357,     0,     0,   358,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   359,   360,   361,   792,   362,   363,
     364,     0,   365,   366,   793,   368,   369,   370,   371,   794,
     795,   374,   796,   375,     0,   376,   377,   378,     0,   379,
       0,   380,   381,   382,   383,   384,     0,   797,   386,   387,
       0,     0,   388,     0,     0,     0,   389,   390,   391,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,   402,   403,   798,   799,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,     0,   413,   414,
       0,   415,   416,   417,     0,   800,     0,   801,   419,   420,
     421,   422,   423,   802,   803,   426,   427,   428,   429,     0,
     804,   431,     0,     0,     0,   432,   433,   434,   435,     0,
       0,     0,   436,     0,     0,     0,   437,     0,   438,   439,
     440,   441,     0,   442,   443,   444,   445,   446,     0,     0,
       0,     0,     0,   447,   448,   449,     0,   450,   451,     0,
     452,     0,     0,   453,     0,   454,     0,   455,   456,   457,
     458,   459,   460,   805,   806,   461,   462,     0,     0,   463,
     464,   807,   466,   467,   468,   808,   809,   469,   470,   471,
     472,   810,   473,   474,     0,     0,   475,   476,   477,   478,
       0,   811,   479,   480,     0,   812,   813,   814,   815,     0,
       0,     0,     0,     0,   485,   486,     0,   816,   817,   818,
     488,   489,   490,   819,   491,   492,   820,   493,   494,     0,
     495,   496,     0,     0,   497,     0,     0,   498,     0,   499,
       0,   821,   501,     0,     0,   822,   823,   824,   502,   825,
     503,     0,     0,   504,   826,     0,   827,   505,     0,   506,
     507,   828,   829,     0,     0,     0,     0,     0,     0,   510,
     511,   512,     0,   513,   514,   515,   516,     0,     0,   830,
       0,     0,     0,   831,   832,     0,     0,     0,     0,   834,
     835,     0,     0,   836,   837,     0,     0,   838,   839,   143,
     144,     0,   733,   146,   147,   148,   149,     0,     0,   150,
     151,     0,     0,     0,   152,     0,     0,   734,     0,   154,
     155,   156,   157,   735,   159,     0,   160,     0,     0,   736,
     161,   737,   738,   739,   162,   740,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,   741,   742,
     170,   171,     0,   172,   173,   743,   744,   175,     0,   176,
     177,   178,   179,   745,   181,     0,   746,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,   747,   200,     0,   748,
     749,   201,     0,     0,   202,   750,   203,   751,     0,   204,
     752,   753,     0,   205,   206,   207,   754,   755,   756,     0,
       0,     0,     0,   757,   210,   758,     0,     0,   759,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,   760,     0,   238,   239,   240,   241,
     242,   761,   762,   243,   244,     0,   245,   246,   247,   248,
     249,   763,     0,   250,   251,     0,     0,     0,   764,   253,
       0,   254,     0,   255,     0,   256,     0,   257,   765,   259,
     766,     0,   261,     0,   262,     0,   767,     0,   263,   264,
       0,   265,   768,     0,   266,   267,     0,     0,     0,   769,
     269,   270,   271,   770,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,   771,   276,   277,  1973,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,   773,   288,   289,     0,     0,     0,     0,
       0,   774,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,   775,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,   316,
     317,   776,   318,   319,   320,   321,   777,   322,   323,     0,
       0,     0,     0,   324,   325,   326,   327,   778,   329,     0,
       0,   779,   331,   780,   332,     0,   333,   781,   782,   783,
     784,   785,   338,   339,   340,   341,   342,     0,   786,   343,
     344,     0,     0,   345,   346,   347,   348,   349,   787,     0,
     789,   350,   351,     0,   790,   791,   352,     0,   353,   354,
       0,   355,   356,   357,     0,     0,   358,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   359,   360,   361,   792,
     362,   363,   364,     0,   365,   366,   793,   368,   369,   370,
     371,   794,   795,   374,   796,   375,     0,   376,   377,   378,
       0,   379,     0,   380,   381,   382,   383,   384,     0,   797,
     386,   387,     0,     0,   388,     0,     0,     0,   389,   390,
     391,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,   402,   403,   798,   799,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,     0,
     413,   414,     0,   415,   416,   417,     0,   800,     0,   801,
     419,   420,   421,   422,   423,   802,   803,   426,   427,   428,
     429,     0,   804,   431,     0,     0,     0,   432,   433,   434,
     435,     0,     0,     0,   436,     0,     0,     0,   437,     0,
     438,   439,   440,   441,     0,   442,   443,   444,   445,   446,
       0,     0,     0,     0,     0,   447,   448,   449,     0,   450,
     451,     0,   452,     0,     0,   453,     0,   454,     0,   455,
     456,   457,   458,   459,   460,   805,   806,   461,   462,     0,
       0,   463,   464,   807,   466,   467,   468,   808,   809,   469,
     470,   471,   472,   810,   473,   474,     0,     0,   475,   476,
     477,   478,     0,   811,   479,   480,     0,   812,   813,   814,
     815,     0,     0,     0,     0,     0,   485,   486,     0,   816,
     817,   818,   488,   489,   490,   819,   491,   492,   820,   493,
     494,     0,   495,   496,     0,     0,   497,     0,     0,   498,
       0,   499,     0,   821,   501,     0,     0,   822,   823,   824,
     502,   825,   503,     0,     0,   504,   826,     0,   827,   505,
       0,   506,   507,   828,   829,     0,     0,     0,     0,     0,
       0,   510,   511,   512,     0,   513,   514,   515,   516,     0,
       0,   830,     0,     0,     0,   831,   832,     0,     0,     0,
       0,   834,   835,     0,     0,   836,   837,     0,     0,   838,
     839,   143,   144,     0,   145,   146,   147,   148,   149,     0,
       0,   150,   151,     0,     0,     0,   152,     0,     0,   153,
       0,   154,   155,   156,   157,   158,   159,     0,   160,     0,
       0,     0,   161,   737,     0,     0,   162,     0,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
       0,     0,   170,   171,     0,   172,   173,   174,     0,   175,
       0,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   199,   200,
       0,     0,     0,   201,     0,     0,   202,     0,   203,     0,
       0,   204,     0,     0,     0,   205,   206,   207,     0,     0,
    2014,     0,     0,     0,     0,   209,   210,   758,     0,     0,
       0,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,     0,   238,   239,
     240,   241,   242,     0,   762,   243,   244,     0,   245,   246,
     247,   248,   249,   763,     0,   250,   251,     0,     0,     0,
     252,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     258,   259,   260,     0,   261,     0,   262,     0,     0,     0,
     263,   264,     0,   265,   768,     0,   266,   267,     0,     0,
       0,   268,   269,   270,   271,     0,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,     0,   276,   277,     0,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,     0,   288,   289,     0,     0,
       0,     0,     0,   290,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,   775,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,   316,   317,     0,   318,   319,   320,   321,     0,   322,
     323,     0,     0,     0,     0,   324,   325,   326,   327,   328,
     329,     0,     0,   330,   331,     0,   332,     0,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,     0,
     786,   343,   344,     0,     0,   345,   346,   347,   348,   349,
       0,     0,     0,   350,   351,     0,   790,   791,   352,     0,
     353,   354,     0,   355,   356,   357,     0,     0,   358,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   359,   360,
     361,     0,   362,   363,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,     0,   375,     0,   376,
     377,   378,     0,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,     0,     0,   388,     0,     0,     0,
     389,   390,   391,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,   402,   403,     0,
       0,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,     0,   413,   414,     0,   415,   416,   417,     0,   418,
       0,     0,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,     0,   430,   431,     0,     0,     0,   432,
     433,   434,   435,     0,     0,     0,   436,     0,     0,     0,
     437,     0,   438,   439,   440,   441,     0,   442,   443,   444,
     445,   446,     0,     0,     0,     0,     0,   447,   448,   449,
       0,   450,   451,     0,   452,     0,     0,   453,     0,   454,
       0,   455,   456,   457,   458,   459,   460,     0,     0,   461,
     462,     0,     0,   463,   464,   465,   466,   467,   468,     0,
       0,   469,   470,   471,   472,     0,   473,   474,     0,     0,
     475,   476,   477,   478,     0,   811,   479,   480,     0,  2015,
     482,   483,  2016,     0,     0,     0,     0,     0,   485,   486,
       0,     0,   817,   487,   488,   489,   490,   819,   491,   492,
     820,   493,   494,     0,   495,   496,     0,     0,   497,     0,
       0,   498,     0,   499,     0,   500,   501,     0,     0,     0,
       0,     0,   502,     0,   503,     0,     0,   504,     0,     0,
       0,   505,     0,   506,   507,   508,   509,     0,     0,     0,
       0,     0,     0,   510,   511,   512,     0,   513,   514,   515,
     516,     0,     0,   517,     0,   143,   144,     0,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,   838,   839,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,  2295,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,   532,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,  1728,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,  1729,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,   535,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,     0,     0,   517,     0,   143,
     144,     0,   145,   146,   147,   148,   149,     0,     0,   150,
     151,     0,     0,     0,   152,     0,  2374,   153,     0,   154,
     155,   156,   157,   158,   159,     0,   160,     0,     0,     0,
     161,     0,     0,     0,   162,     0,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,     0,     0,
     170,   171,     0,   172,   173,   174,     0,   175,     0,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,   199,   200,     0,     0,
       0,   201,     0,     0,   202,     0,   203,     0,     0,   204,
       0,     0,     0,   205,   206,   207,     0,     0,   208,     0,
       0,     0,     0,   209,   210,     0,     0,     0,     0,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,  2107,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,     0,   238,   239,   240,   241,
     242,     0,     0,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,     0,   252,   253,
       0,   254,     0,   255,     0,   256,     0,   257,   258,   259,
     260,     0,   261,     0,   262,     0,     0,     0,   263,   264,
       0,   265,     0,     0,   266,   267,     0,     0,     0,   268,
     269,   270,   271,     0,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,     0,   276,   277,     0,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,     0,   288,   289,     0,     0,     0,     0,
       0,   290,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,     0,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,   316,
     317,     0,   318,   319,   320,   321,     0,   322,   323,     0,
       0,     0,     0,   324,   325,   326,   327,   328,   329,     0,
       0,   330,   331,     0,   332,     0,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,     0,   345,   346,   347,   348,   349,     0,     0,
       0,   350,   351,     0,     0,     0,   352,     0,   353,   354,
       0,   355,   356,   357,     0,     0,   358,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   359,   360,   361,     0,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,     0,   376,   377,   378,
       0,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,     0,     0,   388,     0,     0,     0,   389,   390,
     391,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,   402,   403,     0,     0,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,     0,
     413,   414,     0,   415,   416,   417,     0,   418,     0,     0,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,     0,   430,   431,  1568,     0,     0,   432,   433,   434,
     435,     0,     0,     0,   436,     0,     0,     0,   437,     0,
     438,   439,   440,   441,     0,   442,   443,   444,   445,   446,
       0,     0,     0,     0,     0,   447,   448,   449,     0,   450,
     451,     0,   452,     0,     0,   453,     0,   454,     0,   455,
     456,   457,   458,   459,   460,     0,     0,   461,   462,     0,
       0,   463,   464,   465,   466,   467,   468,     0,     0,   469,
     470,   471,   472,     0,   473,   474,     0,     0,   475,   476,
     477,   478,     0,     0,   479,   480,     0,   481,   482,   483,
     484,     0,     0,     0,     0,     0,   485,   486,     0,     0,
       0,   487,   488,   489,   490,     0,   491,   492,     0,   493,
     494,     0,   495,   496,     0,     0,   497,     0,     0,   498,
       0,   499,     0,   500,   501,     0,     0,     0,     0,     0,
     502,     0,   503,     0,     0,   504,     0,     0,     0,   505,
       0,   506,   507,   508,   509,     0,     0,     0,     0,     0,
       0,   510,   511,   512,     0,   513,   514,   515,   516,     0,
       0,   517,     0,   143,   144,     0,   145,   146,   147,   148,
     149,     0,  1569,   150,   151,     0,  1570,     0,   152,     0,
     573,   153,     0,   154,   155,   156,   157,   158,   159,     0,
     160,     0,     0,     0,   161,     0,     0,     0,   162,     0,
       0,   163,   164,   165,     0,   166,     0,   167,   168,     0,
       0,   169,     0,     0,   170,   171,     0,   172,   173,   174,
       0,   175,     0,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,   195,     0,   196,   197,   198,
     199,   200,     0,     0,     0,   201,     0,     0,   202,     0,
     203,     0,     0,   204,     0,     0,     0,   205,   206,   207,
       0,     0,   208,     0,     0,     0,     0,   209,   210,     0,
       0,     0,     0,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
     220,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,     0,
     238,   239,   240,   241,   242,     0,     0,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,     0,   252,   253,     0,   254,     0,   255,     0,   256,
       0,   257,   258,   259,   260,     0,   261,     0,   262,     0,
       0,     0,   263,   264,     0,   265,     0,     0,   266,   267,
       0,     0,     0,   268,   269,   270,   271,     0,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,     0,   276,
     277,     0,     0,     0,   278,     0,     0,     0,   279,   280,
       0,   281,   282,     0,     0,     0,   283,     0,   284,     0,
       0,   285,   286,     0,     0,   287,     0,     0,   288,   289,
       0,     0,     0,     0,     0,   290,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,     0,     0,     0,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,   316,   317,     0,   318,   319,   320,   321,
       0,   322,   323,     0,     0,     0,     0,   324,   325,   326,
     327,   328,   329,     0,     0,   330,   331,     0,   332,     0,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,     0,     0,   343,   344,     0,     0,   345,   346,   347,
     348,   349,     0,     0,     0,   350,   351,     0,     0,     0,
     352,     0,   353,   354,     0,   355,   356,   357,     0,     0,
     358,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     359,   360,   361,     0,   362,   363,   364,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
       0,   376,   377,   378,     0,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   386,   387,     0,     0,   388,     0,
       0,     0,   389,   390,   391,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,   399,   400,     0,   401,   402,
     403,     0,     0,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,     0,   413,   414,     0,   415,   416,   417,
       0,   418,     0,     0,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,     0,   430,   431,  1568,     0,
       0,   432,   433,   434,   435,     0,     0,     0,   436,     0,
       0,     0,   437,     0,   438,   439,   440,   441,     0,   442,
     443,   444,   445,   446,     0,     0,     0,     0,     0,   447,
     448,   449,     0,   450,   451,     0,   452,     0,     0,   453,
       0,   454,     0,   455,   456,   457,   458,   459,   460,     0,
       0,   461,   462,     0,     0,   463,   464,   465,   466,   467,
     468,     0,     0,   469,   470,   471,   472,     0,   473,   474,
       0,     0,   475,   476,   477,   478,     0,     0,   479,   480,
       0,   481,   482,   483,   484,     0,     0,     0,     0,     0,
     485,   486,     0,     0,     0,   487,   488,   489,   490,     0,
     491,   492,     0,   493,   494,     0,   495,   496,     0,     0,
     497,     0,     0,   498,     0,   499,     0,   500,   501,     0,
       0,     0,     0,     0,   502,     0,   503,     0,     0,   504,
       0,     0,     0,   505,     0,   506,   507,   508,   509,     0,
       0,     0,     0,     0,     0,   510,   511,   512,     0,   513,
     514,   515,   516,     0,     0,   517,     0,   143,   144,     0,
     145,   146,   147,   148,   149,     0,  1569,   150,   151,     0,
    1570,     0,   152,     0,   573,   153,     0,   154,   155,   156,
     157,   158,   159,     0,   160,     0,     0,     0,   161,     0,
       0,     0,   162,     0,     0,   163,   164,   165,     0,   166,
       0,   167,   168,     0,     0,   169,     0,     0,   170,   171,
       0,   172,   173,   174,     0,   175,     0,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,   199,   200,     0,     0,     0,   201,
       0,     0,   202,     0,   203,     0,     0,   204,     0,     0,
       0,   205,   206,   207,     0,     0,   208,     0,     0,     0,
       0,   209,   210,     0,     0,     0,     0,   211,   212,     0,
     213,     0,     0,     0,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,   220,     0,     0,   221,   222,   223,
       0,     0,     0,   224,     0,   225,   226,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,     0,   238,   239,   240,   241,   242,     0,
       0,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,     0,   252,   253,     0,   254,
       0,   255,     0,   256,     0,   257,   258,   259,   260,     0,
     261,     0,   262,     0,     0,     0,   263,   264,     0,   265,
       0,     0,   266,   267,     0,     0,     0,   268,   269,   270,
     271,     0,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,     0,   276,   277,     0,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,     0,     0,     0,
     283,     0,   284,     0,     0,   285,   286,     0,     0,   287,
       0,     0,   288,   289,     0,     0,     0,     0,     0,   290,
     291,     0,   292,     0,   293,     0,   294,   295,     0,     0,
       0,     0,     0,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,   316,   317,     0,
     318,   319,   320,   321,     0,   322,   323,     0,     0,     0,
       0,   324,   325,   326,   327,   328,   329,     0,     0,   330,
     331,     0,   332,     0,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,     0,
       0,   345,   346,   347,   348,   349,     0,     0,     0,   350,
     351,     0,     0,     0,   352,     0,   353,   354,     0,   355,
     356,   357,     0,     0,   358,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   359,   360,   361,     0,   362,   363,
     364,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,     0,   375,     0,   376,   377,   378,     0,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
       0,     0,   388,     0,     0,     0,   389,   390,   391,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,   402,   403,     0,     0,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,     0,   413,   414,
       0,   415,   416,   417,     0,   418,     0,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
     430,   431,  1568,     0,     0,   432,   433,   434,   435,     0,
       0,     0,   436,     0,     0,     0,   437,     0,   438,   439,
     440,   441,     0,   442,   443,   444,   445,   446,     0,     0,
       0,     0,     0,   447,   448,   449,     0,   450,   451,     0,
     452,     0,     0,   453,     0,   454,     0,   455,   456,   457,
     458,   459,   460,     0,     0,   461,   462,     0,     0,   463,
     464,   465,   466,   467,   468,     0,     0,   469,   470,   471,
     472,     0,   473,   474,     0,     0,   475,   476,   477,   478,
       0,     0,   479,   480,     0,   481,   482,   483,   484,     0,
       0,     0,     0,     0,   485,   486,     0,     0,     0,   487,
     488,   489,   490,     0,   491,   492,     0,   493,   494,     0,
     495,   496,     0,     0,   497,     0,     0,   498,     0,   499,
       0,   500,   501,     0,     0,     0,     0,     0,   502,     0,
     503,     0,     0,   504,     0,     0,     0,   505,     0,   506,
     507,   508,   509,     0,     0,     0,     0,     0,     0,   510,
     511,   512,     0,   513,   514,   515,   516,     0,     0,   517,
       0,   143,   144,     0,   145,   146,   147,   148,   149,     0,
    1569,   150,   151,     0,     0,     0,   152,     0,   573,   153,
       0,   154,   155,   156,   157,   158,   159,     0,   160,     0,
       0,     0,   161,     0,     0,     0,   162,     0,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
       0,     0,   170,   171,     0,   172,   173,   174,     0,   175,
       0,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   199,   200,
       0,     0,     0,   201,     0,     0,   202,     0,   203,     0,
       0,   204,     0,     0,     0,   205,   206,   207,     0,     0,
     208,     0,     0,     0,     0,   209,   210,     0,     0,     0,
       0,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,     0,   238,   239,
     240,   241,   242,     0,     0,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,     0,
     252,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     258,   259,   260,     0,   261,     0,   262,     0,     0,     0,
     263,   264,     0,   265,     0,     0,   266,   267,     0,     0,
       0,   268,   269,   270,   271,     0,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,     0,   276,   277,     0,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,     0,   288,   289,     0,     0,
       0,     0,     0,   290,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,     0,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,   316,   317,     0,   318,   319,   320,   321,     0,   322,
     323,     0,     0,     0,     0,   324,   325,   326,   327,   328,
     329,     0,     0,   330,   331,     0,   332,     0,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,     0,     0,   345,   346,   347,   348,   349,
       0,     0,     0,   350,   351,     0,     0,     0,   352,     0,
     353,   354,     0,   355,   356,   357,     0,     0,   358,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   359,   360,
     361,     0,   362,   363,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,     0,   375,     0,   376,
     377,   378,     0,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,     0,     0,   388,     0,     0,     0,
     389,   390,   391,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,   402,   403,     0,
       0,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,     0,   413,   414,     0,   415,   416,   417,     0,   418,
       0,     0,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,     0,   430,   431,  2693,     0,     0,   432,
     433,   434,   435,     0,     0,     0,   436,     0,     0,     0,
     437,     0,   438,   439,   440,   441,     0,   442,   443,   444,
     445,   446,     0,     0,     0,     0,     0,   447,   448,   449,
       0,   450,   451,     0,   452,     0,     0,   453,     0,   454,
       0,   455,   456,   457,   458,   459,   460,     0,     0,   461,
     462,     0,     0,   463,   464,   465,   466,   467,   468,     0,
       0,   469,   470,   471,   472,     0,   473,   474,     0,     0,
     475,   476,   477,   478,     0,     0,   479,   480,     0,   481,
     482,   483,   484,     0,     0,     0,     0,     0,   485,   486,
       0,     0,     0,   487,   488,   489,   490,     0,   491,   492,
       0,   493,   494,     0,   495,   496,     0,     0,   497,     0,
       0,   498,     0,   499,     0,   500,   501,     0,     0,     0,
       0,     0,   502,     0,   503,     0,     0,   504,     0,     0,
       0,   505,     0,   506,   507,   508,   509,     0,     0,     0,
       0,     0,     0,   510,   511,   512,     0,   513,   514,   515,
     516,     0,     0,   517,     0,     0,   143,   144,     0,   145,
     146,   147,   148,   149,     0,  3178,   150,   151,     0,     0,
       0,   152,   839,     0,   153,     0,   154,   155,   156,   157,
     158,   159,     0,   160,     0,     0,     0,   161,     0,     0,
       0,   162,     0,     0,   163,   164,   165,     0,   166,     0,
     167,   168,     0,     0,   169,     0,     0,   170,   171,     0,
     172,   173,   174,     0,   175,     0,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,   195,     0,
     196,   197,   198,   199,   200,     0,     0,     0,   201,     0,
       0,   202,     0,   203,     0,     0,   204,     0,     0,     0,
     205,   206,   207,     0,     0,   208,     0,     0,     0,     0,
     209,   210,     0,     0,     0,     0,   211,   212,     0,   213,
       0,     0,     0,   214,     0,   215,   216,   217,   218,   219,
       0,     0,     0,   220,     0,     0,   221,   222,   223,     0,
       0,     0,   224,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,   235,   236,
     237,     0,     0,   238,   239,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,     0,   252,   253,     0,   254,     0,
     255,     0,   256,     0,   257,   258,   259,   260,     0,   261,
       0,   262,     0,     0,     0,   263,   264,     0,   265,     0,
       0,   266,   267,     0,     0,     0,   268,   269,   270,   271,
       0,     0,   272,   273,   274,     0,     0,   275,     0,     0,
       0,     0,   276,   277,     0,     0,     0,   278,     0,     0,
       0,   279,   280,     0,   281,   282,     0,     0,     0,   283,
       0,   284,     0,     0,   285,   286,     0,     0,   287,     0,
       0,   288,   289,     0,     0,     0,     0,     0,   290,   291,
       0,   292,     0,   293,     0,   294,   295,     0,     0,     0,
       0,     0,     0,     0,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,   315,   316,   317,     0,   318,
     319,   320,   321,     0,   322,   323,     0,     0,     0,     0,
     324,   325,   326,   327,   328,   329,     0,     0,   330,   331,
       0,   332,     0,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,     0,     0,   343,   344,     0,     0,
     345,   346,   347,   348,   349,     0,     0,     0,   350,   351,
       0,     0,     0,   352,     0,   353,   354,     0,   355,   356,
     357,     0,     0,   358,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   359,   360,   361,     0,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,     0,   375,     0,   376,   377,   378,     0,   379,     0,
     380,   381,   382,   383,   384,     0,   385,   386,   387,     0,
       0,   388,     0,     0,     0,   389,   390,   391,   392,   393,
       0,     0,   394,   395,   396,   397,   398,     0,   399,   400,
       0,   401,   402,   403,     0,     0,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,     0,   413,   414,     0,
     415,   416,   417,     0,   418,     0,     0,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,     0,   430,
     431,     0,     0,     0,   432,   433,   434,   435,     0,     0,
       0,   436,     0,     0,     0,   437,     0,   438,   439,   440,
     441,     0,   442,   443,   444,   445,   446,     0,     0,     0,
       0,     0,   447,   448,   449,     0,   450,   451,     0,   452,
       0,     0,   453,     0,   454,     0,   455,   456,   457,   458,
     459,   460,     0,     0,   461,   462,     0,     0,   463,   464,
     465,   466,   467,   468,     0,     0,   469,   470,   471,   472,
       0,   473,   474,     0,     0,   475,   476,   477,   478,     0,
       0,   479,   480,     0,   481,   482,   483,   484,     0,     0,
       0,     0,     0,   485,   486,     0,     0,     0,   487,   488,
     489,   490,     0,   491,   492,     0,   493,   494,     0,   495,
     496,     0,     0,   497,     0,     0,   498,     0,   499,     0,
     500,   501,     0,     0,     0,     0,     0,   502,     0,   503,
       0,     0,   504,     0,     0,     0,   505,     0,   506,   507,
     508,   509,     0,     0,     0,     0,     0,     0,   510,   511,
     512,     0,   513,   514,   515,   516,     0,     0,   517,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   143,   144,
    4628,   145,   146,   147,   148,   149,  4629,   839,   150,   151,
       0,     0,     0,   152,     0,     0,   153,     0,   154,   155,
     156,   157,   158,   159,     0,   160,     0,     0,     0,   161,
       0,     0,     0,   162,     0,     0,   163,   164,   165,     0,
     166,     0,   167,   168,     0,     0,   169,     0,     0,   170,
     171,     0,   172,   173,   174,     0,   175,     0,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
     195,     0,   196,   197,   198,   199,   200,     0,     0,     0,
     201,     0,     0,   202,     0,   203,     0,     0,   204,     0,
       0,     0,   205,   206,   207,     0,     0,   208,     0,     0,
       0,     0,   209,   210,     0,     0,     0,     0,   211,   212,
       0,   213,     0,     0,     0,   214,     0,   215,   216,   217,
     218,   219,     0,     0,     0,   220,     0,     0,   221,   222,
     223,     0,     0,     0,   224,     0,   225,   226,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,     0,   238,   239,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,     0,   252,   253,     0,
     254,     0,   255,     0,   256,     0,   257,   258,   259,   260,
       0,   261,     0,   262,     0,     0,     0,   263,   264,     0,
     265,     0,     0,   266,   267,     0,     0,     0,   268,   269,
     270,   271,     0,     0,   272,   273,   274,     0,     0,   275,
       0,     0,     0,     0,   276,   277,     0,     0,     0,   278,
       0,     0,     0,   279,   280,     0,   281,   282,     0,     0,
       0,   283,     0,   284,     0,     0,   285,   286,     0,     0,
     287,     0,     0,   288,   289,     0,     0,     0,     0,     0,
     290,   291,     0,   292,     0,   293,     0,   294,   295,     0,
       0,     0,     0,     0,     0,     0,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,   315,   316,   317,
       0,   318,   319,   320,   321,     0,   322,   323,     0,     0,
       0,     0,   324,   325,   326,   327,   328,   329,     0,     0,
     330,   331,     0,   332,     0,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,     0,     0,   343,   344,
       0,     0,   345,   346,   347,   348,   349,     0,     0,     0,
     350,   351,     0,     0,     0,   352,     0,   353,   354,     0,
     355,   356,   357,     0,     0,   358,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   359,   360,   361,     0,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,     0,   376,   377,   378,     0,
     379,     0,   380,   381,   382,   383,   384,     0,   385,   386,
     387,     0,     0,   388,     0,     0,     0,   389,   390,   391,
     392,   393,     0,     0,   394,   395,   396,   397,   398,     0,
     399,   400,     0,   401,   402,   403,     0,     0,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,     0,   413,
     414,     0,   415,   416,   417,     0,   418,     0,     0,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
       0,   430,   431,     0,     0,     0,   432,   433,   434,   435,
       0,     0,     0,   436,     0,     0,     0,   437,     0,   438,
     439,   440,   441,     0,   442,   443,   444,   445,   446,     0,
       0,     0,     0,     0,   447,   448,   449,     0,   450,   451,
       0,   452,     0,     0,   453,     0,   454,     0,   455,   456,
     457,   458,   459,   460,     0,     0,   461,   462,     0,     0,
     463,   464,   465,   466,   467,   468,     0,     0,   469,   470,
     471,   472,     0,   473,   474,     0,     0,   475,   476,   477,
     478,     0,     0,   479,   480,     0,   481,   482,   483,   484,
       0,     0,     0,     0,     0,   485,   486,     0,     0,     0,
     487,   488,   489,   490,     0,   491,   492,     0,   493,   494,
       0,   495,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,   501,     0,     0,     0,     0,     0,   502,
       0,   503,     0,     0,   504,     0,     0,     0,   505,     0,
     506,   507,   508,   509,     0,     0,     0,     0,     0,     0,
     510,   511,   512,     0,   513,   514,   515,   516,     0,     0,
     517,     0,   143,   144,     0,   145,   146,   147,   148,   149,
       0,  1204,   150,   151,     0,     0,     0,   152,     0,   839,
     153,     0,   154,   155,   156,   157,   158,   159,     0,   160,
       0,     0,     0,   161,     0,     0,     0,   162,     0,     0,
     163,   164,   165,     0,   166,     0,   167,   168,     0,     0,
     169,     0,     0,   170,   171,     0,   172,   173,   174,     0,
     175,     0,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,     0,   201,     0,     0,   202,     0,   203,
       0,     0,   204,     0,     0,     0,   205,   206,   207,     0,
       0,   208,     0,     0,     0,     0,   209,   210,     0,     0,
       0,     0,   211,   212,     0,   213,     0,     0,     0,   214,
       0,   215,   216,   217,   218,   219,     0,     0,     0,   220,
       0,     0,   221,   222,   223,     0,     0,     0,   224,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,     0,   238,
     239,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
       0,   252,   253,     0,   254,     0,   255,     0,   256,     0,
     257,   258,   259,   260,     0,   261,     0,   262,     0,     0,
       0,   263,   264,     0,   265,     0,     0,   266,   267,     0,
       0,     0,   268,   269,   270,   271,     0,     0,   272,   273,
     274,     0,     0,   275,     0,     0,     0,     0,   276,   277,
       0,     0,     0,   278,     0,     0,     0,   279,   280,     0,
     281,   282,     0,     0,     0,   283,     0,   284,     0,     0,
     285,   286,     0,     0,   287,     0,     0,   288,   289,     0,
       0,     0,     0,     0,   290,   291,     0,   292,     0,   293,
       0,   294,   295,     0,     0,     0,     0,     0,     0,     0,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,   315,   316,   317,     0,   318,   319,   320,   321,     0,
     322,   323,     0,     0,     0,     0,   324,   325,   326,   327,
     328,   329,     0,     0,   330,   331,     0,   332,     0,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,     0,   343,   344,     0,     0,   345,   346,   347,   348,
     349,     0,     0,     0,   350,   351,     0,     0,     0,   352,
       0,   353,   354,     0,   355,   356,   357,     0,     0,   358,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   359,
     360,   361,     0,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,     0,
     376,   377,   378,     0,   379,     0,   380,   381,   382,   383,
     384,     0,   385,   386,   387,     0,     0,   388,     0,     0,
       0,   389,   390,   391,   392,   393,     0,     0,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,     0,   413,   414,     0,   415,   416,   417,     0,
     418,     0,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,   430,   431,     0,     0,     0,
     432,   433,   434,   435,     0,     0,     0,   436,     0,     0,
       0,   437,     0,   438,   439,   440,   441,     0,   442,   443,
     444,   445,   446,     0,     0,     0,     0,     0,   447,   448,
     449,     0,   450,   451,     0,   452,     0,     0,   453,     0,
     454,     0,   455,   456,   457,   458,   459,   460,     0,     0,
     461,   462,     0,     0,   463,   464,   465,   466,   467,   468,
       0,     0,   469,   470,   471,   472,     0,   473,   474,     0,
       0,   475,   476,   477,   478,     0,     0,   479,   480,     0,
     481,   482,   483,   484,     0,     0,     0,     0,     0,   485,
     486,     0,     0,     0,   487,   488,   489,   490,     0,   491,
     492,     0,   493,   494,     0,   495,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,     0,     0,
       0,     0,     0,   502,     0,   503,     0,     0,   504,     0,
       0,     0,   505,     0,   506,   507,   508,   509,     0,     0,
       0,     0,     0,     0,   510,   511,   512,     0,   513,   514,
     515,   516,     0,     0,   517,     0,   143,   144,     0,   145,
     146,   147,   148,   149,     0,  2373,   150,   151,     0,     0,
       0,   152,     0,  2374,   153,     0,   154,   155,   156,   157,
     158,   159,     0,   160,     0,     0,     0,   161,     0,     0,
       0,   162,     0,     0,   163,   164,   165,     0,   166,     0,
     167,   168,     0,     0,   169,     0,     0,   170,   171,     0,
     172,   173,   174,     0,   175,     0,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,   195,     0,
     196,   197,   198,   199,   200,     0,     0,     0,   201,     0,
       0,   202,     0,   203,     0,     0,   204,     0,     0,     0,
     205,   206,   207,     0,     0,   208,     0,     0,     0,     0,
     209,   210,     0,     0,     0,     0,   211,   212,     0,   213,
       0,     0,     0,   214,     0,   215,   216,   217,   218,   219,
       0,     0,     0,   220,     0,     0,   221,   222,   223,     0,
       0,     0,   224,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,   235,   236,
     237,     0,     0,   238,   239,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,     0,   252,   253,     0,   254,     0,
     255,     0,   256,     0,   257,   258,   259,   260,     0,   261,
       0,   262,     0,     0,     0,   263,   264,     0,   265,     0,
       0,   266,   267,     0,     0,     0,   268,   269,   270,   271,
       0,     0,   272,   273,   274,     0,     0,   275,     0,     0,
       0,     0,   276,   277,     0,     0,     0,   278,     0,     0,
       0,   279,   280,     0,   281,   282,     0,     0,     0,   283,
       0,   284,     0,     0,   285,   286,     0,     0,   287,     0,
       0,   288,   289,     0,     0,     0,     0,     0,   290,   291,
       0,   292,     0,   293,     0,   294,   295,     0,     0,     0,
       0,     0,     0,     0,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,   315,   316,   317,     0,   318,
     319,   320,   321,     0,   322,   323,     0,     0,     0,     0,
     324,   325,   326,   327,   328,   329,     0,     0,   330,   331,
       0,   332,     0,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,     0,     0,   343,   344,     0,     0,
     345,   346,   347,   348,   349,     0,     0,     0,   350,   351,
       0,     0,     0,   352,     0,   353,   354,     0,   355,   356,
     357,     0,     0,   358,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   359,   360,   361,     0,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,     0,   375,     0,   376,   377,   378,     0,   379,     0,
     380,   381,   382,   383,   384,     0,   385,   386,   387,     0,
       0,   388,     0,     0,     0,   389,   390,   391,   392,   393,
       0,     0,   394,   395,   396,   397,   398,     0,   399,   400,
       0,   401,   402,   403,     0,     0,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,     0,   413,   414,     0,
     415,   416,   417,     0,   418,     0,     0,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,     0,   430,
     431,     0,     0,     0,   432,   433,   434,   435,     0,     0,
       0,   436,     0,     0,     0,   437,     0,   438,   439,   440,
     441,     0,   442,   443,   444,   445,   446,     0,     0,     0,
       0,     0,   447,   448,   449,     0,   450,   451,     0,   452,
       0,     0,   453,     0,   454,     0,   455,   456,   457,   458,
     459,   460,     0,     0,   461,   462,     0,     0,   463,   464,
     465,   466,   467,   468,     0,     0,   469,   470,   471,   472,
       0,   473,   474,     0,     0,   475,   476,   477,   478,     0,
       0,   479,   480,     0,   481,   482,   483,   484,     0,     0,
       0,     0,     0,   485,   486,     0,     0,     0,   487,   488,
     489,   490,     0,   491,   492,     0,   493,   494,     0,   495,
     496,     0,     0,   497,     0,     0,   498,     0,   499,     0,
     500,   501,     0,     0,     0,     0,     0,   502,     0,   503,
       0,     0,   504,     0,     0,     0,   505,     0,   506,   507,
     508,   509,     0,     0,     0,     0,     0,     0,   510,   511,
     512,     0,   513,   514,   515,   516,     0,     0,   517,     0,
       0,     0,     0,     0,  3146,   143,   144,     0,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   573,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,     0,     0,   517,     0,   143,
     144,     0,   145,   146,   147,   148,   149,     0,     0,   150,
     151,     0,     0,     0,   152,  4629,   839,   153,     0,   154,
     155,   156,   157,   158,   159,     0,   160,     0,     0,     0,
     161,     0,     0,     0,   162,     0,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,     0,     0,
     170,   171,     0,   172,   173,   174,     0,   175,     0,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,   199,   200,     0,     0,
       0,   201,     0,     0,   202,     0,   203,     0,     0,   204,
       0,     0,     0,   205,   206,   207,     0,     0,   208,     0,
       0,     0,     0,   209,   210,     0,     0,     0,     0,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,     0,   238,   239,   240,   241,
     242,     0,     0,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,     0,   252,   253,
       0,   254,     0,   255,     0,   256,     0,   257,   258,   259,
     260,     0,   261,     0,   262,     0,     0,     0,   263,   264,
       0,   265,     0,     0,   266,   267,     0,     0,     0,   268,
     269,   270,   271,     0,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,     0,   276,   277,     0,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,     0,   288,   289,     0,     0,     0,     0,
       0,   290,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,     0,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,   316,
     317,     0,   318,   319,   320,   321,     0,   322,   323,     0,
       0,     0,     0,   324,   325,   326,   327,   328,   329,     0,
       0,   330,   331,     0,   332,     0,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,     0,   345,   346,   347,   348,   349,     0,     0,
       0,   350,   351,     0,     0,     0,   352,     0,   353,   354,
       0,   355,   356,   357,     0,     0,   358,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   359,   360,   361,     0,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,     0,   376,   377,   378,
       0,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,     0,     0,   388,     0,     0,     0,   389,   390,
     391,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,   402,   403,     0,     0,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,     0,
     413,   414,     0,   415,   416,   417,     0,   418,     0,     0,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,     0,   430,   431,     0,     0,     0,   432,   433,   434,
     435,     0,     0,     0,   436,     0,     0,     0,   437,     0,
     438,   439,   440,   441,     0,   442,   443,   444,   445,   446,
       0,     0,     0,     0,     0,   447,   448,   449,     0,   450,
     451,     0,   452,     0,     0,   453,     0,   454,     0,   455,
     456,   457,   458,   459,   460,     0,     0,   461,   462,     0,
       0,   463,   464,   465,   466,   467,   468,     0,     0,   469,
     470,   471,   472,     0,   473,   474,     0,     0,   475,   476,
     477,   478,     0,     0,   479,   480,     0,   481,   482,   483,
     484,     0,     0,     0,     0,     0,   485,   486,     0,     0,
       0,   487,   488,   489,   490,     0,   491,   492,     0,   493,
     494,     0,   495,   496,     0,     0,   497,     0,     0,   498,
       0,   499,     0,   500,   501,     0,     0,     0,     0,     0,
     502,     0,   503,     0,     0,   504,     0,     0,     0,   505,
       0,   506,   507,   508,   509,     0,     0,     0,     0,     0,
       0,   510,   511,   512,     0,   513,   514,   515,   516,     0,
       0,   517,     0,   143,   144,     0,   145,   146,   147,   148,
     149,     0,     0,   150,   151,     0,     0,     0,   152,     0,
     573,   153,     0,   154,   155,   156,   157,   158,   159,     0,
     160,     0,     0,     0,   161,     0,     0,     0,   162,     0,
       0,   163,   164,   165,     0,   166,     0,   167,   168,     0,
       0,   169,     0,     0,   170,   171,     0,   172,   173,   174,
       0,   175,     0,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,   195,     0,   196,   197,   198,
     199,   200,     0,     0,     0,   201,     0,     0,   202,     0,
     203,     0,     0,   204,     0,     0,     0,   205,   206,   207,
       0,     0,   208,     0,     0,     0,     0,   209,   210,     0,
       0,     0,     0,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
     220,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,     0,
     238,   239,   240,   673,   242,     0,     0,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,     0,   674,   253,     0,   254,     0,   255,     0,   256,
       0,   257,   258,   259,   260,     0,   261,     0,   262,     0,
       0,     0,   263,   264,     0,   265,     0,     0,   266,   267,
       0,     0,     0,   268,   269,   270,   271,     0,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,     0,   276,
     277,     0,     0,     0,   278,     0,     0,     0,   279,   280,
       0,   281,   282,     0,     0,     0,   283,     0,   284,     0,
       0,   285,   286,     0,     0,   287,     0,     0,   288,   289,
       0,     0,     0,     0,     0,   290,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,     0,     0,     0,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,   316,   317,     0,   318,   319,   320,   321,
       0,   322,   323,     0,     0,     0,     0,   324,   325,   326,
     327,   328,   329,     0,     0,   330,   331,     0,   332,     0,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,     0,     0,   343,   344,     0,     0,   345,   346,   347,
     348,   349,     0,     0,     0,   350,   351,     0,     0,     0,
     352,     0,   353,   354,     0,   355,   356,   357,     0,     0,
     358,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     359,   360,   361,     0,   362,   363,   364,     0,   675,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
       0,   376,   377,   378,     0,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   386,   387,     0,     0,   388,     0,
       0,     0,   389,   390,   391,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,   399,   400,     0,   401,   402,
     403,     0,     0,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,     0,   413,   414,     0,   415,   416,   417,
       0,   418,     0,     0,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,     0,   430,   431,     0,     0,
       0,   432,   433,   434,   435,     0,     0,     0,   436,     0,
       0,     0,   437,     0,   438,   439,   440,   441,     0,   442,
     443,   444,   445,   446,     0,     0,     0,     0,     0,   447,
     448,   449,     0,   450,   451,     0,   452,     0,     0,   453,
       0,   454,     0,   455,   456,   457,   458,   459,   460,     0,
       0,   461,   462,     0,     0,   463,   464,   465,   466,   467,
     468,     0,     0,   469,   470,   471,   472,     0,   473,   474,
       0,     0,   475,   476,   477,   478,     0,     0,   479,   480,
       0,   481,   482,   483,   484,     0,     0,     0,     0,     0,
     485,   486,     0,     0,     0,   487,   488,   489,   490,     0,
     491,   492,     0,   493,   494,     0,   495,   496,     0,     0,
     497,     0,     0,   498,     0,   499,     0,   500,   501,     0,
       0,     0,     0,     0,   502,     0,   503,     0,     0,   504,
       0,     0,     0,   505,     0,   506,   507,   508,   509,     0,
       0,     0,     0,     0,     0,   510,   511,   512,     0,   513,
     514,   515,   516,     0,     0,   517,     0,   143,   144,     0,
     145,   146,   147,   148,   149,     0,     0,   150,   151,     0,
       0,     0,   152,     0,   573,   153,     0,   154,   155,   156,
     157,   158,   159,     0,   160,     0,     0,     0,   161,     0,
       0,     0,   162,     0,     0,   163,   164,   165,     0,   166,
       0,   167,   168,     0,     0,   169,     0,     0,   170,   171,
       0,   172,   173,   174,     0,   175,     0,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,   199,   200,     0,     0,     0,   201,
       0,     0,   202,     0,   203,     0,     0,   204,     0,     0,
       0,   205,   206,   207,     0,     0,   208,     0,     0,     0,
       0,   209,   210,     0,     0,     0,     0,   211,   212,     0,
     213,     0,     0,     0,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,   220,     0,     0,   221,   222,   223,
       0,     0,     0,   224,     0,   225,   226,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,     0,   238,   239,   240,   241,   242,     0,
       0,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,     0,   252,   253,     0,   254,
       0,   255,     0,   256,     0,   257,   258,   259,   260,     0,
     261,     0,   262,     0,     0,     0,   263,   264,     0,   265,
       0,     0,   266,   267,     0,     0,     0,   268,   269,   270,
     271,     0,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,     0,   276,   277,     0,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,     0,     0,     0,
     283,     0,   284,     0,     0,   285,   286,     0,     0,   287,
       0,     0,   288,   289,     0,     0,     0,     0,     0,   290,
     291,     0,   292,     0,   293,     0,   294,   295,     0,     0,
       0,     0,     0,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,   316,   317,     0,
     318,   319,   320,   321,     0,   322,   323,     0,     0,     0,
       0,   324,   325,   326,   327,   328,   329,     0,     0,   330,
     331,     0,   332,     0,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,     0,     0,   343,   344,     0,
       0,   345,   346,   347,   348,   349,     0,     0,     0,   350,
     351,     0,     0,     0,   352,     0,   353,   354,     0,   355,
     356,   357,     0,     0,   358,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   359,   360,   361,     0,   362,   363,
     364,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,     0,   375,     0,   376,   377,   378,     0,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
       0,     0,   388,     0,     0,     0,   389,   390,   391,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,   402,   403,     0,     0,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,     0,   413,   414,
       0,   415,   416,   417,     0,   418,     0,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
     430,   431,     0,     0,     0,   432,   433,   434,   435,     0,
       0,     0,   436,     0,     0,     0,   437,     0,   438,   439,
     440,   441,     0,   442,   443,   444,   445,   446,     0,     0,
       0,     0,     0,   447,   448,   449,     0,   450,   451,     0,
     452,     0,     0,   453,     0,   454,     0,   455,   456,   457,
     458,   459,   460,     0,     0,   461,   462,     0,     0,   463,
     464,   465,   466,   467,   468,     0,     0,   469,   470,   471,
     472,     0,   473,   474,     0,     0,   475,   476,   477,   478,
       0,     0,   479,   480,     0,   481,   482,   483,   484,     0,
       0,     0,     0,     0,   485,   486,     0,     0,     0,   487,
     488,   489,   490,     0,   491,   492,     0,   493,   494,     0,
     495,   496,     0,     0,   497,     0,     0,   498,     0,   499,
       0,   500,   501,     0,     0,     0,     0,     0,   502,     0,
     503,     0,     0,   504,     0,     0,     0,   505,     0,   506,
     507,   508,   509,     0,     0,     0,     0,     0,     0,   510,
     511,   512,     0,   513,   514,   515,   516,     0,     0,   517,
       0,   143,   144,     0,   145,   146,   147,   148,   149,     0,
       0,   150,   151,     0,     0,     0,   152,     0,   839,   153,
       0,   154,   155,   156,   157,   158,   159,     0,   160,     0,
       0,     0,   161,     0,     0,     0,   162,     0,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
       0,     0,   170,   171,     0,   172,   173,   174,     0,   175,
       0,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   199,   200,
       0,     0,     0,   201,     0,     0,   202,     0,   203,     0,
       0,   204,     0,     0,     0,   205,   206,   207,     0,     0,
     208,     0,     0,     0,     0,   209,   210,     0,     0,     0,
       0,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,     0,   238,   239,
     240,   241,   242,     0,     0,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,     0,
     252,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     258,   259,   260,     0,   261,     0,   262,     0,     0,     0,
     263,   264,     0,   265,     0,     0,   266,   267,     0,     0,
       0,   268,   269,   270,   271,     0,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,     0,   276,   277,     0,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,     0,   288,   289,     0,     0,
       0,     0,     0,   290,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,     0,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,   316,   317,     0,   318,   319,   320,   321,     0,   322,
     323,     0,     0,     0,     0,   324,   325,   326,   327,   328,
     329,     0,     0,   330,   331,     0,   332,     0,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,     0,     0,   345,   346,   347,   348,   349,
       0,     0,     0,   350,   351,     0,     0,     0,   352,     0,
     353,   354,     0,   355,   356,   357,     0,     0,   358,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   359,   360,
     361,     0,   362,   363,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,     0,   375,     0,   376,
     377,   378,     0,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,     0,     0,   388,     0,     0,     0,
     389,   390,   391,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,   402,   403,     0,
       0,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,     0,   413,   414,     0,   415,   416,   417,     0,   418,
       0,     0,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,     0,   430,   431,     0,     0,     0,   432,
     433,   434,   435,     0,     0,     0,   436,     0,     0,     0,
     437,     0,   438,   439,   440,   441,     0,   442,   443,   444,
     445,   446,     0,     0,     0,     0,     0,   447,   448,   449,
       0,   450,   451,     0,   452,     0,     0,   453,     0,   454,
       0,   455,   456,   457,   458,   459,   460,     0,     0,   461,
     462,     0,     0,   463,   464,   465,   466,   467,   468,     0,
       0,   469,   470,   471,   472,     0,   473,   474,     0,     0,
     475,   476,   477,   478,     0,     0,   479,   480,     0,   481,
     482,   483,   484,     0,     0,     0,     0,     0,   485,   486,
       0,     0,     0,   487,   488,   489,   490,     0,   491,   492,
       0,   493,   494,     0,   495,   496,     0,     0,   497,     0,
       0,   498,     0,   499,     0,   500,   501,     0,     0,     0,
       0,     0,   502,     0,   503,     0,     0,   504,     0,     0,
       0,   505,     0,   506,   507,   508,   509,     0,     0,     0,
       0,     0,     0,   510,   511,   512,     0,   513,   514,   515,
     516,     0,     0,   517,     0,   143,   144,     0,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,  2374,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,  1452,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,   661,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
    1453,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,   140,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,     0,     0,   517,   143,   144,
       0,   145,   146,   147,   148,   149,     0,     0,   150,   151,
       0,     0,     0,   152,     0,  1454,   153,     0,   154,   155,
     156,   157,   158,   159,     0,   160,     0,     0,     0,   161,
       0,     0,     0,   162,     0,     0,   163,   164,   165,     0,
     166,     0,   167,   168,     0,     0,   169,     0,     0,   170,
     171,     0,   172,   173,   616,   617,   175,     0,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
     195,     0,   196,   197,   198,   199,   200,     0,     0,     0,
     201,     0,     0,   202,     0,   203,     0,     0,   204,     0,
       0,     0,   205,   206,   207,     0,     0,   208,     0,     0,
       0,     0,   209,   210,     0,     0,     0,   618,   211,   212,
       0,   213,     0,     0,     0,   214,     0,   215,   216,   217,
     218,   219,     0,     0,     0,   220,     0,     0,   221,   222,
     223,     0,     0,     0,   224,     0,   225,   226,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,     0,   238,   239,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,     0,   252,   253,     0,
     254,     0,   255,     0,   256,     0,   257,   258,   259,   260,
       0,   619,     0,   262,     0,     0,     0,   263,   264,     0,
     265,     0,     0,   266,   267,     0,     0,     0,   268,   269,
     270,   271,     0,     0,   272,   273,   274,     0,     0,   275,
       0,     0,     0,     0,   276,   277,     0,     0,     0,   278,
       0,     0,     0,   279,   280,     0,   281,   282,     0,     0,
       0,   283,     0,   284,     0,     0,   285,   286,     0,     0,
     287,     0,     0,   288,   289,     0,     0,     0,     0,     0,
     290,   291,     0,   620,     0,   293,     0,   294,   295,     0,
       0,     0,     0,     0,     0,     0,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,   315,   316,   317,
       0,   318,   319,   320,   321,     0,   322,   323,     0,     0,
       0,     0,   324,   325,   326,   327,   328,   329,     0,     0,
     330,   331,     0,   332,     0,   333,     0,   334,   335,   336,
     337,   338,   339,   621,   341,   342,     0,     0,   343,   344,
       0,     0,   345,   346,   347,   348,   349,     0,     0,     0,
     350,   351,     0,     0,     0,   352,     0,   353,   354,     0,
     355,   356,   357,     0,     0,   358,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   359,   360,   361,     0,   362,
     363,   364,     0,   365,   366,   622,   368,   369,   370,   371,
     372,   373,   374,     0,   375,     0,   376,   377,   378,     0,
     379,     0,   380,   381,   382,   383,   384,     0,   385,   386,
     387,     0,     0,   388,     0,     0,     0,   389,   390,   391,
     392,   393,     0,     0,   394,   395,   396,   397,   398,     0,
     399,   400,     0,   401,   402,   403,     0,     0,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,     0,   413,
     414,     0,   415,   416,   417,     0,   418,     0,     0,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
       0,   430,   431,     0,     0,     0,   432,   433,   623,   435,
       0,     0,     0,   436,     0,     0,     0,   437,     0,   438,
     439,   440,   441,     0,   442,   443,   444,   445,   446,     0,
       0,     0,     0,     0,   447,   448,   449,     0,   450,   451,
       0,   452,     0,     0,   453,     0,   454,     0,   455,   456,
     457,   458,   459,   460,     0,     0,   461,   462,     0,     0,
     463,   464,   465,   466,   467,   468,     0,     0,   469,   470,
     471,   472,     0,   473,   474,     0,     0,   475,   476,   477,
     478,     0,     0,   479,   480,     0,   481,   482,   483,   484,
       0,     0,     0,     0,     0,   624,   486,     0,     0,     0,
     487,   488,   489,   490,     0,   491,   492,     0,   493,   494,
       0,   495,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,   501,     0,     0,     0,     0,     0,   502,
       0,   503,     0,     0,   504,     0,     0,     0,   505,     0,
     506,   507,   508,   509,     0,     0,     0,     0,     0,     0,
     510,   511,   512,     0,   513,   514,   515,   516,     0,     0,
     517,   143,   144,     0,   145,   146,   147,   148,   149,     0,
       0,   150,   151,     0,     0,     0,   152,     0,   625,   153,
       0,   154,   155,   156,   157,   158,   159,     0,   160,     0,
       0,     0,   161,     0,     0,     0,   162,     0,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
       0,     0,   170,   171,     0,   172,   173,   174,     0,   175,
       0,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   199,   200,
       0,     0,     0,   201,     0,     0,   202,     0,   203,     0,
       0,   204,     0,     0,     0,   205,   206,   207,     0,     0,
     208,     0,     0,     0,     0,   209,   210,     0,     0,     0,
       0,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,     0,   238,   239,
     240,   241,   242,     0,     0,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,     0,
     252,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     258,   259,   260,     0,   261,     0,   262,     0,     0,     0,
     263,   264,     0,   265,     0,     0,   266,   267,     0,     0,
       0,   268,   269,   270,   271,     0,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,     0,   276,   277,     0,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,     0,   288,   289,   661,     0,
       0,     0,     0,   290,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,     0,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,   316,   317,     0,   318,   319,   320,   321,     0,   322,
     323,     0,     0,     0,     0,   324,   325,   326,   327,   328,
     329,     0,     0,   330,   331,     0,   332,     0,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,     0,
       0,   343,   344,     0,     0,   345,   346,   347,   348,   349,
       0,     0,     0,   350,   351,     0,     0,     0,   352,     0,
     353,   354,     0,   355,   356,   357,     0,     0,   358,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   359,   360,
     361,     0,   362,   363,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,     0,   375,     0,   376,
     377,   378,     0,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,     0,     0,   388,     0,     0,     0,
     389,   390,   391,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,   402,   403,     0,
       0,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,     0,   413,   414,     0,   415,   416,   417,     0,   418,
       0,     0,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,     0,   430,   431,     0,     0,     0,   432,
     433,   434,   435,     0,     0,     0,   436,     0,     0,     0,
     437,     0,   438,   439,   440,   441,     0,   442,   443,   444,
     445,   446,     0,     0,     0,     0,     0,   447,   448,   449,
       0,   450,   451,     0,   452,     0,     0,   453,     0,   454,
       0,   455,   456,   457,   458,   459,   460,     0,     0,   461,
     462,     0,     0,   463,   464,   465,   466,   467,   468,     0,
       0,   469,   470,   471,   472,     0,   473,   474,     0,     0,
     475,   476,   477,   478,     0,   140,   479,   480,     0,   481,
     482,   483,   484,     0,     0,     0,     0,     0,   485,   486,
       0,     0,     0,   487,   488,   489,   490,     0,   491,   492,
       0,   493,   494,     0,   495,   496,     0,     0,   497,     0,
       0,   498,     0,   499,     0,   500,   501,     0,     0,     0,
       0,     0,   502,     0,   503,     0,     0,   504,     0,     0,
       0,   505,     0,   506,   507,   508,   509,     0,     0,     0,
       0,     0,     0,   510,   511,   512,     0,   513,   514,   515,
     516,     0,     0,   517,   143,   144,     0,   145,   146,   147,
     148,   149,     0,     0,   150,   151,     0,     0,     0,   152,
       0,   965,   153,     0,   154,   155,   156,   157,   158,   159,
       0,   160,     0,     0,     0,   161,     0,     0,     0,   162,
       0,     0,   163,   164,   165,     0,   166,     0,   167,   168,
       0,     0,   169,     0,     0,   170,   171,     0,   172,   173,
     174,     0,   175,     0,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,   195,     0,   196,   197,
     198,   199,   200,     0,     0,     0,   201,     0,     0,   202,
       0,   203,     0,     0,   204,     0,     0,     0,   205,   206,
     207,     0,     0,   208,     0,     0,     0,     0,   209,   210,
       0,     0,     0,     0,   211,   212,     0,   213,     0,     0,
       0,   214,     0,   215,   216,   217,   218,   219,     0,     0,
       0,   220,     0,     0,   221,   222,   223,     0,     0,     0,
     224,     0,   225,   226,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,   235,   236,   237,     0,
       0,   238,   239,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,     0,   252,   253,     0,   254,     0,   255,     0,
     256,     0,   257,   258,   259,   260,     0,   261,     0,   262,
       0,     0,     0,   263,   264,     0,   265,     0,     0,   266,
     267,     0,     0,     0,   268,   269,   270,   271,     0,     0,
     272,   273,   274,     0,     0,   275,     0,     0,     0,     0,
     276,   277,     0,     0,     0,   278,     0,     0,     0,   279,
     280,     0,   281,   282,     0,     0,     0,   283,     0,   284,
       0,     0,   285,   286,     0,     0,   287,     0,     0,   288,
     289,   661,     0,     0,     0,     0,   290,   291,     0,   292,
       0,   293,     0,   294,   295,     0,     0,     0,     0,     0,
       0,     0,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,   315,   316,   317,     0,   318,   319,   320,
     321,     0,   322,   323,     0,     0,     0,     0,   324,   325,
     326,   327,   328,   329,     0,     0,   330,   331,     0,   332,
       0,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,     0,     0,   343,   344,     0,     0,   345,   346,
     347,   348,   349,     0,     0,     0,   350,   351,     0,     0,
       0,   352,     0,   353,   354,     0,   355,   356,   357,     0,
       0,   358,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   359,   360,   361,     0,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,     0,
     375,     0,   376,   377,   378,     0,   379,     0,   380,   381,
     382,   383,   384,     0,   385,   386,   387,     0,     0,   388,
       0,     0,     0,   389,   390,   391,   392,   393,     0,     0,
     394,   395,   396,   397,   398,     0,   399,   400,     0,   401,
     402,   403,     0,     0,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,     0,   413,   414,     0,   415,   416,
     417,     0,   418,     0,     0,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,     0,   430,   431,     0,
       0,     0,   432,   433,   434,   435,     0,     0,     0,   436,
       0,     0,     0,   437,     0,   438,   439,   440,   441,     0,
     442,   443,   444,   445,   446,     0,     0,     0,     0,     0,
     447,   448,   449,     0,   450,   451,     0,   452,     0,     0,
     453,     0,   454,     0,   455,   456,   457,   458,   459,   460,
       0,     0,   461,   462,     0,     0,   463,   464,   465,   466,
     467,   468,     0,     0,   469,   470,   471,   472,     0,   473,
     474,     0,     0,   475,   476,   477,   478,     0,   140,   479,
     480,     0,   481,   482,   483,   484,     0,     0,     0,     0,
       0,   485,   486,     0,     0,     0,   487,   488,   489,   490,
       0,   491,   492,     0,   493,   494,     0,   495,   496,     0,
       0,   497,     0,     0,   498,     0,   499,     0,   500,   501,
       0,     0,     0,     0,     0,   502,     0,   503,     0,     0,
     504,     0,     0,     0,   505,     0,   506,   507,   508,   509,
       0,     0,     0,     0,     0,     0,   510,   511,   512,     0,
     513,   514,   515,   516,     0,     0,   517,   143,   144,     0,
     145,   146,   147,   148,   149,     0,     0,   150,   151,     0,
       0,     0,   152,     0,  1266,   153,     0,   154,   155,   156,
     157,   158,   159,     0,   160,     0,     0,     0,   161,     0,
       0,     0,   162,     0,     0,   163,   164,   165,     0,   166,
       0,   167,   168,     0,     0,   169,     0,     0,   170,   171,
       0,   172,   173,   616,   617,   175,     0,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,   199,   200,     0,     0,     0,   201,
       0,     0,   202,     0,   203,     0,     0,   204,     0,     0,
       0,   205,   206,   207,     0,     0,   208,     0,     0,     0,
       0,   209,   210,     0,     0,     0,   618,   211,   212,     0,
     213,     0,     0,     0,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,   220,     0,     0,   221,   222,   223,
       0,     0,     0,   224,     0,   225,   226,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,     0,   238,   239,   240,   241,   242,     0,
       0,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,     0,   252,   253,     0,   254,
       0,   255,     0,   256,     0,   257,   258,   259,   260,     0,
     619,     0,   262,     0,     0,     0,   263,   264,     0,   265,
       0,     0,   266,   267,     0,     0,     0,   268,   269,   270,
     271,     0,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,     0,   276,   277,     0,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,     0,     0,     0,
     283,     0,   284,     0,     0,   285,   286,     0,     0,   287,
       0,     0,   288,   289,     0,     0,     0,     0,     0,   290,
     291,     0,   620,     0,   293,     0,   294,   295,     0,     0,
       0,     0,     0,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,   316,   317,     0,
     318,   319,   320,   321,     0,   322,   323,     0,     0,     0,
       0,   324,   325,   326,   327,   328,   329,     0,     0,   330,
     331,     0,   332,     0,   333,     0,   334,   335,   336,   337,
     338,   339,   621,   341,   342,     0,     0,   343,   344,     0,
       0,   345,   346,   347,   348,   349,     0,     0,     0,   350,
     351,     0,     0,     0,   352,     0,   353,   354,     0,   355,
     356,   357,     0,     0,   358,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   359,   360,   361,     0,   362,   363,
     364,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,     0,   375,     0,   376,   377,   378,     0,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
       0,     0,   388,     0,     0,     0,   389,   390,   391,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,   402,   403,     0,     0,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,     0,   413,   414,
       0,   415,   416,   417,     0,   418,     0,     0,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
     430,   431,     0,     0,     0,   432,   433,   623,   435,     0,
       0,     0,   436,     0,     0,     0,   437,     0,   438,   439,
     440,   441,     0,   442,   443,   444,   445,   446,     0,     0,
       0,     0,     0,   447,   448,   449,     0,   450,   451,     0,
     452,     0,     0,   453,     0,   454,     0,   455,   456,   457,
     458,   459,   460,     0,     0,   461,   462,     0,     0,   463,
     464,   465,   466,   467,   468,     0,     0,   469,   470,   471,
     472,     0,   473,   474,     0,     0,   475,   476,   477,   478,
       0,     0,   479,   480,     0,   481,   482,   483,   484,     0,
       0,     0,     0,     0,   485,   486,     0,     0,     0,   487,
     488,   489,   490,     0,   491,   492,     0,   493,   494,     0,
     495,   496,     0,     0,   497,     0,     0,   498,     0,   499,
       0,   500,   501,     0,     0,     0,     0,     0,   502,     0,
     503,     0,     0,   504,     0,     0,     0,   505,     0,   506,
     507,   508,   509,     0,     0,     0,     0,     0,     0,   510,
     511,   512,     0,   513,   514,   515,   516,     0,     0,   517,
     143,   144,     0,   145,   146,   147,   148,   149,     0,     0,
     150,   151,     0,     0,     0,   152,     0,   625,   153,     0,
     154,   155,   156,   157,   158,   159,     0,   160,     0,     0,
       0,   161,     0,     0,     0,   162,     0,     0,   163,   164,
     165,     0,   166,     0,   167,   168,     0,     0,   169,     0,
       0,   170,   171,     0,   172,   173,   174,     0,   175,     0,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,   195,     0,   196,   197,   198,   199,   200,     0,
       0,     0,   201,     0,     0,   202,     0,   203,     0,     0,
     204,     0,     0,     0,   205,   206,   207,     0,     0,   208,
       0,     0,     0,     0,   209,   210,     0,     0,     0,     0,
     211,   212,     0,   213,     0,     0,     0,   214,     0,   215,
     216,   217,   218,   219,     0,     0,     0,   220,     0,     0,
     221,   222,   223,     0,     0,     0,   224,     0,   225,   226,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,     0,   238,   239,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,     0,   252,
     253,     0,   254,     0,   255,     0,   256,     0,   257,   258,
     259,   260,     0,   261,     0,   262,     0,     0,     0,   263,
     264,     0,   265,     0,     0,   266,   267,     0,     0,     0,
     268,   269,   270,   271,     0,     0,   272,   273,   274,     0,
       0,   275,     0,     0,     0,     0,   276,   277,     0,     0,
       0,   278,     0,     0,     0,   279,   280,     0,   281,   282,
       0,     0,     0,   283,     0,   284,     0,     0,   285,   286,
       0,     0,   287,     0,     0,   288,   289,   661,     0,     0,
       0,     0,   290,   291,     0,   292,     0,   293,     0,   294,
     295,     0,     0,     0,     0,     0,     0,     0,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,   315,
     316,   317,     0,   318,   319,   320,   321,     0,   322,   323,
       0,     0,     0,     0,   324,   325,   326,   327,   328,   329,
       0,     0,   330,   331,     0,   332,     0,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,     0,
     343,   344,     0,     0,   345,   346,   347,   348,   349,     0,
       0,     0,   350,   351,     0,     0,     0,   352,     0,   353,
     354,     0,   355,   356,   357,     0,     0,   358,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   359,   360,   361,
       0,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,     0,   375,     0,   376,   377,
     378,     0,   379,     0,   380,   381,   382,   383,   384,     0,
     385,   386,   387,     0,     0,   388,     0,     0,     0,   389,
     390,   391,   392,   393,     0,     0,   394,   395,   396,   397,
     398,     0,   399,   400,     0,   401,   402,   403,     0,     0,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
       0,   413,   414,     0,   415,   416,   417,     0,   418,     0,
       0,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,     0,   430,   431,     0,     0,     0,   432,   433,
     434,   435,     0,     0,     0,   436,     0,     0,     0,   437,
       0,   438,   439,   440,   441,     0,   442,   443,   444,   445,
     446,     0,     0,     0,     0,     0,   447,   448,   449,     0,
     450,   451,     0,   452,     0,     0,   453,     0,   454,     0,
     455,   456,   457,   458,   459,   460,     0,     0,   461,   462,
       0,     0,   463,   464,   465,   466,   467,   468,     0,     0,
     469,   470,   471,   472,     0,   473,   474,     0,     0,   475,
     476,   477,   478,     0,   140,   479,   480,     0,   481,   482,
     483,   484,     0,     0,     0,     0,     0,   485,   486,     0,
       0,     0,   487,   488,   489,   490,     0,   491,   492,     0,
     493,   494,     0,   495,   496,     0,     0,   497,     0,     0,
     498,     0,   499,     0,   500,   501,     0,     0,     0,     0,
       0,   502,     0,   503,     0,     0,   504,     0,     0,     0,
     505,     0,   506,   507,   508,   509,     0,     0,     0,     0,
       0,     0,   510,   511,   512,     0,   513,   514,   515,   516,
       0,     0,   517,   143,   144,     0,   145,   146,   147,   148,
     149,     0,     0,   150,   151,     0,     0,     0,   152,     0,
    1454,   153,     0,   154,   155,   156,   157,   158,   159,     0,
     160,     0,     0,     0,   161,     0,     0,     0,   162,     0,
       0,   163,   164,   165,     0,   166,     0,   167,   168,     0,
       0,   169,     0,     0,   170,   171,     0,   172,   173,   174,
       0,   175,     0,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,  1355,   194,   195,     0,   196,   197,   198,
     199,   200,     0,     0,     0,   201,     0,     0,   202,     0,
     203,     0,     0,   204,     0,     0,     0,   205,   206,   207,
       0,     0,   208,     0,     0,     0,     0,   209,   210,     0,
       0,     0,     0,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
     220,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,     0,
     238,   239,   240,   241,   242,     0,     0,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,     0,   252,   253,     0,   254,     0,   255,     0,   256,
       0,   257,   258,   259,   260,     0,   261,     0,   262,     0,
       0,     0,   263,   264,     0,   265,     0,     0,   266,   267,
       0,     0,     0,   268,   269,   270,   271,     0,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,     0,   276,
     277,     0,     0,     0,   278,     0,     0,     0,   279,   280,
       0,   281,   282,     0,     0,     0,   283,     0,   284,     0,
       0,   285,   286,     0,     0,   287,     0,     0,   288,   289,
       0,     0,     0,     0,     0,   290,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,     0,     0,     0,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,   316,   317,     0,   318,   319,   320,   321,
       0,   322,   323,     0,     0,     0,     0,   324,   325,   326,
     327,   328,   329,     0,     0,   330,   331,     0,   332,     0,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,     0,     0,   343,   344,     0,     0,   345,   346,   347,
     348,   349,     0,     0,     0,   350,   351,     0,     0,     0,
     352,     0,   353,   354,     0,   355,   356,   357,     0,     0,
     358,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     359,   360,   361,     0,   362,   363,   364,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
       0,   376,   377,   378,     0,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   386,   387,     0,     0,   388,     0,
       0,     0,   389,   390,   391,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,   399,   400,     0,   401,   402,
     403,     0,     0,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,     0,   413,   414,     0,   415,   416,   417,
       0,   418,     0,     0,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,     0,   430,   431,     0,     0,
       0,   432,   433,   434,   435,     0,     0,     0,   436,     0,
       0,     0,   437,     0,   438,   439,   440,   441,     0,   442,
     443,   444,   445,   446,     0,     0,     0,     0,     0,   447,
     448,   449,     0,   450,   451,     0,   452,     0,     0,   453,
       0,   454,     0,   455,   456,   457,   458,   459,   460,     0,
       0,   461,   462,     0,     0,   463,   464,   465,   466,   467,
     468,     0,     0,   469,   470,   471,   472,     0,   473,   474,
       0,     0,   475,   476,   477,   478,     0,     0,   479,   480,
       0,   481,   482,   483,   484,     0,     0,     0,     0,     0,
     485,   486,     0,     0,     0,   487,   488,   489,   490,     0,
     491,   492,     0,   493,   494,     0,   495,   496,     0,     0,
     497,     0,     0,   498,     0,   499,     0,   500,   501,     0,
       0,     0,     0,     0,   502,     0,   503,     0,     0,   504,
       0,     0,     0,   505,     0,   506,   507,   508,   509,     0,
       0,     0,     0,     0,     0,   510,   511,   512,     0,   513,
     514,   515,   516,     0,     0,   517,   143,   144,     0,   145,
     146,   147,   148,   149,     0,     0,   150,   151,     0,     0,
       0,   152,     0,  1356,   153,     0,   154,   155,   156,   157,
     158,   159,     0,   160,     0,     0,     0,   161,     0,     0,
       0,   162,     0,     0,   163,   164,   165,     0,   166,     0,
     167,   168,     0,     0,   169,     0,     0,   170,   171,     0,
     172,   173,   174,     0,   175,     0,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,   195,     0,
     196,   197,   198,   199,   200,     0,     0,     0,   201,     0,
       0,   202,     0,   203,     0,     0,   204,     0,     0,     0,
     205,   206,   207,     0,     0,   208,     0,     0,     0,     0,
     209,   210,     0,     0,     0,     0,   211,   212,     0,   213,
       0,     0,     0,   214,     0,   215,   216,   217,   218,   219,
       0,     0,     0,   220,     0,     0,   221,   222,   223,     0,
       0,     0,   224,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,   235,   236,
     237,     0,     0,   238,   239,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,     0,   252,   253,     0,   254,     0,
     255,     0,   256,     0,   257,   258,   259,   260,     0,   261,
       0,   262,     0,     0,     0,   263,   264,     0,   265,     0,
       0,   266,   267,     0,     0,     0,   268,   269,   270,   271,
       0,     0,   272,   273,   274,     0,     0,   275,     0,     0,
       0,     0,   276,   277,     0,     0,     0,   278,     0,     0,
       0,   279,   280,     0,   281,   282,     0,     0,     0,   283,
       0,   284,     0,     0,   285,   286,     0,     0,   287,     0,
       0,   288,   289,     0,     0,     0,     0,     0,   290,   291,
       0,   292,     0,   293,     0,   294,   295,     0,     0,     0,
       0,     0,     0,     0,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,   315,   316,   317,     0,   318,
     319,   320,   321,     0,   322,   323,     0,     0,     0,     0,
     324,   325,   326,   327,   328,   329,     0,     0,   330,   331,
       0,   332,     0,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,     0,     0,   343,   344,     0,     0,
     345,   346,   347,   348,   349,     0,     0,     0,   350,   351,
       0,     0,     0,   352,     0,   353,   354,     0,   355,   356,
     357,     0,     0,   358,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   359,   360,   361,     0,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,     0,   375,     0,   376,   377,   378,     0,   379,     0,
     380,   381,   382,   383,   384,     0,   385,   386,   387,     0,
       0,   388,     0,     0,     0,   389,   390,   391,   392,   393,
       0,     0,   394,   395,   396,   397,   398,     0,   399,   400,
       0,   401,   402,   403,     0,     0,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,     0,   413,   414,     0,
     415,   416,   417,     0,   418,     0,     0,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,     0,   430,
     431,     0,     0,     0,   432,   433,   434,   435,     0,     0,
       0,   436,     0,     0,     0,   437,     0,   438,   439,   440,
     441,     0,   442,   443,   444,   445,   446,     0,     0,     0,
       0,     0,   447,   448,   449,     0,   450,   451,     0,   452,
       0,     0,   453,     0,   454,     0,   455,   456,   457,   458,
     459,   460,     0,     0,   461,   462,     0,     0,   463,   464,
     465,   466,   467,   468,     0,     0,   469,   470,   471,   472,
       0,   473,   474,     0,     0,   475,   476,   477,   478,     0,
       0,   479,   480,     0,   481,   482,   483,   484,     0,     0,
       0,     0,     0,   485,   486,     0,     0,     0,   487,   488,
     489,   490,     0,   491,   492,     0,   493,   494,     0,   495,
     496,     0,     0,   497,     0,     0,   498,     0,   499,     0,
     500,   501,     0,     0,     0,     0,     0,   502,     0,   503,
       0,     0,   504,     0,     0,     0,   505,     0,   506,   507,
     508,   509,     0,     0,     0,     0,     0,     0,   510,   511,
     512,     0,   513,   514,   515,   516,     0,     0,   517,   143,
     144,     0,   145,   146,   147,   148,   149,     0,     0,   150,
     151,     0,     0,     0,   152,     0,  1356,   153,     0,   154,
     155,   156,   157,   158,   159,     0,   160,     0,     0,     0,
     161,     0,     0,     0,   162,     0,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,     0,     0,
     170,   171,     0,   172,   173,   174,     0,   175,     0,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,   199,   200,     0,     0,
       0,   201,     0,     0,   202,     0,   203,     0,     0,   204,
       0,     0,     0,   205,   206,   207,     0,     0,   208,     0,
       0,     0,     0,   209,   210,     0,     0,     0,     0,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,     0,   238,   239,   240,   241,
     242,     0,     0,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,     0,   252,   253,
       0,   254,     0,   255,     0,   256,     0,   257,   258,   259,
     260,     0,   261,     0,   262,     0,     0,     0,   263,   264,
       0,   265,     0,     0,   266,   267,     0,     0,     0,   268,
     269,   270,   271,     0,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,     0,   276,   277,     0,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,     0,   288,   289,     0,     0,     0,     0,
       0,   290,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,     0,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,   316,
     317,     0,   318,   319,   320,   321,     0,   322,   323,     0,
       0,     0,     0,   324,   325,   326,   327,   328,   329,     0,
       0,   330,   331,     0,   332,     0,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,     0,   345,   346,   347,   348,   349,     0,     0,
       0,   350,   351,     0,     0,     0,   352,     0,   353,   354,
       0,   355,   356,   357,     0,     0,   358,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   359,   360,   361,     0,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,     0,   376,   377,   378,
       0,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,     0,     0,   388,     0,     0,     0,   389,   390,
     391,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,   402,   403,     0,     0,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,     0,
     413,   414,     0,   415,   416,   417,     0,   418,     0,     0,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,     0,   430,   431,     0,     0,     0,   432,   433,   434,
     435,     0,     0,     0,   436,     0,     0,     0,   437,     0,
     438,   439,   440,   441,     0,   442,   443,   444,   445,   446,
       0,     0,     0,     0,     0,   447,   448,   449,     0,   450,
     451,     0,   452,     0,     0,   453,     0,   454,     0,   455,
     456,   457,   458,   459,   460,     0,     0,   461,   462,     0,
       0,   463,   464,   465,   466,   467,   468,     0,     0,   469,
     470,   471,   472,     0,   473,   474,     0,     0,   475,   476,
     477,   478,     0,     0,   479,   480,     0,   481,   482,   483,
     484,     0,     0,     0,     0,     0,   485,   486,     0,     0,
       0,   487,   488,   489,   490,     0,   491,   492,     0,   493,
     494,     0,   495,   496,     0,     0,   497,     0,     0,   498,
       0,   499,     0,   500,   501,     0,     0,     0,     0,     0,
     502,     0,   503,     0,     0,   504,     0,     0,     0,   505,
       0,   506,   507,   508,   509,     0,     0,     0,     0,     0,
       0,   510,   511,   512,     0,   513,   514,   515,   516,   143,
     144,   517,   145,   146,   147,   148,   149,     0,     0,   150,
     151,     0,     0,  3377,   152,     0,     0,   153,     0,   154,
     155,   156,   157,   158,   159,     0,   160,     0,     0,     0,
     161,     0,     0,     0,   162,     0,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,     0,     0,
     170,   171,     0,   172,   173,   174,     0,   175,     0,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,   199,   200,     0,     0,
       0,   201,     0,     0,   202,     0,   203,     0,     0,   204,
       0,     0,     0,   205,   206,   207,     0,     0,   208,     0,
       0,     0,     0,   209,   210,     0,     0,     0,     0,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,     0,   238,   239,   240,   241,
     242,     0,     0,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,     0,   252,   253,
       0,   254,     0,   255,     0,   256,     0,   257,   258,   259,
     260,     0,   261,     0,   262,     0,     0,     0,   263,   264,
       0,   265,     0,     0,   266,   267,     0,     0,     0,   268,
     269,   270,   271,     0,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,     0,   276,   277,     0,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,     0,   288,   289,     0,     0,     0,     0,
       0,   290,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,     0,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,   316,
     317,     0,   318,   319,   320,   321,     0,   322,   323,     0,
       0,     0,     0,   324,   325,   326,   327,   328,   329,     0,
       0,   330,   331,     0,   332,     0,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,     0,   345,   346,   347,   348,   349,     0,     0,
       0,   350,   351,     0,     0,     0,   352,     0,   353,   354,
       0,   355,   356,   357,     0,     0,   358,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   359,   360,   361,     0,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,     0,   376,   377,   378,
       0,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,     0,     0,   388,     0,     0,     0,   389,   390,
     391,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,   402,   403,     0,     0,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,     0,
     413,   414,     0,   415,   416,   417,     0,   418,     0,     0,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,     0,   430,   431,     0,     0,     0,   432,   433,   434,
     435,     0,     0,     0,   436,     0,     0,     0,   437,     0,
     438,   439,   440,   441,     0,   442,   443,   444,   445,   446,
       0,     0,     0,     0,     0,   447,   448,   449,     0,   450,
     451,     0,   452,     0,     0,   453,     0,   454,     0,   455,
     456,   457,   458,   459,   460,     0,     0,   461,   462,     0,
       0,   463,   464,   465,   466,   467,   468,     0,     0,   469,
     470,   471,   472,     0,   473,   474,     0,     0,   475,   476,
     477,   478,     0,     0,   479,   480,     0,   481,   482,   483,
     484,     0,     0,     0,     0,     0,   485,   486,     0,     0,
       0,   487,   488,   489,   490,     0,   491,   492,     0,   493,
     494,     0,   495,   496,     0,     0,   497,     0,     0,   498,
       0,   499,     0,   500,   501,     0,     0,     0,     0,     0,
     502,     0,   503,     0,     0,   504,     0,     0,     0,   505,
       0,   506,   507,   508,   509,     0,     0,     0,     0,     0,
       0,   510,   511,   512,     0,   513,   514,   515,   516,     0,
     144,   517,   145,   146,   147,   148,   149,     0,     0,     0,
     151,     0,     0,  3381,   152,     0,     0,     0,     0,   154,
     155,   156,   157,   158,     0,     0,  -403,     0,     0,     0,
     161,     0,     0,     0,   162,     0,     0,   163,   164,   165,
       0,   166,     0,     0,     0,     0,     0,   169,  4176,     0,
     170,   171,     0,   172,   173,     0,     0,     0,     0,   176,
     177,   178,  4177,   180,   181,     0,   182,   183,     0,   184,
     185,     0,   187,     0,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,     0,   200,     0,     0,
       0,   201,     0,     0,   202,     0,   203,     0,     0,   204,
       0,     0,     0,   205,   206,   207,     0,     0,   208,     0,
       0,     0,     0,   209,     0,     0,     0,     0,     0,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,     0,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,     0,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,     0,     0,     0,   238,   239,   240,   241,
     242,     0,     0,   243,   244,  4178,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   253,
       0,   254,     0,   255,     0,   256,     0,     0,   258,   259,
     260,     0,   261,     0,   262,     0,     0,     0,     0,   264,
       0,     0,     0,     0,     0,   267,     0,     0,     0,   268,
     269,   270,   271,  4179,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,     0,   276,     0,     0,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,  4180,
       0,     0,   283,     0,   284,     0,     0,     0,   286,     0,
       0,   287,  4181,     0,   288,   289,     0,     0,     0,     0,
       0,   290,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,     0,     0,  -358,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,   316,
     317,     0,   318,   319,   320,   321,     0,   322,   323,     0,
       0,     0,     0,   324,   325,   326,   327,   328,   329,     0,
       0,   330,   331,     0,   332,     0,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,     0,     0,   343,
     344,     0,     0,   345,   346,   347,   348,   349,     0,     0,
       0,     0,   351,     0,     0,     0,   352,     0,   353,   354,
       0,   355,   356,  4182,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   360,   361,     0,
       0,     0,   364,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,     0,     0,     0,     0,     0,   377,   378,
       0,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,     0,     0,   388,     0,     0,     0,   389,   390,
     391,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,   399,     0,     0,   401,     0,   403,  -358,     0,   404,
     405,   406,   407,   408,   409,   410,   411,     0,     0,     0,
     413,     0,     0,   415,   416,   417,  4183,   418,     0,     0,
       0,   420,   421,   422,   423,   424,   425,   426,     0,   428,
     429,     0,   430,     0,     0,     0,     0,   432,   433,   434,
       0,     0,     0,     0,   436,     0,     0,     0,     0,     0,
       0,   439,     0,   441,     0,   442,     0,     0,   445,   446,
       0,     0,     0,     0,     0,   447,   448,   449,     0,   450,
     451,     0,   452,     0,     0,   453,     0,   454,     0,   455,
       0,   457,   458,   459,   460,     0,     0,     0,   462,     0,
       0,   463,   464,   465,   466,   467,   468,     0,     0,   469,
     470,   471,   472,     0,   473,   474,     0,     0,   475,   476,
     477,   478,     0,     0,   479,   480,     0,   481,   482,   483,
     484,     0,     0,     0,     0,     0,   485,   486,     0,     0,
       0,     0,   488,   489,   490,     0,   491,   492,     0,   493,
     494,     0,     0,     0,     0,     0,   497,     0,     0,   498,
       0,     0,     0,   500,   501,     0,     0,     0,     0,     0,
     502,     0,   503,     0,     0,   504,     0,     0,     0,   505,
       0,   506,   507,   508,   509,     0,     0,  -358,     0,     0,
       0,   510,   511,     0,     0,   513,     0,   515,   516,     0,
       0,   517,   143,   144,     0,   145,   146,   147,   148,   149,
       0,     0,   150,   151,  4621,     0,     0,   152,     0,     0,
     153,     0,   154,   155,   156,   157,   158,   159,     0,   160,
       0,     0,     0,   161,     0,     0,     0,   162,     0,     0,
     163,   164,   165,     0,   166,     0,   167,   168,     0,     0,
     169,     0,     0,   170,   171,     0,   172,   173,   174,     0,
     175,     0,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,     0,   201,     0,     0,   202,     0,   203,
       0,     0,   204,     0,     0,     0,   205,   206,   207,     0,
       0,   208,     0,     0,     0,     0,   209,   210,     0,     0,
       0,     0,   211,   212,     0,   213,     0,     0,     0,   214,
       0,   215,   216,   217,   218,   219,     0,     0,     0,   220,
       0,     0,   221,   222,   223,     0,     0,     0,   224,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,     0,   238,
     239,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
       0,   252,   253,     0,   254,     0,   255,     0,   256,     0,
     257,   258,   259,   260,     0,   261,     0,   262,     0,     0,
       0,   263,   264,     0,   265,     0,     0,   266,   267,     0,
       0,     0,   268,   269,   270,   271,     0,     0,   272,   273,
     274,     0,     0,   275,     0,     0,     0,     0,   276,   277,
       0,     0,     0,   278,     0,     0,     0,   279,   280,     0,
     281,   282,     0,     0,     0,   283,     0,   284,     0,     0,
     285,   286,     0,     0,   287,     0,     0,   288,   289,     0,
       0,     0,     0,     0,   290,   291,     0,   292,     0,   293,
       0,   294,   295,     0,     0,     0,     0,     0,     0,     0,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,   315,   316,   317,     0,   318,   319,   320,   321,     0,
     322,   323,     0,     0,     0,     0,   324,   325,   326,   327,
     328,   329,     0,     0,   330,   331,     0,   332,     0,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,     0,   343,   344,     0,     0,   345,   346,   347,   348,
     349,     0,     0,     0,   350,   351,     0,     0,     0,   352,
       0,   353,   354,     0,   355,   356,   357,     0,     0,   358,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   359,
     360,   361,     0,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,     0,
     376,   377,   378,     0,   379,     0,   380,   381,   382,   383,
     384,     0,   385,   386,   387,     0,     0,   388,     0,     0,
       0,   389,   390,   391,   392,   393,     0,     0,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,     0,   413,   414,     0,   415,   416,   417,     0,
     418,     0,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,   430,   431,     0,     0,     0,
     432,   433,   434,   435,     0,     0,     0,   436,     0,     0,
       0,   437,     0,   438,   439,   440,   441,     0,   442,   443,
     444,   445,   446,     0,     0,     0,     0,     0,   447,   448,
     449,     0,   450,   451,     0,   452,     0,     0,   453,     0,
     454,     0,   455,   456,   457,   458,   459,   460,     0,     0,
     461,   462,     0,     0,   463,   464,   465,   466,   467,   468,
       0,     0,   469,   470,   471,   472,     0,   473,   474,     0,
       0,   475,   476,   477,   478,     0,     0,   479,   480,     0,
     481,   482,   483,   484,     0,     0,     0,     0,     0,   485,
     486,     0,     0,     0,   487,   488,   489,   490,     0,   491,
     492,     0,   493,   494,     0,   495,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,     0,     0,
       0,     0,     0,   502,     0,   503,     0,     0,   504,     0,
       0,     0,   505,     0,   506,   507,   508,   509,     0,     0,
       0,     0,     0,     0,   510,   511,   512,     0,   513,   514,
     515,   516,   143,   144,   517,   145,   146,   147,   148,   149,
    1811,     0,   150,   151,     0,     0,     0,   152,     0,     0,
     153,     0,   154,   155,   156,   157,   158,   159,     0,   160,
       0,     0,     0,   161,     0,     0,     0,   162,     0,     0,
     163,   164,   165,     0,   166,     0,   167,   168,     0,     0,
     169,     0,     0,   170,   171,     0,   172,   173,   174,     0,
     175,     0,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,     0,   201,     0,     0,   202,     0,   203,
       0,     0,   204,     0,     0,     0,   205,   206,   207,     0,
       0,   208,     0,     0,     0,     0,   209,   210,     0,     0,
       0,     0,   211,   212,     0,   213,     0,     0,     0,   214,
       0,   215,   216,   217,   218,   219,     0,     0,     0,   220,
       0,     0,   221,   222,   223,     0,     0,     0,   224,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,     0,   238,
     239,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
       0,   252,   253,     0,   254,     0,   255,     0,   256,     0,
     257,   258,   259,   260,     0,   261,     0,   262,     0,     0,
       0,   263,   264,     0,   265,     0,     0,   266,   267,     0,
       0,     0,   268,   269,   270,   271,     0,     0,   272,   273,
     274,     0,     0,   275,     0,     0,     0,     0,   276,   277,
       0,     0,     0,   278,     0,     0,     0,   279,   280,     0,
     281,   282,     0,     0,     0,   283,     0,   284,     0,     0,
     285,   286,     0,     0,   287,     0,     0,   288,   289,     0,
       0,     0,     0,     0,   290,   291,     0,   292,     0,   293,
       0,   294,   295,     0,     0,     0,     0,     0,     0,     0,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,   315,   316,   317,     0,   318,   319,   320,   321,     0,
     322,   323,     0,     0,     0,     0,   324,   325,   326,   327,
     328,   329,     0,     0,   330,   331,     0,   332,     0,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,     0,   343,   344,     0,     0,   345,   346,   347,   348,
     349,     0,     0,     0,   350,   351,     0,     0,     0,   352,
       0,   353,   354,     0,   355,   356,   357,     0,     0,   358,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   359,
     360,   361,     0,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,     0,
     376,   377,   378,     0,   379,     0,   380,   381,   382,   383,
     384,     0,   385,   386,   387,     0,     0,   388,     0,     0,
       0,   389,   390,   391,   392,   393,     0,     0,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,     0,   413,   414,     0,   415,   416,   417,     0,
     418,     0,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,   430,   431,     0,     0,     0,
     432,   433,   434,   435,     0,     0,     0,   436,     0,     0,
       0,   437,     0,   438,   439,   440,   441,     0,   442,   443,
     444,   445,   446,     0,     0,     0,     0,     0,   447,   448,
     449,     0,   450,   451,     0,   452,     0,     0,   453,     0,
     454,     0,   455,   456,   457,   458,   459,   460,     0,     0,
     461,   462,     0,     0,   463,   464,   465,   466,   467,   468,
       0,     0,   469,   470,   471,   472,     0,   473,   474,     0,
       0,   475,   476,   477,   478,     0,     0,   479,   480,     0,
     481,   482,   483,   484,     0,     0,     0,     0,     0,   485,
     486,     0,     0,     0,   487,   488,   489,   490,     0,   491,
     492,     0,   493,   494,     0,   495,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,     0,     0,
       0,     0,     0,   502,     0,   503,     0,     0,   504,     0,
       0,     0,   505,     0,   506,   507,   508,   509,     0,     0,
       0,     0,     0,     0,   510,   511,   512,     0,   513,   514,
     515,   516,   143,   144,   517,   145,   146,   147,   148,   149,
    1990,     0,   150,   151,     0,     0,     0,   152,     0,     0,
     153,     0,   154,   155,   156,   157,   158,   159,     0,   160,
       0,     0,     0,   161,     0,     0,     0,   162,     0,     0,
     163,   164,   165,     0,   166,     0,   167,   168,     0,     0,
     169,     0,     0,   170,   171,     0,   172,   173,   174,     0,
     175,     0,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,     0,   201,     0,     0,   202,     0,   203,
       0,     0,   204,     0,     0,     0,   205,   206,   207,     0,
       0,   208,     0,     0,     0,     0,   209,   210,     0,     0,
       0,     0,   211,   212,     0,   213,     0,     0,     0,   214,
       0,   215,   216,   217,   218,   219,     0,     0,     0,   220,
       0,     0,   221,   222,   223,     0,     0,     0,   224,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,     0,   238,
     239,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
       0,   252,   253,     0,   254,     0,   255,     0,   256,     0,
     257,   258,   259,   260,     0,   261,     0,   262,     0,     0,
       0,   263,   264,     0,   265,     0,     0,   266,   267,     0,
       0,     0,   268,   269,   270,   271,     0,     0,   272,   273,
     274,     0,     0,   275,     0,     0,     0,     0,   276,   277,
       0,     0,     0,   278,     0,     0,     0,   279,   280,     0,
     281,   282,     0,     0,     0,   283,     0,   284,     0,     0,
     285,   286,     0,     0,   287,     0,     0,   288,   289,     0,
       0,     0,     0,     0,   290,   291,     0,   292,     0,   293,
       0,   294,   295,     0,     0,     0,     0,     0,     0,     0,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,   315,   316,   317,     0,   318,   319,   320,   321,     0,
     322,   323,     0,     0,     0,     0,   324,   325,   326,   327,
     328,   329,     0,     0,   330,   331,     0,   332,     0,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,     0,   343,   344,     0,     0,   345,   346,   347,   348,
     349,     0,     0,     0,   350,   351,     0,     0,     0,   352,
       0,   353,   354,     0,   355,   356,   357,     0,     0,   358,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   359,
     360,   361,     0,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,     0,
     376,   377,   378,     0,   379,     0,   380,   381,   382,   383,
     384,     0,   385,   386,   387,     0,     0,   388,     0,     0,
       0,   389,   390,   391,   392,   393,     0,     0,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,     0,   413,   414,     0,   415,   416,   417,     0,
     418,     0,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,   430,   431,     0,     0,     0,
     432,   433,   434,   435,     0,     0,     0,   436,     0,     0,
       0,   437,     0,   438,   439,   440,   441,     0,   442,   443,
     444,   445,   446,     0,     0,     0,     0,     0,   447,   448,
     449,     0,   450,   451,     0,   452,     0,     0,   453,     0,
     454,     0,   455,   456,   457,   458,   459,   460,     0,     0,
     461,   462,     0,     0,   463,   464,   465,   466,   467,   468,
       0,     0,   469,   470,   471,   472,     0,   473,   474,     0,
       0,   475,   476,   477,   478,     0,     0,   479,   480,     0,
     481,   482,   483,   484,     0,     0,     0,     0,     0,   485,
     486,     0,     0,     0,   487,   488,   489,   490,     0,   491,
     492,     0,   493,   494,     0,   495,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,     0,     0,
       0,     0,     0,   502,     0,   503,     0,     0,   504,     0,
       0,     0,   505,     0,   506,   507,   508,   509,     0,     0,
       0,     0,     0,     0,   510,   511,   512,     0,   513,   514,
     515,   516,   143,   144,   517,   145,   146,   147,   148,   149,
    3132,     0,   150,   151,     0,     0,     0,   152,     0,     0,
     153,     0,   154,   155,   156,   157,   158,   159,     0,   160,
       0,     0,     0,   161,     0,     0,     0,   162,     0,     0,
     163,   164,   165,     0,   166,     0,   167,   168,     0,     0,
     169,     0,     0,   170,   171,     0,   172,   173,   174,     0,
     175,     0,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,     0,   201,     0,     0,   202,     0,   203,
       0,     0,   204,     0,     0,     0,   205,   206,   207,     0,
       0,   208,     0,     0,     0,     0,   209,   210,     0,     0,
       0,     0,   211,   212,     0,   213,     0,     0,     0,   214,
       0,   215,   216,   217,   218,   219,     0,     0,     0,   220,
       0,     0,   221,   222,   223,     0,     0,     0,   224,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,     0,   238,
     239,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
       0,   252,   253,     0,   254,     0,   255,     0,   256,     0,
     257,   258,   259,   260,     0,   261,     0,   262,     0,     0,
       0,   263,   264,     0,   265,     0,     0,   266,   267,     0,
       0,     0,   268,   269,   270,   271,     0,     0,   272,   273,
     274,     0,     0,   275,     0,     0,     0,     0,   276,   277,
       0,     0,     0,   278,     0,     0,     0,   279,   280,     0,
     281,   282,     0,     0,     0,   283,     0,   284,     0,     0,
     285,   286,     0,     0,   287,     0,     0,   288,   289,     0,
       0,     0,     0,     0,   290,   291,     0,   292,     0,   293,
       0,   294,   295,     0,     0,     0,     0,     0,     0,     0,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,   315,   316,   317,     0,   318,   319,   320,   321,     0,
     322,   323,     0,     0,     0,     0,   324,   325,   326,   327,
     328,   329,     0,     0,   330,   331,     0,   332,     0,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,     0,   343,   344,     0,     0,   345,   346,   347,   348,
     349,     0,     0,     0,   350,   351,     0,     0,     0,   352,
       0,   353,   354,     0,   355,   356,   357,     0,     0,   358,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   359,
     360,   361,     0,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,     0,
     376,   377,   378,     0,   379,     0,   380,   381,   382,   383,
     384,     0,   385,   386,   387,     0,     0,   388,     0,     0,
       0,   389,   390,   391,   392,   393,     0,     0,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,     0,   413,   414,     0,   415,   416,   417,     0,
     418,     0,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,   430,   431,     0,     0,     0,
     432,   433,   434,   435,     0,     0,     0,   436,     0,     0,
       0,   437,     0,   438,   439,   440,   441,     0,   442,   443,
     444,   445,   446,     0,     0,     0,     0,     0,   447,   448,
     449,     0,   450,   451,     0,   452,     0,     0,   453,     0,
     454,     0,   455,   456,   457,   458,   459,   460,     0,     0,
     461,   462,     0,     0,   463,   464,   465,   466,   467,   468,
       0,     0,   469,   470,   471,   472,     0,   473,   474,     0,
       0,   475,   476,   477,   478,     0,     0,   479,   480,     0,
     481,   482,   483,   484,     0,     0,     0,     0,     0,   485,
     486,     0,     0,     0,   487,   488,   489,   490,     0,   491,
     492,     0,   493,   494,     0,   495,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,     0,     0,
       0,     0,     0,   502,     0,   503,     0,     0,   504,     0,
       0,     0,   505,     0,   506,   507,   508,   509,     0,     0,
       0,     0,     0,     0,   510,   511,   512,     0,   513,   514,
     515,   516,   143,   144,   517,   145,   146,   147,   148,   149,
    3828,     0,   150,   151,     0,     0,     0,   152,     0,     0,
     153,     0,   154,   155,   156,   157,   158,   159,     0,   160,
       0,     0,     0,   161,     0,     0,     0,   162,     0,     0,
     163,   164,   165,     0,   166,     0,   167,   168,     0,     0,
     169,     0,     0,   170,   171,     0,   172,   173,   174,     0,
     175,     0,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,     0,   201,     0,     0,   202,     0,   203,
       0,     0,   204,     0,     0,     0,   205,   206,   207,     0,
       0,   208,     0,     0,     0,     0,   209,   210,  2231,     0,
       0,     0,   211,   212,     0,   213,     0,     0,     0,   214,
       0,   215,   216,   217,   218,   219,     0,     0,     0,   220,
       0,     0,   221,   222,   223,     0,     0,     0,   224,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,     0,   238,
     239,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,  2232,     0,   250,   251,     0,     0,
       0,   252,   253,     0,   254,     0,   255,     0,   256,     0,
     257,   258,   259,   260,     0,   261,     0,   262,     0,     0,
       0,   263,   264,     0,   265,  2233,     0,   266,   267,     0,
       0,     0,   268,   269,   270,   271,     0,     0,   272,   273,
     274,     0,     0,   275,     0,     0,     0,     0,   276,   277,
       0,     0,     0,   278,     0,     0,     0,   279,   280,     0,
     281,   282,     0,     0,     0,   283,     0,   284,     0,     0,
     285,   286,     0,     0,   287,     0,     0,   288,   289,     0,
       0,     0,     0,     0,   290,   291,     0,   292,     0,   293,
       0,   294,   295,     0,     0,  2234,     0,     0,     0,     0,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,   315,   316,   317,     0,   318,   319,   320,   321,     0,
     322,   323,     0,     0,     0,     0,   324,   325,   326,   327,
     328,   329,     0,     0,   330,   331,     0,   332,     0,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,     0,   343,   344,     0,     0,   345,   346,   347,   348,
     349,  1121,  1122,     0,   350,   351,     0,     0,  2235,   352,
       0,   353,   354,     0,   355,   356,   357,     0,     0,   358,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   359,
     360,   361,     0,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,     0,
     376,   377,   378,     0,   379,     0,   380,   381,   382,   383,
     384,     0,   385,   386,   387,     0,     0,   388,     0,     0,
       0,   389,   390,   391,   392,   393,     0,     0,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,     0,   413,   414,     0,   415,   416,   417,     0,
     418,     0,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,   430,   431,     0,     0,     0,
     432,   433,   434,   435,     0,     0,     0,   436,     0,     0,
       0,   437,     0,   438,   439,   440,   441,     0,   442,   443,
     444,   445,   446,     0,     0,  4608,   605,  4609,   447,   448,
     449,     0,   450,   451,     0,   452,     0,     0,   453,     0,
     454,     0,   455,   456,   457,   458,   459,   460,     0,     0,
     461,   462,     0,     0,   463,   464,   465,   466,   467,   468,
       0,     0,   469,   470,   471,   472,     0,   473,   474,     0,
       0,   475,   476,   477,   478,     0,     0,   479,   480,     0,
     481,   482,   483,   484,     0,     0,     0,     0,     0,   485,
     486,     0,     0,     0,   487,   488,   489,   490,  2236,   491,
     492,     0,   493,   494,     0,   495,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,     0,     0,
       0,     0,     0,   502,     0,   503,     0,     0,   504,     0,
       0,     0,   505,     0,   506,   507,   508,   509,     0,     0,
       0,     0,     0,     0,   510,   511,   512,     0,   513,   514,
     515,   516,   143,   144,   517,   145,   146,   147,   148,   149,
       0,     0,   150,   151,     0,  1271,  1272,   152,  1273,     0,
     153,     0,   154,   155,   156,   157,   158,   159,     0,   160,
       0,     0,     0,   161,     0,     0,     0,   162,     0,     0,
     163,   164,   165,     0,   166,     0,   167,   168,     0,     0,
     169,     0,     0,   170,   171,     0,   172,   173,   174,     0,
     175,     0,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,     0,   201,     0,     0,   202,     0,   203,
       0,     0,   204,     0,     0,     0,   205,   206,   207,     0,
       0,   208,     0,     0,     0,     0,   209,   210,     0,     0,
       0,     0,   211,   212,     0,   213,     0,     0,     0,   214,
       0,   215,   216,   217,   218,   219,     0,     0,     0,   220,
       0,     0,   221,   222,   223,     0,     0,     0,   224,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,     0,   238,
     239,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
       0,   252,   253,     0,   254,     0,   255,     0,   256,     0,
     257,   258,   259,   260,     0,   261,     0,   262,     0,     0,
       0,   263,   264,     0,   265,     0,     0,   266,   267,     0,
       0,     0,   268,   269,   270,   271,     0,     0,   272,   273,
     274,     0,     0,   275,     0,     0,     0,     0,   276,   277,
       0,     0,     0,   278,     0,     0,     0,   279,   280,     0,
     281,   282,     0,     0,     0,   283,     0,   284,     0,     0,
     285,   286,     0,     0,   287,     0,     0,   288,   289,     0,
       0,     0,     0,     0,   290,   291,     0,   292,     0,   293,
       0,   294,   295,     0,     0,     0,     0,     0,     0,     0,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,   315,   316,   317,     0,   318,   319,   320,   321,     0,
     322,   323,     0,     0,     0,     0,   324,   325,   326,   327,
     328,   329,     0,     0,   330,   331,     0,   332,     0,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,     0,   343,   344,     0,     0,   345,   346,   347,   348,
     349,     0,     0,     0,   350,   351,     0,     0,     0,   352,
       0,   353,   354,     0,   355,   356,   357,     0,     0,   358,
       0,     0,  1274,     0,     0,  1275,     0,     0,     0,   359,
     360,   361,     0,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,     0,
     376,   377,   378,     0,   379,     0,   380,   381,   382,   383,
     384,     0,   385,   386,   387,     0,     0,   388,     0,     0,
       0,   389,   390,   391,   392,   393,     0,     0,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,     0,   413,   414,     0,   415,   416,   417,     0,
     418,     0,     0,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,   430,   431,     0,     0,     0,
     432,   433,   434,   435,     0,     0,     0,   436,     0,     0,
       0,   437,     0,   438,   439,   440,   441,     0,   442,   443,
     444,   445,   446,     0,     0,     0,     0,     0,   447,   448,
     449,     0,   450,   451,     0,   452,     0,     0,   453,     0,
     454,     0,   455,   456,   457,   458,   459,   460,     0,     0,
     461,   462,     0,     0,   463,   464,   465,   466,   467,   468,
       0,     0,   469,   470,   471,   472,     0,   473,   474,     0,
       0,   475,   476,   477,   478,     0,   140,   479,   480,     0,
     481,   482,   483,   484,     0,     0,     0,     0,     0,   485,
     486,     0,     0,     0,   487,   488,   489,   490,     0,   491,
     492,     0,   493,   494,     0,   495,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,     0,     0,
       0,     0,     0,   502,     0,   503,     0,     0,   504,     0,
       0,     0,   505,     0,   506,   507,   508,   509,     0,     0,
       0,     0,     0,     0,   510,   511,   512,     0,   513,   514,
     515,   516,  1276,     0,   517,   143,   144,     0,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,   949,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,   950,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,   951,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,   661,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,   952,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,   140,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,   967,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,   968,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,   661,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,   140,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,  2099,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,  2100,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,   792,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,  2101,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,   949,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,   950,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,   661,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,   140,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,   660,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,   661,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,   140,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   662,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,   660,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,   661,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,   140,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,  1518,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,   661,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,   140,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,  1033,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,  1034,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,  1035,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,  2114,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,   661,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,   140,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,   949,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,   661,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,   140,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,   661,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,   140,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,  4543,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,  4544,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   605,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,   728,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,   618,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   973,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,   140,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,   618,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,  2385,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,  2842,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,  2850,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,  2878,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,  2937,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,   143,   144,   517,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,  2047,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,  2048,   348,   349,     0,     0,     0,   350,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,   357,
       0,     0,   358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,   361,     0,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,     0,   376,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,     0,   413,   414,     0,   415,
     416,   417,     0,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
       0,     0,     0,   432,   433,   434,   435,     0,     0,     0,
     436,     0,     0,     0,   437,     0,   438,   439,   440,   441,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,   456,   457,   458,   459,
     460,     0,     0,   461,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,   487,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,   495,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,   512,
       0,   513,   514,   515,   516,     0,   144,   517,   145,   146,
     147,   148,   149,     0,     0,     0,   151,     0,     0,     0,
     152,     0,     0,     0,     0,   154,   155,   156,   157,   158,
       0,     0,  -403,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,     0,
       0,     0,     0,   169,  4176,     0,   170,   171,     0,   172,
     173,     0,     0,     0,     0,   176,   177,   178,  4177,   180,
     181,     0,   182,   183,     0,   184,   185,     0,   187,     0,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,     0,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
       0,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,     0,     0,     0,   221,   222,   223,     0,  -373,
    -373,   224,     0,  -373,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,     0,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,  4178,   245,   246,   247,   248,   249,     0,     0,     0,
       0,     0,     0,     0,     0,   253,     0,   254,     0,   255,
       0,   256,     0,     0,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   267,     0,     0,     0,   268,   269,   270,   271,  4179,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,     0,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,  4180,     0,     0,   283,     0,
     284,     0,     0,     0,   286,     0,     0,   287,  4181,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
    -358,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,     0,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,  4182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   360,   361,     0,     0,     0,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
       0,     0,     0,     0,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,     0,     0,
     401,     0,   403,  -358,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,     0,     0,   413,     0,     0,   415,
     416,   417,  4183,   418,     0,     0,     0,   420,   421,   422,
     423,   424,   425,   426,     0,   428,   429,     0,   430,     0,
       0,     0,     0,   432,   433,   434,     0,     0,     0,     0,
     436,     0,     0,     0,     0,     0,     0,   439,     0,   441,
       0,   442,     0,     0,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,     0,   457,   458,   459,
     460,     0,     0,     0,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,     0,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,     0,     0,
       0,     0,   497,     0,     0,   498,     0,     0,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,  -358,     0,     0,     0,   510,   511,     0,
       0,   513,     0,   515,   516,     0,   144,   517,   145,   146,
     147,   148,   149,     0,     0,     0,   151,     0,     0,     0,
     152,     0,     0,     0,     0,   154,   155,   156,   157,   158,
       0,     0,  -403,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,     0,
       0,     0,     0,   169,  4176,     0,   170,   171,     0,   172,
     173,     0,     0,     0,     0,   176,   177,   178,  4177,   180,
     181,     0,   182,   183,     0,   184,   185,     0,   187,     0,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,     0,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
       0,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,     0,     0,     0,   221,   222,   223,     0,  -394,
       0,   224,     0,  -394,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,     0,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,  4178,   245,   246,   247,   248,   249,     0,     0,     0,
       0,     0,     0,     0,     0,   253,     0,   254,     0,   255,
       0,   256,     0,     0,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   267,     0,     0,     0,   268,   269,   270,   271,  4179,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,     0,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,  4180,     0,     0,   283,     0,
     284,     0,     0,     0,   286,     0,     0,   287,  4181,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
    -358,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,     0,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,  4182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   360,   361,     0,     0,     0,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
       0,     0,     0,     0,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,     0,     0,
     401,     0,   403,  -358,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,     0,     0,   413,     0,     0,   415,
     416,   417,  4183,   418,     0,     0,     0,   420,   421,   422,
     423,   424,   425,   426,     0,   428,   429,     0,   430,     0,
       0,     0,     0,   432,   433,   434,     0,     0,     0,     0,
     436,     0,     0,     0,     0,     0,     0,   439,     0,   441,
       0,   442,     0,     0,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,     0,   457,   458,   459,
     460,     0,     0,     0,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,     0,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,     0,     0,
       0,     0,   497,     0,     0,   498,     0,     0,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,  -394,     0,  -358,     0,     0,     0,   510,   511,     0,
       0,   513,     0,   515,   516,     0,   144,   517,   145,   146,
     147,   148,   149,     0,     0,     0,   151,     0,     0,     0,
     152,     0,     0,     0,     0,   154,   155,   156,   157,   158,
       0,     0,  -403,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,     0,
       0,     0,     0,   169,  4176,     0,   170,   171,     0,   172,
     173,     0,     0,     0,     0,   176,   177,   178,  4177,   180,
     181,     0,   182,   183,     0,   184,   185,     0,   187,     0,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,     0,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
       0,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,     0,     0,     0,   221,   222,   223,     0,  -391,
       0,   224,     0,  -391,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,     0,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,  4178,   245,   246,   247,   248,   249,     0,     0,     0,
       0,     0,     0,     0,     0,   253,     0,   254,     0,   255,
       0,   256,     0,     0,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   267,     0,     0,     0,   268,   269,   270,   271,  4179,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,     0,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,  4180,     0,     0,   283,     0,
     284,     0,     0,     0,   286,     0,     0,   287,  4181,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
    -358,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,     0,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,  4182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   360,   361,     0,     0,     0,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
       0,     0,     0,     0,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,     0,     0,
     401,     0,   403,  -358,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,     0,     0,   413,     0,     0,   415,
     416,   417,  4183,   418,     0,     0,     0,   420,   421,   422,
     423,   424,   425,   426,     0,   428,   429,     0,   430,     0,
       0,     0,     0,   432,   433,   434,     0,     0,     0,     0,
     436,     0,     0,     0,     0,     0,     0,   439,     0,   441,
       0,   442,     0,     0,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,     0,   457,   458,   459,
     460,     0,     0,     0,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,     0,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,     0,     0,
       0,     0,   497,     0,     0,   498,     0,     0,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,  -391,     0,  -358,     0,     0,     0,   510,   511,     0,
       0,   513,     0,   515,   516,     0,   144,   517,   145,   146,
     147,   148,   149,     0,     0,     0,   151,     0,     0,     0,
     152,     0,     0,     0,     0,   154,   155,   156,   157,   158,
       0,     0,  -403,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,     0,
       0,     0,     0,   169,  4176,     0,   170,   171,     0,   172,
     173,     0,     0,     0,     0,   176,   177,   178,  4177,   180,
     181,     0,   182,   183,     0,   184,   185,     0,   187,     0,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,     0,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
       0,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,     0,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,  4458,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,     0,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,  4178,   245,   246,   247,   248,   249,     0,     0,     0,
       0,     0,     0,     0,     0,   253,     0,   254,     0,   255,
       0,   256,     0,     0,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   267,     0,     0,     0,   268,   269,   270,   271,  4179,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,     0,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,  4180,     0,     0,   283,     0,
     284,     0,     0,     0,   286,     0,     0,   287,  4181,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
    -358,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,     0,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,  4182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   360,   361,     0,     0,     0,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
       0,     0,     0,     0,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,     0,     0,
     401,     0,   403,  -358,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,     0,     0,   413,     0,     0,   415,
     416,   417,  4183,   418,     0,     0,     0,   420,   421,   422,
     423,   424,   425,   426,     0,   428,   429,     0,   430,     0,
       0,     0,     0,   432,   433,   434,     0,     0,     0,     0,
     436,     0,     0,     0,     0,     0,     0,   439,     0,   441,
       0,   442,     0,     0,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,     0,   457,   458,   459,
     460,     0,     0,     0,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,     0,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,     0,     0,
       0,     0,   497,     0,     0,   498,     0,     0,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,  -358,     0,     0,     0,   510,   511,     0,
       0,   513,     0,   515,   516,     0,   144,   517,   145,   146,
     147,   148,   149,     0,     0,     0,   151,     0,     0,     0,
     152,     0,     0,     0,     0,   154,   155,   156,   157,   158,
       0,     0,  -403,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,     0,
       0,     0,     0,   169,  4176,     0,   170,   171,     0,   172,
     173,     0,     0,     0,     0,   176,   177,   178,  4177,   180,
     181,     0,   182,   183,     0,   184,   185,     0,   187,     0,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,     0,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
       0,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,     0,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,  -396,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,     0,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,  4178,   245,   246,   247,   248,   249,     0,     0,     0,
       0,     0,     0,     0,     0,   253,     0,   254,     0,   255,
       0,   256,     0,     0,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   267,     0,     0,     0,   268,   269,   270,   271,  4179,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,     0,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,  4180,     0,     0,   283,     0,
     284,     0,     0,     0,   286,     0,     0,   287,  4181,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
    -358,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,     0,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,  4182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   360,   361,     0,     0,     0,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
       0,     0,     0,     0,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,     0,     0,
     401,     0,   403,  -358,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,     0,     0,   413,     0,     0,   415,
     416,   417,  4183,   418,     0,     0,     0,   420,   421,   422,
     423,   424,   425,   426,     0,   428,   429,     0,   430,     0,
       0,     0,     0,   432,   433,   434,     0,     0,     0,     0,
     436,     0,     0,     0,     0,     0,     0,   439,     0,   441,
       0,   442,     0,     0,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,     0,   457,   458,   459,
     460,     0,     0,     0,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,     0,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,     0,     0,
       0,     0,   497,     0,     0,   498,     0,     0,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,  -358,     0,     0,     0,   510,   511,     0,
       0,   513,     0,   515,   516,     0,   144,   517,   145,   146,
     147,   148,   149,     0,     0,     0,   151,     0,     0,     0,
     152,     0,     0,     0,     0,   154,   155,   156,   157,   158,
       0,     0,  -403,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,     0,
       0,     0,     0,   169,  4176,     0,   170,   171,     0,   172,
     173,     0,     0,     0,     0,   176,   177,   178,  4177,   180,
     181,     0,   182,   183,     0,   184,   185,     0,   187,     0,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,     0,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
       0,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,     0,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,  4548,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,     0,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,  4178,   245,   246,   247,   248,   249,     0,     0,     0,
       0,     0,     0,     0,     0,   253,     0,   254,     0,   255,
       0,   256,     0,     0,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   267,     0,     0,     0,   268,   269,   270,   271,  4179,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,     0,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,  4180,     0,     0,   283,     0,
     284,     0,     0,     0,   286,     0,     0,   287,  4181,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
    -358,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,     0,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,  4182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   360,   361,     0,     0,     0,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
       0,     0,     0,     0,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,     0,     0,
     401,     0,   403,  -358,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,     0,     0,   413,     0,     0,   415,
     416,   417,  4183,   418,     0,     0,     0,   420,   421,   422,
     423,   424,   425,   426,     0,   428,   429,     0,   430,     0,
       0,     0,     0,   432,   433,   434,     0,     0,     0,     0,
     436,     0,     0,     0,     0,     0,     0,   439,     0,   441,
       0,   442,     0,     0,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,     0,   457,   458,   459,
     460,     0,     0,     0,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,     0,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,     0,     0,
       0,     0,   497,     0,     0,   498,     0,     0,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,  -358,     0,     0,     0,   510,   511,     0,
       0,   513,     0,   515,   516,     0,   144,   517,   145,   146,
     147,   148,   149,     0,     0,     0,   151,     0,     0,     0,
     152,     0,     0,     0,     0,   154,   155,   156,   157,   158,
       0,     0,  -403,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,     0,
       0,     0,     0,   169,  4176,     0,   170,   171,     0,   172,
     173,     0,     0,     0,     0,   176,   177,   178,  4177,   180,
     181,     0,   182,   183,     0,   184,   185,     0,   187,     0,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,     0,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
       0,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,     0,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,  4581,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,     0,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,  4178,   245,   246,   247,   248,   249,     0,     0,     0,
       0,     0,     0,     0,     0,   253,     0,   254,     0,   255,
       0,   256,     0,     0,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   267,     0,     0,     0,   268,   269,   270,   271,  4179,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,     0,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,  4180,     0,     0,   283,     0,
     284,     0,     0,     0,   286,     0,     0,   287,  4181,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
    -358,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,     0,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,  4182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   360,   361,     0,     0,     0,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
       0,     0,     0,     0,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,     0,     0,
     401,     0,   403,  -358,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,     0,     0,   413,     0,     0,   415,
     416,   417,  4183,   418,     0,     0,     0,   420,   421,   422,
     423,   424,   425,   426,     0,   428,   429,     0,   430,     0,
       0,     0,     0,   432,   433,   434,     0,     0,     0,     0,
     436,     0,     0,     0,     0,     0,     0,   439,     0,   441,
       0,   442,     0,     0,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,     0,   457,   458,   459,
     460,     0,     0,     0,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,     0,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,     0,     0,
       0,     0,   497,     0,     0,   498,     0,     0,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,  -358,     0,     0,     0,   510,   511,     0,
       0,   513,     0,   515,   516,     0,   144,   517,   145,   146,
     147,   148,   149,     0,     0,     0,   151,     0,     0,     0,
     152,     0,     0,     0,     0,   154,   155,   156,   157,   158,
       0,     0,  -403,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,     0,
       0,     0,     0,   169,  4176,     0,   170,   171,     0,   172,
     173,     0,     0,     0,     0,   176,   177,   178,  4177,   180,
     181,     0,   182,   183,     0,   184,   185,     0,   187,     0,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,     0,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
       0,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,     0,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,  -377,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,     0,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,  4178,   245,   246,   247,   248,   249,     0,     0,     0,
       0,     0,     0,     0,     0,   253,     0,   254,     0,   255,
       0,   256,     0,     0,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   267,     0,     0,     0,   268,   269,   270,   271,  4179,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,     0,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,  4180,     0,     0,   283,     0,
     284,     0,     0,     0,   286,     0,     0,   287,  4181,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
    -358,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,     0,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,  4182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   360,   361,     0,     0,     0,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
       0,     0,     0,     0,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,     0,     0,
     401,     0,   403,  -358,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,     0,     0,   413,     0,     0,   415,
     416,   417,  4183,   418,     0,     0,     0,   420,   421,   422,
     423,   424,   425,   426,     0,   428,   429,     0,   430,     0,
       0,     0,     0,   432,   433,   434,     0,     0,     0,     0,
     436,     0,     0,     0,     0,     0,     0,   439,     0,   441,
       0,   442,     0,     0,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,     0,   457,   458,   459,
     460,     0,     0,     0,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,     0,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,     0,     0,
       0,     0,   497,     0,     0,   498,     0,     0,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,  -358,     0,     0,     0,   510,   511,     0,
       0,   513,     0,   515,   516,     0,   144,   517,   145,   146,
     147,   148,   149,     0,     0,     0,   151,     0,     0,     0,
     152,     0,     0,     0,     0,   154,   155,   156,   157,   158,
       0,     0,  -403,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,     0,
       0,     0,     0,   169,  4176,     0,   170,   171,     0,   172,
     173,     0,     0,     0,     0,   176,   177,   178,  4177,   180,
     181,     0,   182,   183,     0,   184,   185,     0,   187,     0,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,     0,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
       0,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,     0,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,     0,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,     0,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,  4178,   245,   246,   247,   248,   249,     0,     0,     0,
       0,     0,     0,     0,     0,   253,     0,   254,     0,   255,
       0,   256,     0,     0,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   267,     0,     0,     0,   268,   269,   270,   271,  4179,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,     0,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,  4180,     0,     0,   283,     0,
     284,     0,     0,     0,   286,     0,     0,   287,  4181,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
    -358,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,     0,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,  4182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   360,   361,     0,     0,     0,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
       0,     0,     0,     0,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,     0,     0,
     401,     0,   403,  -358,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,     0,     0,   413,     0,     0,   415,
     416,   417,  4183,   418,     0,     0,     0,   420,   421,   422,
     423,   424,   425,   426,     0,   428,   429,     0,   430,     0,
       0,     0,     0,   432,   433,   434,     0,     0,     0,     0,
     436,     0,     0,     0,     0,     0,     0,   439,     0,   441,
       0,   442,     0,     0,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,     0,   457,   458,   459,
     460,     0,     0,     0,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,     0,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,     0,     0,
       0,     0,   497,     0,     0,   498,     0,     0,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,  -358,     0,     0,     0,   510,   511,     0,
       0,   513,     0,   515,   516,     0,   144,   517,   145,   146,
     147,   148,   149,     0,     0,     0,   151,     0,     0,     0,
     152,     0,     0,     0,     0,   154,   155,   156,   157,   158,
       0,     0,  -403,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,     0,
       0,     0,     0,   169,  4176,     0,   170,   171,     0,   172,
     173,     0,     0,     0,     0,   176,   177,   178,  4177,   180,
     181,     0,   182,   183,     0,   184,   185,     0,   187,     0,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,     0,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
       0,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,     0,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,     0,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,     0,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,  4178,   245,   246,   247,   248,   249,     0,     0,     0,
       0,     0,     0,     0,     0,   253,     0,   254,     0,   255,
       0,   256,     0,     0,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   267,     0,     0,     0,   268,   269,   270,   271,  4179,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,     0,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,  4180,     0,     0,   283,     0,
     284,     0,     0,     0,   286,     0,     0,   287,  4181,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
    -358,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,     0,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,  4182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   360,   361,     0,     0,     0,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
       0,     0,     0,     0,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,     0,     0,
     401,     0,   403,  -358,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,     0,     0,   413,     0,     0,   415,
     416,   417,  4183,   418,     0,     0,     0,   420,   421,   422,
     423,   424,   425,   426,     0,   428,   429,     0,   430,     0,
       0,     0,     0,   432,   433,   434,     0,     0,     0,     0,
     436,     0,     0,     0,     0,     0,     0,   439,     0,   441,
       0,   442,     0,     0,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,     0,   457,   458,   459,
     460,     0,     0,     0,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,     0,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,     0,     0,
       0,     0,   497,     0,     0,  4461,     0,     0,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,  -358,     0,     0,     0,   510,   511,     0,
       0,   513,     0,   515,   516,     0,   144,   517,   145,   146,
     147,   148,   149,     0,     0,     0,   151,     0,     0,     0,
     152,     0,     0,     0,     0,   154,   155,   156,   157,   158,
       0,     0,     0,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,     0,
       0,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,     0,     0,     0,     0,   176,   177,   178,     0,   180,
     181,     0,   182,   183,     0,   184,   185,     0,   187,     0,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,     0,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
       0,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,     0,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,     0,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,     0,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,     0,
       0,     0,     0,     0,     0,   253,     0,   254,     0,   255,
       0,   256,     0,     0,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,     0,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,     0,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,     0,   318,   319,
     320,   321,     0,   322,   323,     0,     0,     0,     0,   324,
     325,   326,   327,   328,   329,     0,     0,   330,   331,     0,
     332,     0,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,     0,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,     0,     0,     0,   351,     0,
       0,     0,   352,     0,   353,   354,     0,   355,   356,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   360,   361,     0,     0,     0,   364,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
       0,     0,     0,     0,   377,   378,     0,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,     0,     0,
     388,     0,     0,     0,   389,   390,   391,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,   399,     0,     0,
     401,     0,   403,     0,     0,   404,   405,   406,   407,   408,
     409,   410,   411,     0,     0,     0,   413,     0,     0,   415,
     416,   417,     0,   418,     0,     0,     0,   420,   421,   422,
     423,   424,   425,   426,     0,   428,   429,     0,   430,     0,
       0,     0,     0,   432,   433,   434,     0,     0,     0,     0,
     436,     0,     0,     0,     0,     0,     0,   439,     0,   441,
       0,   442,     0,     0,   445,   446,     0,     0,     0,     0,
       0,   447,   448,   449,     0,   450,   451,     0,   452,     0,
       0,   453,     0,   454,     0,   455,     0,   457,   458,   459,
     460,     0,     0,     0,   462,     0,     0,   463,   464,   465,
     466,   467,   468,     0,     0,   469,   470,   471,   472,     0,
     473,   474,     0,     0,   475,   476,   477,   478,     0,     0,
     479,   480,     0,   481,   482,   483,   484,     0,     0,     0,
       0,     0,   485,   486,     0,     0,     0,     0,   488,   489,
     490,     0,   491,   492,     0,   493,   494,     0,     0,     0,
       0,     0,   497,     0,     0,   498,     0,     0,     0,   500,
     501,     0,     0,     0,     0,     0,   502,     0,   503,     0,
       0,   504,     0,     0,     0,   505,     0,   506,   507,   508,
     509,     0,     0,     0,     0,     0,     0,   510,   511,     0,
       0,   513,     0,   515,   516,     0,     0,   517
};

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4054)))

#define yytable_value_is_error(Yytable_value) \
  YYID (0)

static const yytype_int16 yycheck[] =
{
       6,   632,   613,   709,    45,   621,   622,   653,  1072,  1253,
    1073,   614,  1461,    19,  1423,   631,  1093,    23,  1093,  1047,
    1253,   682,  1129,   987,  1791,   776,  1201,    33,   943,     6,
    1223,  1616,  1355,  2608,    40,   736,   985,    43,  1460,    45,
    1154,  1155,    48,  2466,  1547,  1009,  1716,  1290,  1355,    55,
    1732,  2698,  2485,    20,  2808,   128,  2415,  2694,  2491,  1077,
    1644,  1010,  2192,    30,  3230,  1191,  2820,  2821,  1410,    75,
      37,  1806,  1077,    41,  1809,  2886,  1652,  1093,  1403,  2718,
    2697,  1493,  1453,  2018,  1644,  1568,  1174,  1175,  1648,  3016,
    1650,  2085,  2325,     4,   100,  2118,  2119,   670,  1291,  1292,
     539,  2447,  1295,  1296,  1297,  1298,  2292,  1300,  1301,  1302,
    1303,  1304,  1305,  1306,  1307,  1203,  2067,   123,  1621,   125,
    2447,   127,   128,   129,   130,  2300,  2697,  1215,  1216,  1217,
     831,   832,  2331,   834,  1222,  1654,  2185,   629,  2184,  1658,
     846,  3575,  2752,  3282,  2193,  2292,   847,  1636,   125,  1530,
     127,  1670,  3390,  1812,  1029,  1328,    18,    19,  1159,    26,
    3191,  2719,  2720,  1682,    21,  3364,    52,  1548,  1577,    48,
    2436,  1656,  1657,    23,  1659,  1556,  1557,  1662,  1663,  1664,
      19,    35,  1667,    18,    19,  2284,   129,  1672,    62,   193,
      21,    73,  1677,  1678,  1679,  1680,  1681,    77,  2303,  1644,
    1685,    31,  1687,  1648,  1788,  1650,   135,   155,  1693,  1694,
    1695,  1696,   124,  1698,  1699,   149,  1701,   175,   705,   706,
    3627,   124,  2191,  2266,  1011,  2979,  2980,   149,  1788,    65,
      18,    19,  2574,    21,    52,  2820,  2821,   121,    33,   199,
      81,  1652,    67,   155,   193,   162,   907,    64,  2824,    23,
     100,     5,   155,  3178,   149,   159,  1759,   291,   290,  1670,
      57,  2447,   221,     9,   283,   325,    18,    19,  3156,  1167,
    1168,  1169,  3324,  2929,    19,  3327,   199,   371,    71,  1690,
     130,  1179,   230,    29,   723,    18,    19,    61,    62,   193,
      36,    22,   368,    37,  3346,  2246,   957,   240,   155,    59,
    2447,  3353,   159,   187,   203,   376,   331,   353,   110,    86,
     124,  1209,   208,   274,  1212,  2050,  3709,    18,    19,  3712,
      65,    78,    84,   108,   190,    18,    19,    37,   159,   431,
     376,    18,    19,   124,  1232,  1233,   256,    77,  1236,   138,
      21,   463,   226,  1788,   228,   314,   276,   253,   490,   269,
     966,     9,   399,   274,   490,    22,  1254,  1255,    64,   196,
     976,    18,    19,    23,   155,  3115,   155,    18,    19,   236,
     314,   164,    13,    18,    19,    35,   126,   159,    18,    19,
     260,   193,   436,   372,   280,  3437,    18,    19,   600,    49,
      18,    19,   138,    42,  2979,  2980,  4449,   431,   545,   130,
     129,    61,    62,   234,   288,    77,   534,  4428,   540,    70,
    4431,    70,    23,   196,   569,   175,   280,   560,   254,   179,
     563,   453,   367,   193,    35,   386,   196,   632,   620,   856,
     261,   623,   234,   193,   215,   196,  4118,    85,    49,  1190,
     568,  4494,    18,    19,   196,   196,   536,   659,   364,   365,
      61,    62,   247,  1204,   321,   660,   104,   426,   418,    18,
      19,   534,  1463,   130,   247,   386,   609,  3217,   544,   427,
     560,   283,  4154,  4112,   218,   617,   618,  2838,   273,   626,
     261,    18,    19,   271,    21,   274,   192,   371,    22,   621,
     139,   918,   155,   482,   191,   418,   246,  3735,   139,  4520,
     569,   446,  3112,   102,   577,   369,   454,  2010,   218,   254,
     665,   455,  1997,   283,   561,  1578,   658,  3154,    18,    19,
     260,   202,   658,   385,   361,   431,   388,   185,   534,   291,
     536,   330,   634,   230,  3927,    23,    18,    19,   660,   508,
    2988,   595,   567,   159,   550,   411,   552,    35,   621,   479,
     556,   627,   625,   626,   560,   475,   370,  3588,  3589,  3590,
    3616,    49,  3201,    18,    19,   659,   612,   573,   593,   329,
     367,   577,  3178,    61,    62,  1524,   582,  4216,  1527,  2082,
    1286,   540,   468,  1532,   603,   159,    18,    19,   260,   660,
     596,   632,  3018,  1294,   387,   499,   130,   385,   658,   495,
     388,   633,    68,   563,  1355,   159,   640,    18,    19,   508,
    1311,   274,    18,    19,  1101,   621,    18,    19,  1636,   625,
     626,  3673,   439,   629,  1588,  2210,  2211,  2212,  2213,   597,
    3682,  1636,  2762,   385,  3290,   641,   388,  2307,  2824,   600,
     563,  2311,  2988,  2052,   485,   440,  3400,  3401,   402,   426,
     468,  3576,   385,   659,  3706,   388,   660,  2327,  2328,  3711,
      73,  2988,  2837,   606,  3552,  2840,  2841,   427,    18,    19,
    2340,  1332,    18,    19,    18,    19,   682,  2824,   684,   175,
    4114,  2351,  2266,   508,   385,   634,  3852,   388,  3264,   695,
    2275,  1707,   385,  1132,   700,   388,   702,   631,   385,   705,
     706,   388,   660,  2373,   710,   711,  2266,   591,  2292,   631,
     416,   628,    18,    19,   550,  2981,   664,   499,   695,   725,
     726,   727,   728,  2822,  2284,  2310,   694,  2312,   385,  2464,
    2835,   388,    18,    19,   385,  2320,   631,   388,  3976,  3977,
     385,   580,   473,   388,  1832,   385,   620,   715,   388,   580,
     580,  2336,   664,   385,   634,   634,   388,   385,  2343,  4166,
     388,   664,  2085,  2248,  2249,   838,  2809,  1554,  3110,  1787,
     776,  2356,  2357,  2358,   660,  1968,   658,  2362,  2085,  2264,
    3203,  3980,  1787,   645,    21,   196,  1979,  1875,  2169,  1982,
    1613,   720,  1615,   660,  2763,  2764,  2281,  2282,  1499,   872,
    3417,   663,  2988,  1804,   658,   550,  3229,   664,  2467,   385,
     645,  2396,   388,  2398,  2399,  3400,  3401,  2402,  2403,   565,
    3459,  2266,  1995,  3854,   598,   569,   385,  2412,  2413,   388,
      26,   837,   838,   839,  2319,   592,  1962,   843,  2789,  2284,
     625,  2988,   644,   632,  3983,   591,  1333,  1935,   385,  2334,
     700,   388,  2436,   599,   927,   705,   706,   645,  1474,   569,
     866,   867,   868,  2447,   870,   871,   872,  1528,   874,  2062,
    3428,  2196,   660,   664,   880,   664,  2436,   606,   728,   540,
     886,   540,  4316,   499,   666,   385,  1313,  2447,   388,   895,
     867,  2302,  2303,   645,   871,   601,   642,   874,  1773,   660,
     660,   907,   908,   385,  2855,   911,   388,   875,   660,   660,
    3271,   612,   645,   986,   611,    18,    19,   589,  1816,  1406,
     651,   927,   159,    18,    19,   499,   659,   660,  4567,    26,
     385,   427,   843,   388,   533,  1422,   977,   943,   598,   473,
     612,  2430,   948,    47,   645,   499,  2431,  2432,  2433,  2434,
    2194,   957,   645,   385,  3402,  3572,   388,   121,   645,   660,
     143,  3571,  2373,    18,    19,   431,   972,   660,   121,   632,
    3576,   977,   659,   660,   385,  2657,  4214,   388,    35,   385,
     986,  1054,   388,   385,  2569,  4419,   388,   598,   645,  1887,
     901,  2436,  2309,  1891,   645,  3421,  1488,  4053,  1071,  4055,
     645,   664,  2447,   660,  1496,   645,  3577,   420,   659,   660,
    2745,   197,   623,   645,   659,   660,  1914,   645,   230,   659,
     660,  2338,  2339,  1029,    18,    19,  1032,  2978,   660,    18,
      19,   659,   660,  2768,   187,   385,  4217,   375,   388,   385,
     236,   385,   388,    26,   388,   895,  1619,   658,  1054,   273,
     666,  1057,    44,   121,   291,   471,  3402,  2613,   908,   273,
     157,   911,   121,  3296,  3991,  1071,    71,  1073,  3114,   645,
    1509,    26,    18,    19,   400,  3402,    18,    19,  3264,   385,
    3891,  3280,   388,   659,   660,    12,   645,   256,    18,    19,
    3220,   122,   666,  3268,  3224,  1101,    18,    19,  2342,   385,
     659,   660,   388,   175,   386,    18,    19,   185,   645,  2342,
     598,   215,   666,    12,   610,    52,   159,  3264,  4170,   187,
    4172,    18,    19,  1129,   288,   321,  3637,  1133,  1134,  1135,
    3689,   619,   620,   879,  1885,   288,   126,  1143,   234,   236,
     399,   196,    18,    19,    25,   645,  1152,   560,   638,   379,
     107,    18,    19,  1159,  1160,  1161,  2184,  1134,  1135,   659,
     660,   612,   111,   645,   660,   114,   634,   490,   589,   658,
     583,  3220,   368,   405,   203,  3224,   652,   666,   660,  1029,
     718,   719,  3205,   659,  1190,  2578,   264,   378,  2773,   448,
     645,   612,   660,  2863,   431,  3189,   402,   378,  1204,   193,
    2164,   569,   157,    18,    19,   660,  3141,   371,  2157,   660,
    2693,   658,   398,   645,   245,   666,  3402,   490,   371,  2168,
     288,  3172,  2171,  2172,   321,  2809,   157,   126,   660,   288,
    3869,    18,    19,  3666,   645,    53,   612,  1310,   124,   645,
    2824,   540,   454,   645,    18,    19,    64,  1253,   659,  2809,
     666,  1101,   138,   236,   660,  3402,   246,   314,   660,    18,
      19,  3692,  2822,   220,  1270,   121,  2181,  1273,    18,    19,
     563,   368,    18,    19,    18,    19,    18,    19,    18,    19,
    1981,   236,   385,  1356,   660,   388,   167,  2658,  4469,   367,
     385,   659,  2369,   388,  2369,   645,   484,  2719,  2720,   645,
     469,   645,  1152,   371,  1310,    11,    18,    19,     0,  1315,
     660,  2867,   371,  1319,   660,   498,   660,    18,    19,  2731,
    4169,   507,   660,  2516,    18,    19,  1332,  1333,    18,    19,
     385,   187,   658,   388,  2085,   658,  2678,  2913,   321,   645,
    1413,    18,    19,   238,  3014,  2588,    18,    19,   544,  1355,
    1356,  4162,   247,  2369,   660,   427,   283,  2180,  2943,   645,
    2753,   353,  1273,   569,  2809,  2746,   321,   399,  4007,    65,
      18,    19,  3046,  3108,   660,  2036,  3993,  2822,   660,   483,
     490,  1454,   387,    18,    19,   658,  1392,   405,  1394,  3948,
    1396,   385,  1398,  3904,   388,  2914,   385,  2981,  1471,   388,
    1406,   660,   433,   640,  2988,   124,   157,  1413,   632,   230,
      18,    19,  2430,   368,  2075,  2076,  1422,  2734,   632,  2594,
    2595,  2981,   721,  2511,  2835,  2430,  2087,   591,  2988,  2754,
     367,   627,   288,    18,    19,   392,   666,   368,   591,   385,
     155,  1447,   388,   385,   330,   402,   388,   544,  1454,   640,
    2694,  2539,   409,  2697,  1460,   385,   499,  1463,   388,   640,
     166,  2587,   280,   385,  2697,  1471,   388,    18,    19,  1319,
     291,  2597,   385,    18,    19,   388,  3158,   572,  4644,   508,
    3610,  3611,  1488,  1333,  2145,   236,  1397,    13,   385,   388,
    1496,   388,  3925,   199,    18,    19,   391,  4134,   178,  4116,
    2985,  2986,  2913,  2914,  1510,  1511,  1512,  1513,  1514,   385,
    1516,  3942,   388,  2129,  2001,   371,   547,    43,   385,  1525,
    1526,   388,  1528,   591,   243,  1531,    18,    19,  1601,   561,
     627,   468,   591,  1510,  1511,  1512,  2981,  1514,   610,  3898,
    3899,   234,   645,  2988,  3495,  1551,  1396,  1515,   658,  1526,
     645,   659,   660,   582,  1531,   512,  1406,   660,   254,    21,
     285,   498,  1100,  1569,  1570,  4212,    13,    93,   261,   711,
     385,    97,  1422,   388,  2397,   402,  4223,  2400,  2401,    18,
      19,  2404,  2405,  2406,  2407,  2408,  2409,  2410,  2411,   544,
     645,  2414,    18,    19,  1505,  1601,  4445,  4446,   385,  1640,
    4023,   388,   140,  3014,  4358,  4359,   427,   196,  3278,    18,
      19,   385,  1150,   544,   388,   490,    80,   368,    82,    13,
     234,    18,    19,   348,   573,  3295,   385,   576,   490,   388,
    3300,    18,    19,    18,    19,   385,  3310,    99,   388,   385,
     359,   385,   388,   385,   388,   385,   388,   261,   388,    18,
      19,   645,   609,    18,    19,   244,   645,    22,    18,    19,
     124,   402,   569,  1513,    13,   659,  1516,   363,  3342,  3343,
     291,   660,   627,   385,   211,  3626,   388,    18,    19,   275,
    3264,   127,   278,   147,   385,    13,  2650,   388,    18,    19,
     370,   385,   139,   155,   388,   385,   627,   159,   388,   645,
      99,  1551,  1613,   645,  1615,   660,  1617,  1618,   385,  1620,
    1716,   388,   418,   385,   660,   645,   388,  1723,   660,   256,
    1726,  1727,   186,   645,   136,   251,    18,    19,   870,   191,
     660,   193,   645,   236,   445,   591,  1647,   385,   660,   151,
     388,   605,   569,    18,    19,   139,   569,   660,   645,   211,
     385,   658,   506,   388,   216,    18,    19,   413,  4180,  4181,
     365,    18,    19,   660,   659,   130,    13,  1773,   230,   645,
     127,   215,   219,    18,    19,   237,   159,   385,   645,   612,
     388,   157,   244,   658,   660,   399,  1792,  1793,    18,    19,
     139,  3501,   659,   544,   256,  3505,   658,   386,  1804,   196,
     385,    13,  1808,   388,   330,   343,   247,   269,   159,   414,
     238,   139,   274,    18,    19,   540,  1793,   261,  3402,   247,
     531,   283,  3233,  3234,   530,    18,    19,   660,   569,   270,
     645,  2712,   428,   666,   385,   658,   532,   388,   237,   569,
     385,   211,  3402,   388,   659,   291,    18,    19,    74,   386,
     604,    18,    19,   166,   550,    18,    19,   256,   645,   126,
     236,   385,   219,  2466,   388,   368,  3189,  4442,   394,  1942,
     269,   645,   659,  1723,   229,  3557,   627,  1727,   584,  1885,
    1886,    21,  3189,  3126,   560,   659,   645,   563,   124,  3300,
    2591,   353,   139,   385,   648,   645,   388,    18,    19,   645,
     659,   645,  2322,   645,   196,   645,   586,   580,    48,   659,
    3154,   147,  2332,   659,   376,   659,  2797,   659,     9,   659,
     184,  3506,   602,  1773,   386,    18,    19,   139,   658,  2002,
     750,   751,    12,   645,   291,  4336,  1942,  4338,  1944,  4340,
      31,    18,    19,  2363,   645,   641,   385,   659,  2609,   388,
     186,   645,   298,   299,   353,   645,   418,  3402,   659,   385,
      18,    19,   388,   391,   152,   659,   192,   612,   645,   659,
      74,   666,   431,   645,   438,   163,   385,   376,  2859,   388,
    1986,    19,   659,   652,  3228,   229,  1992,   659,   385,   515,
     659,   388,   368,   452,    35,  2001,  2002,   645,   385,   563,
     385,   388,   822,   388,  1087,  1088,  3428,  2013,   234,   211,
     645,   659,  2018,   475,   659,   660,   385,  2023,   658,   388,
     385,    62,  2095,   388,   659,   385,   666,   107,   388,   211,
    2036,   557,    40,  3121,   493,   261,   498,   645,  3145,   566,
      48,   544,  4464,  4465,   385,  1128,   126,   388,  3292,  2055,
     234,   659,  2093,  2059,   634,   385,   234,   637,   388,  3292,
     645,   234,  3829,  3830,  3831,   635,   636,   659,   660,  2075,
    2076,  2077,  2078,   134,   659,  1986,   475,   524,   525,  2085,
     527,  2087,   529,   226,   546,   228,  3114,  2698,   192,  2095,
     660,  2132,   129,   385,   645,   379,   388,   443,   444,   546,
     645,  2037,  3605,    19,  2040,   659,   660,  2043,   659,   244,
     385,    19,   230,   388,   659,   653,   654,   655,   656,   199,
     209,   645,   385,    48,   627,   388,  2132,   196,   385,   244,
     234,   388,   618,  2139,   498,   659,   498,    13,   600,  2145,
     385,   166,   600,   388,   659,   660,   666,   546,  3733,   611,
     612,  2001,   660,   645,  2770,   385,   193,   261,   388,  3273,
    3274,    32,  2073,  2013,  2170,   666,  3039,   659,   544,    95,
     632,  3044,   634,   399,   199,  2181,    77,   659,  3312,  2185,
     385,  3315,  3316,   388,   659,   660,  2192,  2193,  2194,  2195,
     416,   664,   385,   658,  3109,   388,   384,   659,   660,  3333,
     159,   663,   664,   240,   284,  2055,   645,   658,    79,  2059,
     659,   660,   665,   385,    26,   227,   388,   227,   385,   645,
     659,   388,   385,  2134,   140,   388,   666,  2077,  2078,   318,
     319,   609,   140,   659,   323,   324,   645,   382,    77,   659,
     660,   607,   572,    61,    62,  3209,    18,    19,   645,  3213,
     659,   627,   170,    71,   530,  3430,   157,  2330,   645,   192,
     645,  3176,  2173,   139,   385,    77,  3215,   388,   658,  2180,
      61,    62,   659,     7,   659,   789,   645,  2318,  3453,  3454,
     645,    12,   153,   490,   660,   645,   659,   660,   454,  2295,
     659,   498,   385,   119,  2300,   388,   810,  4248,   666,   659,
    2306,  2307,  3477,   569,   645,  2311,   658,  2313,   385,   823,
     824,   388,   416,  3636,   658,   645,  2322,   660,   659,  2325,
    2170,  2327,  2328,   658,  2330,  2331,  2332,   385,   666,  2296,
     388,  2337,  2243,  3577,  2340,   236,  2342,   658,   418,   658,
    2251,  2308,   658,   219,  3577,  2351,  2352,  2314,   658,  2260,
    2261,    77,   658,   645,   658,  2361,   658,  2363,   658,   129,
    2271,  2272,  2273,  2274,   176,  2276,  2277,  2373,  2374,  3692,
     645,   183,  2445,   658,  2341,   178,    99,  3465,   658,  2346,
     568,   658,   645,   257,   659,  2391,  2353,  2354,   645,   318,
     319,   659,   660,   418,   323,   324,   659,  3460,   658,   225,
     645,   376,   659,   658,  2315,  2316,  2317,   659,   660,  4360,
     617,   618,  2485,    26,   659,   645,   496,   454,  2491,   658,
     659,     7,   261,   193,   236,  2845,   658,   343,   513,   659,
     658,  3519,   612,  3306,  2345,   343,   658,  4022,  3189,  2445,
     645,  3548,  3549,  3550,   129,    21,   666,  3524,  3523,   478,
      64,   658,   645,   490,   659,  2461,  2462,  2463,   658,  2465,
      74,   362,   658,  2883,    77,    50,   659,   368,  3341,   658,
     240,  2891,    58,   645,    88,  2895,  3349,    26,   645,  2485,
     659,   561,   645,   563,  3357,  2491,  2397,   659,   658,  2400,
    2401,   285,   659,  2404,  2405,  2406,  2407,  2408,  2409,  2410,
    2411,   658,  2352,  2414,   658,   530,   658,   333,   193,   321,
     236,   337,   658,  3174,   237,  2635,  2936,  2637,   344,   660,
     659,   660,   658,    99,   645,   364,   365,   658,    77,   609,
    3191,   370,   561,   256,   658,  2608,   437,   566,   659,   658,
     298,   299,   413,    50,   157,  3720,   269,  3575,   647,   648,
     362,   650,   645,   652,   484,   240,   368,   143,    59,   584,
     658,   364,   365,   176,   435,    48,   659,   370,   645,   606,
     183,   659,   660,   659,   660,   659,   660,   416,   192,   155,
     609,   274,   659,   159,   198,   501,   502,   645,   658,  2709,
    2710,  2711,   658,   501,   502,   658,   625,   196,  2604,   425,
    3203,   659,  2608,  2609,   658,   476,   659,   660,   157,   659,
     660,  2461,  2462,  2463,   659,   660,   658,   193,   149,   150,
     234,   658,  2628,   236,    33,   658,  3229,   176,  2634,  2635,
     353,  2637,   659,   660,   183,   211,   362,   658,  3602,  2712,
     216,   658,   368,   544,   659,   660,  2652,   261,   524,   525,
     526,   527,   528,   529,  4239,  4240,  4241,  4242,  2664,   659,
     660,   237,   488,   121,   658,   536,   140,   658,   244,   658,
     546,  4156,   659,   660,   175,   659,   660,   658,   179,   658,
     256,   659,   660,   140,   454,   443,   444,   236,  2694,   658,
    4275,  2697,   193,   269,   658,   596,  4145,   658,   274,   659,
     660,   659,   660,  2709,  2710,  2711,  2712,   283,   321,   659,
     660,   437,   658,  2719,  2720,   659,   660,   659,   660,   658,
     490,  4119,  4120,  2796,  2797,    99,   627,   659,   660,   187,
     107,   140,   544,   649,   650,   651,   652,   653,   654,   655,
     656,   649,   650,   651,   652,   653,   654,   655,   656,   362,
     659,   660,   475,   659,   660,   368,  2762,   659,   660,   660,
     218,   658,   601,   521,   522,   523,  4164,  4165,   658,   454,
    4255,   658,   321,  4258,  4259,  4260,  4261,   353,   658,   365,
     659,   660,    71,   586,  2634,  2635,  2859,  2637,   658,   166,
    2796,  2797,   659,   660,    77,  3858,  3859,    35,  3861,   602,
     376,   658,   416,   629,   658,   490,    18,    19,   659,   660,
     386,   659,   660,   362,   658,   627,   658,    77,   544,   368,
     658,   647,   199,   546,    62,   659,   660,   658,   329,  4227,
     288,  2837,    92,  4231,  2840,  2841,   606,  4246,   247,  2845,
     271,  4034,   418,   658,   430,   658,   432,  1240,  1241,   121,
     659,   660,   124,  2859,   121,   660,  3919,  2863,   658,  2709,
    2710,  2711,    99,   237,   273,  2776,  2777,   660,  3931,   343,
     596,  4356,  4357,   111,   157,   658,   114,  2883,   658,  4308,
    4365,  2792,   256,   658,   122,  2891,   343,    37,   658,  2895,
    4134,  3660,  3661,  4342,   658,   269,   659,   660,   658,   475,
     165,   627,   516,   115,   116,   117,   118,   119,   659,   660,
     658,  3680,   193,   371,   540,   187,  2922,   560,  3687,  2925,
     187,   606,   498,   165,  2930,   540,   427,  3588,  3589,  3590,
    2936,   544,   659,   660,   343,   659,   660,   659,   660,   285,
     663,   156,    27,    28,  3713,   660,   218,  3716,    87,  2860,
     660,   218,   193,   236,   660,   364,   365,   659,   660,  2965,
     121,  2872,  2968,   124,   114,   659,   660,   121,   659,   660,
     546,   121,   377,   658,  4358,  4359,    61,    62,    63,   353,
     643,  4044,   556,  4046,  4047,   659,    71,   601,   659,   660,
     659,   660,    77,  4029,  4030,   544,  3002,   155,    83,   659,
     237,    86,   376,   263,   659,    48,   634,  3013,  3014,    21,
     222,   223,   224,   225,   627,    27,   288,    27,    28,   256,
     258,   288,   159,  4452,   600,   110,   187,   159,   178,   159,
     159,   440,   269,   187,   159,   159,   612,   187,   490,   124,
     660,   418,   159,   128,   501,   502,   498,   660,   402,   124,
     110,    61,    62,    63,     7,   658,   632,   218,   634,    71,
    2971,    71,   109,    75,   218,    77,  2977,    77,   218,     4,
     489,   625,   157,    83,   247,  2925,    86,   660,   627,   362,
      57,   341,   446,   659,   660,   368,  4114,   663,   664,   170,
     110,   121,   501,   502,   124,   199,   399,    71,    13,   371,
     110,   475,   631,  3109,   371,   514,   659,   367,  4171,    10,
    3116,  4540,   124,  4542,   124,   139,   353,   355,   128,   660,
     666,   333,   659,   335,   336,   337,    64,   288,   499,   659,
     666,  4560,   344,   591,   288,  3141,    74,   659,   288,  3145,
     456,   457,   458,   459,   460,   461,   462,   157,  3154,   234,
      88,  3157,   658,   273,   437,   666,   241,   187,   660,   157,
    4589,  4590,   665,  3013,  4128,   617,   618,  3173,  3174,   429,
    3176,   285,   546,   385,   285,   260,   388,   651,   652,   653,
     654,   655,   656,  3189,   140,  3191,   563,   285,   218,   285,
     202,    50,   285,  3854,   651,   652,   653,   654,   655,   656,
     660,   285,   159,    77,   354,   121,   658,   584,   124,   660,
     371,   417,   140,   425,  3220,   478,   366,   371,  3224,   383,
     370,   371,  3228,   560,   234,   376,   660,   376,   280,   400,
     660,   241,   609,   660,   660,   320,   110,   580,   475,   580,
     649,   650,   651,   652,   653,   654,   655,   656,   625,   261,
     260,    13,   519,   338,   192,   159,   660,   376,   288,   569,
     198,   544,  3268,   273,   159,   160,   376,   660,   506,   632,
     530,   187,  3278,   606,  3280,   487,   488,   247,   658,   431,
     253,   666,    27,   157,  4477,   666,  3292,   666,  4316,  3295,
    3296,   247,  3298,   660,  3300,   140,   234,   247,   653,   250,
     558,   180,   218,   193,   660,   200,   511,  3157,   393,   546,
     320,    60,   498,   596,   403,   660,   193,   402,   213,   591,
     569,   569,   569,   261,   591,   569,    71,   159,   338,   125,
      75,    86,    77,   135,  3245,    74,   399,   399,   576,   259,
     399,   371,   135,   399,   627,   553,   554,   555,   580,   259,
     558,   559,   364,   365,   562,   563,   564,   252,   370,  3365,
     234,   135,  4555,  3369,   376,   399,   604,  3373,    48,   401,
     265,   399,   288,   399,   399,  4619,   399,   616,   660,   124,
     401,   616,   376,   393,  3390,   658,  4619,   343,  3365,  4633,
     659,  4419,   402,  3399,  4638,   480,   660,   292,   159,  4643,
    4633,   159,   247,   159,   416,  4638,   159,  3413,   159,  3415,
    4643,   159,   159,   159,   660,   343,   159,   629,   159,   569,
    4023,  3427,  3428,   573,   159,   159,   576,   159,   159,   159,
     591,   107,   159,   645,   646,   647,   586,   591,   159,   159,
     159,   591,   159,   159,   594,   159,   320,   159,  3298,   159,
     159,   159,   537,   538,   539,   371,    37,   159,   159,   544,
     607,   399,   357,   639,   338,   611,   658,   376,   376,   376,
     480,    56,   666,   658,   196,   107,   561,   659,   416,   564,
     659,    66,   494,   660,   659,   659,   569,   659,   362,   659,
     166,    76,   659,   659,   659,   652,   658,   660,   343,   659,
    3411,   651,   652,   659,    89,    90,    91,   660,   600,  4140,
     560,  4217,   660,   656,   659,   600,   261,   659,   659,   659,
     105,   659,   658,   199,  4587,   659,   659,   537,   538,   539,
     658,   658,   544,   114,   544,   658,   569,  4601,  3544,   660,
     121,  3547,  3548,  3549,  3550,   501,   502,   660,   660,    13,
      14,   561,   140,   569,   564,   658,   235,  3563,   234,   552,
    4206,   591,    12,  3413,   211,  3415,   198,   500,  3771,  3772,
    3773,  3577,  3578,   501,   502,   660,   431,   569,   516,   196,
     660,   660,  3588,  3589,  3590,   659,   426,   256,   256,   601,
     600,   389,   660,  3666,   334,   173,   159,   178,   569,   404,
     530,  4212,   234,   530,  3610,  3611,   187,   351,   284,   530,
    3616,   530,  4223,   530,   489,   261,  3689,   261,   666,   364,
     365,   449,  3663,   658,   284,   370,  3632,   658,   471,   658,
     153,   376,  4263,     7,    98,  3641,   658,   218,    12,   658,
      14,   658,   653,   658,   386,  3651,   659,   243,   658,   243,
     659,   159,   284,    27,    28,   659,   501,   502,   666,   659,
    3666,   666,   659,   601,   659,   129,   580,   280,   659,   877,
     544,   416,   659,   640,   660,   591,  3643,   660,   659,   143,
      48,   159,   658,  3689,    58,  3888,  3889,   561,   580,    63,
    3893,  3894,   658,   649,   650,   651,   652,   653,   654,   655,
     656,   159,   166,    77,   658,   169,    35,   288,   209,    83,
     658,  3717,    86,   196,    73,    48,   216,   340,   182,   658,
     371,    95,   650,   651,   652,   653,   654,   655,   656,  3735,
     659,  3737,  3738,   376,   256,   256,   110,   413,   159,   110,
     110,   261,   418,  4449,   261,   209,  3752,   332,   660,   494,
     124,   561,   658,   634,   128,   343,   580,   561,   660,   658,
     660,   659,   136,  4469,   349,  3771,  3772,  3773,   580,   143,
     234,   658,   660,   354,     7,   659,   240,   151,   382,    12,
    3691,    14,   211,   157,    17,   376,   376,   513,  4494,   370,
     371,  3641,   159,   399,    27,    28,   658,   274,   658,   544,
     658,   245,   245,   132,   649,   650,   651,   652,   653,   654,
     655,   656,   659,   659,  3725,   659,    48,   191,   185,   283,
     496,   659,  3042,   658,   660,    58,   492,   660,   157,  3740,
      63,    64,   161,   200,   659,  3841,    69,   659,  3749,   659,
     659,   658,   580,   666,    77,   666,   213,   580,  3854,   376,
      83,   580,  3925,    86,   230,   275,   601,   660,   659,   399,
     234,   660,    95,   660,   496,   659,   666,   241,   383,   196,
     196,   196,   201,   276,   256,  3948,   256,   110,   658,   119,
     658,   124,  3888,  3889,   516,   561,   260,  3893,  3894,  4595,
     566,   124,   221,   124,  4525,   128,   563,   264,   265,   658,
     412,   486,   666,   136,   137,   414,   658,   376,   584,   283,
     143,   376,    77,   501,   502,  4621,    21,   485,   151,  3925,
     513,   658,   155,   659,   157,   292,   490,   271,   473,   561,
     371,   563,   283,   609,   566,   168,   659,   634,   666,    12,
     431,   659,  3948,   146,   267,   660,   320,   658,   196,   625,
     653,   658,   658,    48,   659,   419,   285,    48,   191,   423,
     659,   659,  3968,   548,   338,   659,   659,   152,   342,   601,
    3976,  3977,   660,    48,   659,   439,   612,   609,   612,   193,
     565,  3987,   659,   447,   658,   658,   658,    77,   569,   317,
      35,   455,   573,   658,   361,   576,   658,    35,   623,   232,
     658,   234,    92,   623,   606,   586,   124,   261,   241,   202,
     591,   261,   386,   594,   370,    35,   371,    81,   552,   393,
     508,   142,   660,   658,   193,  4641,   490,   260,   402,    13,
      14,   659,    21,   660,   660,   659,   340,   659,   659,   503,
     504,   659,   263,   133,   659,   659,   174,  4053,   415,  4055,
     283,   585,   381,   426,  4060,  4061,   659,   283,   592,   659,
    4066,   649,   650,   651,   652,   653,   654,   655,   656,    56,
     651,   652,  4078,   659,   209,   449,   659,   261,   660,    66,
     244,   658,   666,    48,  3304,  3305,    48,   320,   417,    76,
      48,   555,  3312,   658,   418,  3315,  3316,   426,   658,   658,
     658,   658,    89,    90,    91,   338,   480,   244,   376,   342,
     366,   618,   441,  3333,    98,    15,    21,   660,   105,   471,
     584,   148,   371,   340,   172,   383,   659,  3347,  4134,  4135,
     634,   606,  4138,  3353,  3354,  3355,  3356,   466,   563,   658,
      16,   617,   606,   244,   608,   129,  4329,   380,   371,    48,
      48,   535,   658,   386,   634,   658,   658,    14,   551,   143,
     393,   659,   481,   537,   538,   539,   399,   660,   658,   402,
     544,  4177,   659,   263,   659,   659,  4182,   659,   439,   154,
     509,    32,   166,   631,   490,   169,   659,   561,   667,   659,
     564,   659,   396,   383,   571,   135,   135,   658,   182,   371,
     157,   434,   736,     6,  4387,   376,   376,   741,  4214,   631,
     659,   540,    32,   196,   659,   448,   449,   450,   451,  4402,
      64,   383,    64,   659,   142,   209,   600,   133,   658,   660,
     552,   560,   659,   607,   563,  4418,   129,   606,   772,   244,
     153,    98,   383,   383,  4155,   664,   658,   480,   631,   153,
     234,   341,   229,   290,   788,   664,   240,   667,   123,  4332,
     634,   261,   261,   637,   370,    54,   664,   572,   142,   479,
     660,   153,   129,   572,   364,   365,   214,   367,   664,   660,
     227,   660,    54,   153,   659,  4135,   143,    48,   572,   124,
     193,   193,   193,   453,  4300,   633,   230,   831,   832,   283,
     834,   835,   371,   195,   537,   538,   539,   498,   658,   166,
    4187,   544,   169,   847,   660,  2425,  2615,  2419,  2421,  4502,
    3737,  3740,  2423,  3733,  2416,   182,  4332,   719,   561,  4512,
    3744,   564,  2819,  4106,  4517,  3750,  4413,  4215,  2786,   429,
    4414,  3761,  3986,  3752,  4621,   332,  4352,  4585,    48,  2084,
     633,  2023,   209,  3141,   587,  4361,  4097,  4591,  4097,  1084,
    4097,  4097,   349,  4097,  4499,  4097,  4380,   600,    35,  4442,
    4097,  4097,  4097,  4097,   607,  4499,  4097,   234,  4465,  4562,
    4097,  4564,  4097,   240,  4425,  4406,  1715,  4405,  1650,  1093,
    2344,  3168,  4115,  3173,  4577,  3840,  3563,  4352,  4034,  4426,
    3843,   634,  1126,  1410,   637,  4555,  4485,  4525,  4263,   943,
    4483,  1787,   543,  3765,  1707,  3014,  3000,  3300,  1716,  2376,
    3278,   955,  4605,  4606,  3290,  4173,   283,  4610,  4494,  3358,
    3324,   664,  3324,  3917,  3700,   419,  4442,  4425,  2796,   423,
     530,  3096,  3502,  3505,  4355,   979,  3497,    11,  4153,    11,
    4164,  1800,  4165,  4231,  4158,   439,  4227,  2459,  4066,  3931,
    2999,  2214,   231,   447,  2219,   132,  2448,  3903,   643,  2369,
    1715,   455,   638,  1564,  1560,  3648,  2692,  4483,  3279,  1783,
    2077,  2657,  3157,   470,  1727,  3558,  1451,   654,   944,  2576,
     157,   931,  1986,  1270,   161,  2602,  2492,  2603,  4504,   486,
    2195,  2575,  1569,  3621,  1204,  4511,   490,  3236,  4060,  1179,
    3373,  4061,  3817,  3292,  3507,  2598,  3618,  4237,  4444,   503,
     504,  4051,  4433,  4434,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   201,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,  2095,   315,   316,  4051,   728,
    1320,  2651,   889,  3551,   221,  4561,  4629,  2651,  1072,  1072,
    4566,   548,   419,  3584,  3228,    54,   551,  1072,  2166,  2165,
    1519,   555,   632,  1107,  1559,  1072,  1545,  2012,   565,  4490,
    3298,  3561,   439,  4553,  1426,  3595,  4572,  3865,  4638,  4595,
     447,  4643,  3692,  3577,  1160,    45,    45,   975,   455,  2132,
     584,   973,  1266,  1496,  2059,  1483,  2088,   921,  1481,  2045,
    1057,  1442,  3544,  4619,  2209,  4621,  4243,   611,   285,  3114,
     923,   540,   606,  4629,   608,   540,  4207,  4633,    -1,  1163,
    1164,  4209,  4638,   490,   719,   719,   719,  4643,  1172,  1173,
    1174,  1175,  1176,  1177,  1178,    -1,   503,   504,    -1,    -1,
      -1,  1185,  1186,    -1,  1188,  1189,    -1,    -1,    -1,  1193,
    1194,    -1,    -1,  1197,  1198,  1199,  1200,    -1,  1202,  1203,
      -1,    -1,    -1,    -1,   443,   444,  1210,  1211,    -1,  1213,
    1214,  1215,  1216,  1217,    -1,    -1,  1220,  1221,  1222,  1223,
    1224,  1225,  1226,  1227,  1228,  1229,    -1,  1231,   555,    -1,
    1234,  1235,    -1,    -1,    -1,  1239,    -1,    -1,    -1,  1243,
    1244,  1245,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1256,  1257,  1258,    -1,    -1,   584,    -1,    -1,
      -1,  1265,    -1,    -1,    -1,    -1,  1270,    -1,    -1,    -1,
      -1,    -1,  1276,    -1,  1278,  1279,    -1,    -1,    -1,   606,
     417,   608,    -1,    -1,    -1,    -1,  1290,  1291,  1292,   426,
    1294,  1295,  1296,  1297,  1298,    -1,  1300,  1301,  1302,  1303,
    1304,  1305,  1306,  1307,   441,    -1,    -1,  1311,    -1,    -1,
    1314,    -1,    -1,    14,    -1,    -1,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    -1,
      -1,    -1,   115,   116,   117,   118,   119,    -1,    -1,    50,
      51,    -1,    -1,    -1,    -1,    14,    -1,    58,    17,    -1,
      -1,    -1,    63,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,    -1,    -1,    -1,    36,    79,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    50,    51,    -1,    -1,    -1,    -1,    98,    -1,    58,
      -1,    -1,    -1,   540,    63,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   129,   130,
     131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,
      -1,   142,   143,    -1,    -1,    -1,    -1,    -1,    -1,   222,
     223,   224,   225,    -1,   155,  1459,    -1,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,    -1,   169,    -1,
     129,   130,   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   142,   143,  1489,    -1,    -1,   189,  1493,
      -1,    -1,    -1,    -1,    -1,  1499,    -1,    -1,    -1,    -1,
      -1,    -1,  1506,    -1,    -1,    -1,   207,    -1,   209,    -1,
     169,    -1,    -1,   214,    -1,    -1,   217,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   240,
      -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
     209,    -1,    -1,    -1,    -1,   214,    -1,    -1,   217,    -1,
     333,   262,   335,   336,   337,    -1,    -1,    -1,    -1,    -1,
      -1,   344,    -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,
      -1,   240,   283,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     279,    -1,    -1,    -1,   283,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      27,    28,   425,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,
      -1,    -1,    -1,    -1,    61,    62,    63,    -1,    -1,   552,
      -1,    -1,    -1,    -1,    71,    -1,   397,    -1,   399,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    83,    -1,    -1,    86,
      -1,    -1,   413,    -1,   487,   488,    -1,    -1,    -1,    -1,
      -1,   380,   585,   424,    -1,    -1,    -1,    -1,    -1,   592,
      -1,    -1,    -1,   110,    -1,    -1,    -1,    -1,   397,    -1,
     399,    -1,    -1,    -1,    -1,   446,    -1,   124,   449,    -1,
     451,   128,    -1,   454,   413,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   464,   465,   424,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   474,    -1,   476,  4097,    -1,    -1,    -1,
     157,    -1,    -1,   484,    -1,    -1,    -1,   446,    -1,   490,
     449,    -1,   451,    -1,    -1,   454,    -1,   498,    -1,    -1,
      -1,    -1,   503,   504,   505,   464,   465,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1818,   474,    -1,   476,  1822,    -1,
      -1,    -1,    -1,    -1,    -1,   484,    -1,    -1,  1832,    -1,
    1834,   490,    -1,    -1,    -1,   536,    -1,    -1,    -1,   498,
      -1,    -1,   543,    -1,   503,   504,   505,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   629,   234,    -1,  4180,
    4181,    -1,    -1,    -1,   241,    -1,    -1,    -1,    -1,    -1,
      -1,  1875,    -1,   646,   647,    -1,    -1,   536,   741,    -1,
      -1,    -1,    -1,   260,   543,    -1,   587,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   599,    -1,
      -1,    -1,   603,    -1,    -1,   606,    -1,    -1,    -1,   772,
     611,    -1,    -1,    -1,    -1,    -1,  1920,  1921,  1922,    -1,
      27,    28,    -1,    -1,    -1,   788,    -1,    -1,   587,    -1,
      -1,  1935,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1943,
     599,   642,    -1,   320,   603,    -1,    -1,   606,    -1,    -1,
      -1,    -1,   611,    -1,    -1,    -1,    63,   658,  1962,    -1,
      -1,   338,    -1,    -1,  1968,    -1,    -1,  1971,    -1,  1973,
      77,    -1,   835,    -1,    -1,  1979,    83,  1981,  1982,    86,
      -1,    -1,    -1,   642,    -1,    -1,  4307,  4308,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   658,
      -1,    -1,    -1,   110,    -1,    -1,    -1,    -1,  4329,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   124,    -1,    -1,
      -1,   128,    -1,    -1,    -1,   402,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2062,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4387,    -1,  2072,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     943,  4402,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   955,    -1,    -1,    -1,    -1,  4418,    -1,    -1,
      -1,    -1,    -1,   480,    -1,    -1,  2110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   979,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,
      -1,  4452,    -1,    -1,   241,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4464,  4465,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,    -1,
     537,   538,   539,    -1,    -1,    -1,    -1,   544,    -1,    -1,
    2174,    -1,    -1,    -1,    -1,    -1,    -1,  2181,    -1,    -1,
      -1,  4502,    -1,    -1,   561,    -1,    -1,   564,    -1,    -1,
      -1,  4512,    -1,    -1,    -1,    -1,  4517,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   320,    -1,    -1,    -1,    -1,    -1,  4540,
      -1,  4542,    -1,   600,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   338,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4560,
      -1,  4562,    -1,  4564,  1107,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4577,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4589,  4590,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4605,  4606,   393,    -1,    -1,  4610,
      -1,    -1,    -1,    -1,    -1,   402,    -1,    -1,    -1,    -1,
    1163,  1164,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1172,
    1173,    -1,    -1,  1176,  1177,  1178,    -1,    -1,    -1,    -1,
      -1,    -1,  1185,  1186,    -1,  1188,  1189,    -1,    -1,    -1,
    1193,    -1,    -1,    -1,  1197,  1198,  1199,  1200,    -1,  1202,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1210,  1211,    -1,
    1213,  1214,    -1,    -1,    -1,    -1,    -1,  1220,  1221,    -1,
      -1,  1224,  1225,  1226,  1227,  1228,  1229,    -1,  1231,    -1,
      -1,  1234,  1235,   480,    -1,    -1,  1239,    -1,    -1,    -1,
    1243,  1244,  1245,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2394,    -1,    -1,  1256,  1257,  1258,    -1,    -1,    -1,    -1,
      -1,    -1,  1265,    -1,    -1,    -1,    -1,  1270,    -1,    -1,
      -1,    -1,    -1,  1276,    -1,  1278,  1279,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     537,   538,   539,    -1,    -1,    -1,    -1,   544,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1314,    -1,    -1,   561,    -1,    -1,   564,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2471,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2480,  2481,    -1,    -1,
      -1,    -1,    -1,  2487,    -1,    -1,  2490,    -1,    -1,    -1,
      -1,    -1,    -1,   600,    -1,    -1,    -1,    -1,    -1,  2503,
    2504,    -1,  2506,    -1,    -1,  2509,  2510,  2511,  2512,  2513,
      -1,    -1,  2516,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2525,    -1,    -1,    -1,    -1,    -1,  2531,    -1,  2533,
      -1,  2535,  2536,    -1,  2538,  2539,    -1,    -1,    -1,  2543,
    2544,  2545,    -1,    -1,    -1,  2549,  2550,  2551,    -1,  2553,
      -1,  2555,    -1,  2557,    -1,  2559,    -1,  2561,    34,    35,
      -1,    -1,  2566,    -1,    40,    -1,    42,    -1,    44,    45,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    35,    36,    -1,  2588,    -1,    62,  2591,    -1,    -1,
      -1,    -1,    -1,  2597,    -1,    -1,  1459,    -1,  2602,  2603,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    62,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1489,    -1,    -1,    -1,
    1493,    -1,    -1,    -1,    -1,   111,    -1,    -1,   114,    -1,
      -1,    -1,    96,  1506,    98,    -1,   122,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   108,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   156,   157,    -1,    -1,    -1,    -1,   162,    -1,
     186,   165,   188,    -1,  2718,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2731,   204,   205,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   197,    -1,   199,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,   210,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   245,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
     234,    -1,   258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   277,    -1,    -1,  2808,   259,    -1,    -1,    -1,    -1,
     286,   287,    -1,   289,    -1,    -1,  2820,  2821,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     326,   327,   328,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     314,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   345,
     346,   347,    -1,    -1,    -1,    -1,   352,    -1,    -1,   355,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,   374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,
      -1,   407,   408,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   406,    -1,    -1,  1818,    -1,   433,    -1,  1822,
      -1,    -1,    -1,   417,   418,    -1,    -1,   421,   422,    -1,
      -1,  1834,    -1,    -1,    -1,  2979,  2980,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   442,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   494,    -1,
      -1,    -1,   498,    -1,    -1,    -1,    -1,  3031,    -1,    -1,
    3034,    -1,    -1,    -1,   510,    -1,    -1,    -1,    -1,    -1,
      -1,   495,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3056,  3057,   508,    -1,    -1,  1920,  1921,  1922,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3078,    -1,    -1,    -1,    -1,    -1,
    1943,    -1,    -1,  3087,    -1,  3089,   540,  3091,    -1,    -1,
     544,    -1,    -1,    -1,   570,    -1,    -1,   573,    -1,  1962,
     576,   577,   578,   579,    -1,  3109,    -1,    -1,  1971,   563,
    1973,    -1,    -1,    -1,    -1,    -1,    -1,  3121,    -1,    -1,
      -1,    -1,  3126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   619,   620,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   621,    -1,    -1,
      -1,   647,  3176,    -1,   628,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3186,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3201,  3202,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2072,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3225,  3226,    -1,    -1,    -1,  3230,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3267,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2174,    -1,    -1,    -1,    -1,    -1,    -1,  2181,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3362,  3363,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3400,  3401,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3433,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3457,    -1,  3459,    -1,    -1,  3462,  3463,
      -1,  3465,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3474,    -1,    -1,    -1,    -1,  3479,    -1,    -1,  3482,    -1,
    3484,  3485,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3519,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2394,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3551,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2471,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2480,  2481,    -1,
      -1,    -1,    -1,    -1,  2487,    -1,    -1,  2490,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2503,  2504,    -1,  2506,    -1,    -1,  2509,  2510,  2511,  2512,
    2513,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2525,    -1,    -1,    -1,    -1,    -1,  2531,    -1,
    2533,    -1,  2535,  2536,    -1,  2538,    -1,    -1,    -1,    -1,
    2543,  2544,  2545,    -1,    -1,    -1,  2549,  2550,  2551,    -1,
    2553,    -1,  2555,    -1,  2557,    -1,  2559,    -1,  2561,    -1,
      -1,    -1,    -1,  2566,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2597,    -1,    -1,    -1,    -1,  2602,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3852,    -1,
      -1,    -1,    -1,    -1,    -1,  2718,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3869,    -1,    -1,  2731,    -1,
    3874,    -1,    -1,    -1,  3878,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4007,    -1,  4009,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4034,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4097,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3031,  4173,
    4174,  3034,    -1,    -1,    -1,    -1,  4180,  4181,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3056,  3057,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3078,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3087,    -1,  3089,    -1,  3091,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3109,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4293,
      -1,  4295,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4305,    -1,  4307,  4308,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3176,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3186,    -1,  4329,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4337,    -1,    -1,    -1,    -1,  3201,  3202,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3225,  3226,    -1,    -1,    -1,  3230,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4385,    -1,  4387,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4402,  4403,
      -1,    -1,    -1,    -1,  3267,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4418,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4451,  4452,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4464,  4465,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4477,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4502,  3362,
    3363,    -1,    -1,    -1,    -1,  4509,    -1,    -1,  4512,    -1,
      -1,    -1,    -1,  4517,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4533,
      -1,    -1,    -1,    -1,    -1,    -1,  4540,    -1,  4542,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4555,    -1,    -1,    -1,    -1,  4560,    -1,  4562,    -1,
    4564,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3433,    -1,    -1,  4577,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4589,  4590,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3457,    -1,  3459,    -1,    -1,  3462,
    3463,  4605,  4606,    -1,    -1,    -1,  4610,    -1,    -1,    -1,
      -1,  3474,  4616,    -1,    -1,    -1,  3479,    -1,    -1,  3482,
      -1,  3484,  3485,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4644,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3551,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,
      -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,
      -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,
      -1,   132,    -1,   134,   135,   136,   137,   138,    -1,    -1,
      -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,   169,  3852,
      -1,   172,   173,   174,   175,   176,    -1,    -1,   179,   180,
      -1,   182,   183,   184,   185,   186,  3869,    -1,   189,   190,
      -1,  3874,    -1,   194,   195,  3878,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,   220,
     221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,
     231,   232,   233,   234,    -1,   236,    -1,    -1,    -1,    -1,
     241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,
     251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,
     261,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,
     271,    -1,   273,    -1,    -1,    -1,   277,   278,    -1,   280,
      -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,    -1,   314,   315,   316,    -1,   318,   319,   320,
     321,    -1,   323,   324,  4007,    -1,  4009,    -1,   329,   330,
     331,   332,   333,   334,    -1,    -1,   337,   338,    -1,   340,
      -1,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,   360,
     361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,    -1,
      -1,   372,    -1,   374,   375,    -1,   377,   378,   379,    -1,
      -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   392,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,    -1,
     411,    -1,   413,   414,   415,    -1,   417,    -1,   419,   420,
     421,   422,   423,    -1,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,
     441,   442,   443,   444,   445,    -1,   447,   448,    -1,   450,
     451,   452,    -1,    -1,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,    -1,   466,   467,    -1,   469,   470,
     471,    -1,   473,    -1,    -1,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,    -1,   488,   489,   490,
    4173,  4174,   493,   494,   495,   496,    -1,    -1,    -1,   500,
      -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,    -1,
     511,   512,   513,   514,   515,   516,    -1,    -1,    -1,    -1,
     521,   522,   523,    -1,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,   533,    -1,   535,   536,   537,   538,   539,   540,
      -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,   550,
     551,   552,    -1,    -1,   555,   556,   557,   558,    -1,   560,
     561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,   570,
     571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,    -1,
      -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,   590,
      -1,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
      -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,   610,
    4293,    -1,  4295,    -1,    -1,   616,    -1,   618,    -1,    -1,
     621,    -1,  4305,    -1,   625,    -1,   627,   628,   629,   630,
      -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,    -1,
     641,   642,   643,   644,    -1,    -1,   647,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   666,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4451,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,  4509,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    46,    47,
    4533,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      -1,    -1,   100,   101,   102,   103,    -1,   105,   106,   107,
      -1,   109,   110,   111,   112,   113,   114,    -1,    -1,    -1,
      -1,   119,   120,   121,    -1,    -1,   124,   125,   126,    -1,
     128,    -1,    -1,  4616,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,  4644,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,
      -1,   199,    -1,   201,    -1,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,   212,    -1,   214,   215,    -1,   217,
     218,    -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,
     228,   229,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,   240,   241,   242,   243,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,
     258,    -1,   260,    -1,    -1,   263,   264,    -1,   266,   267,
      -1,   269,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
     288,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,    -1,    -1,
      -1,   329,   330,   331,   332,   333,   334,    -1,    -1,   337,
     338,   339,   340,    -1,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,   354,   355,   356,    -1,
      -1,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,    -1,   374,   375,    -1,   377,
     378,   379,    -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,    -1,   417,
      -1,   419,   420,   421,   422,   423,    -1,   425,   426,   427,
      -1,    -1,   430,    -1,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,    -1,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,    -1,   466,   467,
      -1,   469,   470,   471,    -1,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,    -1,    -1,    -1,   493,   494,   495,   496,    -1,
      -1,    -1,   500,    -1,    -1,    -1,   504,    -1,   506,   507,
     508,   509,    -1,   511,   512,   513,   514,   515,    -1,    -1,
      -1,    -1,    -1,   521,   522,   523,    -1,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,   533,    -1,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,    -1,    -1,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,    -1,    -1,   564,   565,   566,   567,
      -1,   569,   570,   571,    -1,   573,   574,   575,   576,    -1,
      -1,    -1,    -1,   581,   582,   583,    -1,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,    -1,
     598,   599,    -1,    -1,   602,    -1,    -1,   605,    -1,   607,
      -1,   609,   610,    -1,    -1,   613,   614,   615,   616,   617,
     618,    -1,    -1,   621,   622,    -1,   624,   625,    -1,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,    -1,   637,
     638,   639,    -1,   641,   642,   643,   644,    -1,    -1,   647,
      -1,    -1,    -1,   651,   652,    -1,    -1,    -1,    -1,   657,
     658,    -1,    -1,   661,   662,    -1,    -1,   665,   666,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,   212,    -1,   214,   215,
      -1,   217,   218,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,   229,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,   240,   241,   242,   243,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,   269,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,   288,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
      -1,    -1,    -1,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,   339,   340,    -1,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,   354,   355,
     356,    -1,    -1,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,   379,    -1,    -1,   382,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
      -1,   417,    -1,   419,   420,   421,   422,   423,    -1,   425,
     426,   427,    -1,    -1,   430,    -1,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
      -1,   447,   448,    -1,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,    -1,
     466,   467,    -1,   469,   470,   471,    -1,   473,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,    -1,   488,   489,    -1,    -1,    -1,   493,   494,   495,
     496,    -1,    -1,    -1,   500,    -1,    -1,    -1,   504,    -1,
     506,   507,   508,   509,    -1,   511,   512,   513,   514,   515,
      -1,    -1,    -1,    -1,    -1,   521,   522,   523,    -1,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,   533,    -1,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,    -1,    -1,   564,   565,
     566,   567,    -1,   569,   570,   571,    -1,   573,   574,   575,
     576,    -1,    -1,    -1,    -1,    -1,   582,   583,    -1,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,    -1,   598,   599,    -1,    -1,   602,    -1,    -1,   605,
      -1,   607,    -1,   609,   610,    -1,    -1,   613,   614,   615,
     616,   617,   618,    -1,    -1,   621,   622,    -1,   624,   625,
      -1,   627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,
      -1,   637,   638,   639,    -1,   641,   642,   643,   644,    -1,
      -1,   647,    -1,    -1,    -1,   651,   652,    -1,    -1,    -1,
      -1,   657,   658,    -1,    -1,   661,   662,    -1,    -1,   665,
     666,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    -1,    -1,   100,   101,   102,   103,
      -1,   105,   106,   107,    -1,   109,   110,   111,   112,   113,
     114,    -1,    -1,    -1,    -1,   119,   120,   121,    -1,    -1,
     124,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,   170,    -1,   172,   173,
     174,   175,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,   212,    -1,
     214,   215,    -1,   217,   218,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,   229,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,   240,   241,   242,   243,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,   269,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,   288,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,    -1,    -1,    -1,   329,   330,   331,   332,   333,
     334,    -1,    -1,   337,   338,   339,   340,    -1,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
     354,   355,   356,    -1,    -1,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,    -1,
     374,   375,    -1,   377,   378,   379,    -1,    -1,   382,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,    -1,   417,    -1,   419,   420,   421,   422,   423,
      -1,   425,   426,   427,    -1,    -1,   430,    -1,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,    -1,   447,   448,    -1,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,    -1,   466,   467,    -1,   469,   470,   471,    -1,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,    -1,   488,   489,    -1,    -1,    -1,   493,
     494,   495,   496,    -1,    -1,    -1,   500,    -1,    -1,    -1,
     504,    -1,   506,   507,   508,   509,    -1,   511,   512,   513,
     514,   515,    -1,    -1,    -1,    -1,    -1,   521,   522,   523,
      -1,   525,   526,    -1,   528,    -1,    -1,   531,    -1,   533,
      -1,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,    -1,    -1,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,    -1,    -1,
     564,   565,   566,   567,    -1,   569,   570,   571,    -1,   573,
     574,   575,   576,    -1,    -1,    -1,    -1,    -1,   582,   583,
      -1,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,    -1,   598,   599,    -1,    -1,   602,    -1,
      -1,   605,    -1,   607,    -1,   609,   610,    -1,    -1,   613,
     614,   615,   616,   617,   618,    -1,    -1,   621,   622,    -1,
     624,   625,    -1,   627,   628,   629,   630,    -1,    -1,    -1,
      -1,    -1,    -1,   637,   638,   639,    -1,   641,   642,   643,
     644,    -1,    -1,   647,    -1,    -1,    -1,   651,   652,   653,
      -1,    -1,    -1,   657,   658,    -1,    -1,   661,   662,    -1,
      -1,   665,   666,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    -1,    -1,   100,   101,
     102,   103,    -1,   105,   106,   107,    -1,   109,   110,   111,
     112,   113,   114,    -1,    -1,    -1,    -1,   119,   120,   121,
      -1,    -1,   124,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,   170,    -1,
     172,   173,   174,   175,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,    -1,
      -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
     212,    -1,   214,   215,    -1,   217,   218,    -1,   220,   221,
      -1,    -1,    -1,   225,   226,   227,   228,   229,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,   240,   241,
     242,   243,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,
      -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,
      -1,   263,   264,    -1,    -1,   267,    -1,   269,   270,   271,
      -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,   288,    -1,    -1,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,    -1,    -1,    -1,   329,   330,   331,
     332,   333,   334,    -1,    -1,   337,   338,   339,   340,    -1,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,    -1,   354,   355,   356,    -1,    -1,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,    -1,   374,   375,    -1,   377,   378,   379,    -1,    -1,
     382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,    -1,   417,    -1,   419,   420,   421,
     422,   423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,    -1,   447,   448,    -1,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,    -1,   466,   467,    -1,   469,   470,   471,
      -1,   473,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,    -1,   488,   489,    -1,    -1,
      -1,   493,   494,   495,   496,    -1,    -1,    -1,   500,    -1,
      -1,    -1,   504,    -1,   506,   507,   508,   509,    -1,   511,
     512,   513,   514,   515,    -1,    -1,    -1,    -1,    -1,   521,
     522,   523,    -1,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,   533,    -1,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,    -1,    -1,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
      -1,    -1,   564,   565,   566,   567,    -1,   569,   570,   571,
      -1,   573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,
     582,   583,    -1,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,    -1,   598,   599,    -1,    -1,
     602,    -1,    -1,   605,    -1,   607,    -1,   609,   610,    -1,
      -1,   613,   614,   615,   616,   617,   618,    -1,    -1,   621,
     622,    -1,   624,   625,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,    -1,   637,   638,   639,    -1,   641,
     642,   643,   644,    -1,    -1,   647,    -1,    -1,    -1,   651,
     652,   653,    -1,    -1,    -1,   657,   658,    -1,    -1,   661,
     662,    -1,    -1,   665,   666,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    -1,    -1,
     100,   101,   102,   103,    -1,   105,   106,   107,    -1,   109,
     110,   111,   112,   113,   114,    -1,    -1,    -1,    -1,   119,
     120,   121,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
     170,    -1,   172,   173,   174,   175,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,   196,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,   212,    -1,   214,   215,    -1,   217,   218,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
     240,   241,   242,   243,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,   269,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,   288,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,   339,
     340,    -1,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,   354,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,   569,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,   613,   614,   615,   616,   617,   618,    -1,
      -1,   621,   622,    -1,   624,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,    -1,    -1,   647,    -1,    -1,
      -1,   651,   652,    -1,    -1,    -1,    -1,   657,   658,    -1,
      -1,   661,   662,    -1,    -1,   665,   666,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      -1,    -1,   100,   101,   102,   103,    -1,   105,   106,   107,
      -1,   109,   110,   111,   112,   113,   114,    -1,    -1,    -1,
      -1,   119,   120,   121,    -1,    -1,   124,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,    -1,    -1,    -1,   194,   195,   196,   197,
      -1,   199,    -1,   201,    -1,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,   212,    -1,   214,   215,    -1,   217,
     218,    -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,
     228,   229,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,   240,   241,   242,   243,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,
     258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,
      -1,   269,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
     288,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,    -1,    -1,
      -1,   329,   330,   331,   332,   333,   334,    -1,    -1,   337,
     338,   339,   340,    -1,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,   354,   355,   356,    -1,
      -1,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,    -1,   374,   375,    -1,   377,
     378,   379,    -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,    -1,   417,
      -1,   419,   420,   421,   422,   423,    -1,   425,   426,   427,
      -1,    -1,   430,    -1,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,    -1,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,    -1,   466,   467,
      -1,   469,   470,   471,    -1,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,    -1,    -1,    -1,   493,   494,   495,   496,    -1,
      -1,    -1,   500,    -1,    -1,    -1,   504,    -1,   506,   507,
     508,   509,    -1,   511,   512,   513,   514,   515,    -1,    -1,
      -1,    -1,    -1,   521,   522,   523,    -1,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,   533,    -1,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,    -1,    -1,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,    -1,    -1,   564,   565,   566,   567,
      -1,   569,   570,   571,    -1,   573,   574,   575,   576,    -1,
      -1,    -1,    -1,    -1,   582,   583,    -1,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,    -1,
     598,   599,    -1,    -1,   602,    -1,    -1,   605,    -1,   607,
      -1,   609,   610,    -1,    -1,   613,   614,   615,   616,   617,
     618,    -1,    -1,   621,   622,    -1,   624,   625,    -1,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,    -1,   637,
     638,   639,    -1,   641,   642,   643,   644,    -1,    -1,   647,
      -1,    -1,    -1,   651,   652,    -1,    -1,    -1,    -1,   657,
     658,    -1,    -1,   661,   662,    -1,    -1,   665,   666,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
     196,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,   212,    -1,   214,   215,
      -1,   217,   218,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,   229,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,   240,   241,   242,   243,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,   269,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,   288,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
      -1,    -1,    -1,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,   339,   340,    -1,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,   354,   355,
     356,    -1,    -1,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,   375,
      -1,   377,   378,   379,    -1,    -1,   382,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
      -1,   417,    -1,   419,   420,   421,   422,   423,    -1,   425,
     426,   427,    -1,    -1,   430,    -1,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
      -1,   447,   448,    -1,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,    -1,
     466,   467,    -1,   469,   470,   471,    -1,   473,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,    -1,   488,   489,    -1,    -1,    -1,   493,   494,   495,
     496,    -1,    -1,    -1,   500,    -1,    -1,    -1,   504,    -1,
     506,   507,   508,   509,    -1,   511,   512,   513,   514,   515,
      -1,    -1,    -1,    -1,    -1,   521,   522,   523,    -1,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,   533,    -1,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,    -1,    -1,   564,   565,
     566,   567,    -1,   569,   570,   571,    -1,   573,   574,   575,
     576,    -1,    -1,    -1,    -1,    -1,   582,   583,    -1,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,    -1,   598,   599,    -1,    -1,   602,    -1,    -1,   605,
      -1,   607,    -1,   609,   610,    -1,    -1,   613,   614,   615,
     616,   617,   618,    -1,    -1,   621,   622,    -1,   624,   625,
      -1,   627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,
      -1,   637,   638,   639,    -1,   641,   642,   643,   644,    -1,
      -1,   647,    -1,    -1,    -1,   651,   652,    -1,    -1,    -1,
      -1,   657,   658,    -1,    -1,   661,   662,    -1,    -1,   665,
     666,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    -1,    -1,   100,   101,   102,   103,
      -1,   105,   106,   107,    -1,   109,   110,   111,   112,   113,
     114,    -1,    -1,    -1,    -1,   119,   120,   121,    -1,    -1,
     124,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,   170,    -1,   172,   173,
     174,   175,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,   212,    -1,
     214,   215,    -1,   217,   218,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,   229,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,   240,   241,   242,   243,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,   269,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,   288,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,    -1,    -1,    -1,   329,   330,   331,   332,   333,
     334,    -1,    -1,   337,   338,   339,   340,    -1,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
     354,   355,   356,    -1,    -1,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,    -1,
     374,   375,    -1,   377,   378,   379,    -1,    -1,   382,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,    -1,   417,    -1,   419,   420,   421,   422,   423,
      -1,   425,   426,   427,    -1,    -1,   430,    -1,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,    -1,   447,   448,    -1,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,    -1,   466,   467,    -1,   469,   470,   471,    -1,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,    -1,   488,   489,    -1,    -1,    -1,   493,
     494,   495,   496,    -1,    -1,    -1,   500,    -1,    -1,    -1,
     504,    -1,   506,   507,   508,   509,    -1,   511,   512,   513,
     514,   515,    -1,    -1,    -1,    -1,    -1,   521,   522,   523,
      -1,   525,   526,    -1,   528,    -1,    -1,   531,    -1,   533,
      -1,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,    -1,    -1,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,    -1,    -1,
     564,   565,   566,   567,    -1,   569,   570,   571,    -1,   573,
     574,   575,   576,    -1,    -1,    -1,    -1,    -1,   582,   583,
      -1,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,    -1,   598,   599,    -1,    -1,   602,    -1,
      -1,   605,    -1,   607,    -1,   609,   610,    -1,    -1,   613,
     614,   615,   616,   617,   618,    -1,    -1,   621,   622,    -1,
     624,   625,    -1,   627,   628,   629,   630,    -1,    -1,    -1,
      -1,    -1,    -1,   637,   638,   639,    -1,   641,   642,   643,
     644,    -1,    -1,   647,    -1,    -1,    -1,   651,   652,    -1,
      -1,    -1,    -1,   657,   658,    -1,    -1,   661,   662,    -1,
      -1,   665,   666,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    -1,    -1,   100,   101,
     102,   103,    -1,   105,   106,   107,    -1,   109,   110,   111,
     112,   113,   114,    -1,    -1,    -1,    -1,   119,   120,   121,
      -1,    -1,   124,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,   170,    -1,
     172,   173,   174,   175,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,    -1,
      -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
     212,    -1,   214,   215,    -1,   217,   218,    -1,   220,   221,
      -1,    -1,    -1,   225,   226,   227,   228,   229,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,   240,   241,
     242,   243,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,
      -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,
      -1,   263,   264,    -1,    -1,   267,    -1,   269,   270,   271,
      -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,   288,    -1,    -1,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,    -1,    -1,    -1,   329,   330,   331,
     332,   333,   334,    -1,    -1,   337,   338,   339,   340,    -1,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,    -1,   354,   355,   356,    -1,    -1,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,    -1,   374,   375,    -1,   377,   378,   379,    -1,    -1,
     382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,    -1,   417,    -1,   419,   420,   421,
     422,   423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,    -1,   447,   448,    -1,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,    -1,   466,   467,    -1,   469,   470,   471,
      -1,   473,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,    -1,   488,   489,    -1,    -1,
      -1,   493,   494,   495,   496,    -1,    -1,    -1,   500,    -1,
      -1,    -1,   504,    -1,   506,   507,   508,   509,    -1,   511,
     512,   513,   514,   515,    -1,    -1,    -1,    -1,    -1,   521,
     522,   523,    -1,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,   533,    -1,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,    -1,    -1,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
      -1,    -1,   564,   565,   566,   567,    -1,   569,   570,   571,
      -1,   573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,
     582,   583,    -1,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,    -1,   598,   599,    -1,    -1,
     602,    -1,    -1,   605,    -1,   607,    -1,   609,   610,    -1,
      -1,   613,   614,   615,   616,   617,   618,    -1,    -1,   621,
     622,    -1,   624,   625,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,    -1,   637,   638,   639,    -1,   641,
     642,   643,   644,    -1,    -1,   647,    -1,    -1,    -1,   651,
     652,    -1,    -1,    -1,    -1,   657,   658,    -1,    -1,   661,
     662,    -1,    -1,   665,   666,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    -1,    -1,
     100,   101,   102,   103,    -1,   105,   106,   107,    -1,   109,
     110,   111,   112,   113,   114,    -1,    -1,    -1,    -1,   119,
     120,   121,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
     170,    -1,   172,   173,   174,   175,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,   212,    -1,   214,   215,    -1,   217,   218,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
     240,   241,   242,   243,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,   269,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,   288,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,   339,
     340,    -1,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,   354,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,    -1,
     370,   371,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,   569,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,   613,   614,   615,   616,   617,   618,    -1,
      -1,   621,   622,    -1,   624,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,    -1,    -1,   647,    -1,    -1,
      -1,   651,   652,    -1,    -1,    -1,    -1,   657,   658,    -1,
      -1,   661,   662,    -1,    -1,   665,   666,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      -1,    -1,   100,   101,   102,   103,    -1,   105,   106,   107,
      -1,   109,   110,   111,   112,   113,   114,    -1,    -1,    -1,
      -1,   119,   120,   121,    -1,    -1,   124,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,
      -1,   199,    -1,   201,    -1,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,   212,    -1,   214,   215,    -1,   217,
     218,    -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,
     228,   229,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,   240,   241,   242,   243,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,
     258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,
      -1,   269,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
     288,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,    -1,    -1,
      -1,   329,   330,   331,   332,   333,   334,    -1,    -1,   337,
     338,   339,   340,    -1,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,   354,   355,   356,    -1,
      -1,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,    -1,   374,   375,    -1,   377,
     378,   379,    -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,    -1,   417,
      -1,   419,   420,   421,   422,   423,    -1,   425,   426,   427,
      -1,    -1,   430,    -1,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,    -1,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,    -1,   466,   467,
      -1,   469,   470,   471,    -1,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,    -1,    -1,    -1,   493,   494,   495,   496,    -1,
      -1,    -1,   500,    -1,    -1,    -1,   504,    -1,   506,   507,
     508,   509,    -1,   511,   512,   513,   514,   515,    -1,    -1,
      -1,    -1,    -1,   521,   522,   523,    -1,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,   533,    -1,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,    -1,    -1,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,    -1,    -1,   564,   565,   566,   567,
      -1,   569,   570,   571,    -1,   573,   574,   575,   576,    -1,
      -1,    -1,    -1,    -1,   582,   583,    -1,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,    -1,
     598,   599,    -1,    -1,   602,    -1,    -1,   605,    -1,   607,
      -1,   609,   610,    -1,    -1,   613,   614,   615,   616,   617,
     618,    -1,    -1,   621,   622,    -1,   624,   625,    -1,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,    -1,   637,
     638,   639,    -1,   641,   642,   643,   644,    -1,    -1,   647,
      -1,    -1,    -1,   651,   652,    -1,    -1,    -1,    -1,   657,
     658,    -1,    -1,   661,   662,    -1,    -1,   665,   666,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,   212,    -1,   214,   215,
      -1,   217,   218,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,   229,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,   240,   241,   242,   243,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,   269,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,   288,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
      -1,    -1,    -1,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,   339,   340,    -1,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,   354,   355,
     356,    -1,    -1,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,   375,
      -1,   377,   378,   379,    -1,    -1,   382,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
      -1,   417,    -1,   419,   420,   421,   422,   423,    -1,   425,
     426,   427,    -1,    -1,   430,    -1,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
      -1,   447,   448,    -1,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,    -1,
     466,   467,    -1,   469,   470,   471,    -1,   473,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,    -1,   488,   489,    -1,    -1,    -1,   493,   494,   495,
     496,    -1,    -1,    -1,   500,    -1,    -1,    -1,   504,    -1,
     506,   507,   508,   509,    -1,   511,   512,   513,   514,   515,
      -1,    -1,    -1,    -1,    -1,   521,   522,   523,    -1,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,   533,    -1,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,    -1,    -1,   564,   565,
     566,   567,    -1,   569,   570,   571,    -1,   573,   574,   575,
     576,    -1,    -1,    -1,    -1,    -1,   582,   583,    -1,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,    -1,   598,   599,    -1,    -1,   602,    -1,    -1,   605,
      -1,   607,    -1,   609,   610,    -1,    -1,   613,   614,   615,
     616,   617,   618,    -1,    -1,   621,   622,    -1,   624,   625,
      -1,   627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,
      -1,   637,   638,   639,    -1,   641,   642,   643,   644,    -1,
      -1,   647,    -1,    -1,    -1,   651,   652,    -1,    -1,    -1,
      -1,   657,   658,    -1,    -1,   661,   662,    -1,    -1,   665,
     666,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    -1,    -1,   100,   101,   102,   103,
      -1,   105,   106,   107,    -1,   109,   110,   111,   112,   113,
     114,    -1,    -1,    -1,    -1,   119,   120,   121,    -1,    -1,
     124,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,   170,    -1,   172,   173,
     174,   175,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,   212,    -1,
     214,   215,    -1,   217,   218,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,   229,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,   240,   241,   242,   243,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,   269,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,   288,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,    -1,    -1,    -1,   329,   330,   331,   332,   333,
     334,    -1,    -1,   337,   338,   339,   340,    -1,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
     354,   355,   356,    -1,    -1,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,    -1,
     374,   375,    -1,   377,   378,   379,    -1,    -1,   382,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,    -1,   417,    -1,   419,   420,   421,   422,   423,
      -1,   425,   426,   427,    -1,    -1,   430,    -1,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,    -1,   447,   448,    -1,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,    -1,   466,   467,    -1,   469,   470,   471,    -1,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,    -1,   488,   489,    -1,    -1,    -1,   493,
     494,   495,   496,    -1,    -1,    -1,   500,    -1,    -1,    -1,
     504,    -1,   506,   507,   508,   509,    -1,   511,   512,   513,
     514,   515,    -1,    -1,    -1,    -1,    -1,   521,   522,   523,
      -1,   525,   526,    -1,   528,    -1,    -1,   531,    -1,   533,
      -1,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,    -1,    -1,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,    -1,    -1,
     564,   565,   566,   567,    -1,   569,   570,   571,    -1,   573,
     574,   575,   576,    -1,    -1,    -1,    -1,    -1,   582,   583,
      -1,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,    -1,   598,   599,    -1,    -1,   602,    -1,
      -1,   605,    -1,   607,    -1,   609,   610,    -1,    -1,   613,
     614,   615,   616,   617,   618,    -1,    -1,   621,   622,    -1,
     624,   625,    -1,   627,   628,   629,   630,    -1,    -1,    -1,
      -1,    -1,    -1,   637,   638,   639,    -1,   641,   642,   643,
     644,    -1,    -1,   647,    -1,    -1,    -1,   651,   652,    -1,
      -1,    -1,    -1,   657,   658,    -1,    -1,   661,   662,    -1,
      -1,   665,   666,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    -1,    -1,   100,   101,
     102,   103,    -1,   105,   106,   107,    -1,   109,   110,   111,
     112,   113,   114,    -1,    -1,    -1,    -1,   119,   120,   121,
      -1,    -1,   124,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,   170,    -1,
     172,   173,   174,   175,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,    -1,
      -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
     212,    -1,   214,   215,    -1,   217,   218,    -1,   220,   221,
      -1,    -1,    -1,   225,   226,   227,   228,   229,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,   240,   241,
     242,   243,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,
      -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,
      -1,   263,   264,    -1,    -1,   267,    -1,   269,   270,   271,
      -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,   288,    -1,    -1,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,   329,   330,   331,
     332,   333,   334,    -1,    -1,   337,   338,   339,   340,    -1,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,    -1,   354,   355,   356,    -1,    -1,   359,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,    -1,   370,   371,
     372,    -1,   374,   375,    -1,   377,   378,   379,    -1,    -1,
     382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,    -1,   417,    -1,   419,   420,   421,
     422,   423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,    -1,   447,   448,    -1,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,    -1,   466,   467,    -1,   469,   470,   471,
      -1,   473,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,    -1,   488,   489,    -1,    -1,
      -1,   493,   494,   495,   496,    -1,    -1,    -1,   500,    -1,
      -1,    -1,   504,    -1,   506,   507,   508,   509,    -1,   511,
     512,   513,   514,   515,    -1,    -1,    -1,    -1,    -1,   521,
     522,   523,    -1,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,   533,    -1,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,    -1,    -1,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
      -1,    -1,   564,   565,   566,   567,    -1,   569,   570,   571,
      -1,   573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,
     582,   583,    -1,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,    -1,   598,   599,    -1,    -1,
     602,    -1,    -1,   605,    -1,   607,    -1,   609,   610,    -1,
      -1,   613,   614,   615,   616,   617,   618,    -1,    -1,   621,
     622,    -1,   624,   625,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,    -1,   637,   638,   639,    -1,   641,
     642,   643,   644,    -1,    -1,   647,    -1,    -1,    -1,   651,
     652,    -1,    -1,    -1,    -1,   657,   658,    -1,    -1,   661,
     662,    -1,    -1,   665,   666,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    -1,    -1,
     100,   101,   102,   103,    -1,   105,   106,   107,    -1,   109,
     110,   111,   112,   113,   114,    -1,    -1,    -1,    -1,   119,
     120,   121,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
     170,    -1,   172,   173,   174,   175,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,   212,    -1,   214,   215,    -1,   217,   218,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
     240,   241,   242,   243,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,   269,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,   288,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,   339,
     340,    -1,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,   354,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,    -1,
     370,   371,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,   569,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,   613,   614,   615,   616,   617,   618,    -1,
      -1,   621,   622,    -1,   624,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,    -1,    -1,   647,    -1,    -1,
      -1,   651,   652,    -1,    -1,    -1,    -1,   657,   658,    -1,
      -1,   661,   662,    -1,    -1,   665,   666,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      -1,    -1,   100,   101,   102,   103,    -1,   105,   106,   107,
      -1,   109,   110,   111,   112,   113,   114,    -1,    -1,    -1,
      -1,   119,   120,   121,    -1,    -1,   124,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,
      -1,   199,    -1,   201,    -1,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,   212,    -1,   214,   215,    -1,   217,
     218,    -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,
     228,   229,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,   240,   241,   242,   243,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,
     258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,
      -1,   269,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
     288,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,    -1,    -1,
      -1,   329,   330,   331,   332,   333,   334,    -1,    -1,   337,
     338,   339,   340,    -1,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,   354,   355,   356,    -1,
      -1,   359,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,    -1,   370,   371,   372,    -1,   374,   375,    -1,   377,
     378,   379,    -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,    -1,   417,
      -1,   419,   420,   421,   422,   423,    -1,   425,   426,   427,
      -1,    -1,   430,    -1,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,    -1,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,    -1,   466,   467,
      -1,   469,   470,   471,    -1,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,    -1,    -1,    -1,   493,   494,   495,   496,    -1,
      -1,    -1,   500,    -1,    -1,    -1,   504,    -1,   506,   507,
     508,   509,    -1,   511,   512,   513,   514,   515,    -1,    -1,
      -1,    -1,    -1,   521,   522,   523,    -1,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,   533,    -1,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,    -1,    -1,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,    -1,    -1,   564,   565,   566,   567,
      -1,   569,   570,   571,    -1,   573,   574,   575,   576,    -1,
      -1,    -1,    -1,    -1,   582,   583,    -1,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,    -1,
     598,   599,    -1,    -1,   602,    -1,    -1,   605,    -1,   607,
      -1,   609,   610,    -1,    -1,   613,   614,   615,   616,   617,
     618,    -1,    -1,   621,   622,    -1,   624,   625,    -1,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,    -1,   637,
     638,   639,    -1,   641,   642,   643,   644,    -1,    -1,   647,
      -1,    -1,    -1,   651,   652,    -1,    -1,    -1,    -1,   657,
     658,    -1,    -1,   661,   662,    -1,    -1,   665,   666,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,   212,    -1,   214,   215,
      -1,   217,   218,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,   229,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,   240,   241,   242,   243,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,   269,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,   288,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
      -1,    -1,    -1,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,   339,   340,    -1,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,   354,   355,
     356,    -1,    -1,   359,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,    -1,   370,   371,   372,    -1,   374,   375,
      -1,   377,   378,   379,    -1,    -1,   382,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
      -1,   417,    -1,   419,   420,   421,   422,   423,    -1,   425,
     426,   427,    -1,    -1,   430,    -1,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
      -1,   447,   448,    -1,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,    -1,
     466,   467,    -1,   469,   470,   471,    -1,   473,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,    -1,   488,   489,    -1,    -1,    -1,   493,   494,   495,
     496,    -1,    -1,    -1,   500,    -1,    -1,    -1,   504,    -1,
     506,   507,   508,   509,    -1,   511,   512,   513,   514,   515,
      -1,    -1,    -1,    -1,    -1,   521,   522,   523,    -1,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,   533,    -1,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,    -1,    -1,   564,   565,
     566,   567,    -1,   569,   570,   571,    -1,   573,   574,   575,
     576,    -1,    -1,    -1,    -1,    -1,   582,   583,    -1,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,    -1,   598,   599,    -1,    -1,   602,    -1,    -1,   605,
      -1,   607,    -1,   609,   610,    -1,    -1,   613,   614,   615,
     616,   617,   618,    -1,    -1,   621,   622,    -1,   624,   625,
      -1,   627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,
      -1,   637,   638,   639,    -1,   641,   642,   643,   644,    -1,
      -1,   647,    -1,    -1,    -1,   651,   652,    -1,    -1,    -1,
      -1,   657,   658,    -1,    -1,   661,   662,    -1,    -1,   665,
     666,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    37,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,
     214,   215,    -1,   217,   218,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,   288,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,    -1,   318,   319,   320,   321,    -1,   323,
     324,    -1,    -1,    -1,    -1,   329,   330,   331,   332,   333,
     334,    -1,    -1,   337,   338,    -1,   340,    -1,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
     354,   355,   356,    -1,    -1,   359,   360,   361,   362,   363,
      -1,    -1,    -1,   367,   368,    -1,   370,   371,   372,    -1,
     374,   375,    -1,   377,   378,   379,    -1,    -1,   382,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,   393,
     394,    -1,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,    -1,   411,    -1,   413,
     414,   415,    -1,   417,    -1,   419,   420,   421,   422,   423,
      -1,   425,   426,   427,    -1,    -1,   430,    -1,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,    -1,   447,   448,    -1,   450,   451,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,    -1,   466,   467,    -1,   469,   470,   471,    -1,   473,
      -1,    -1,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,    -1,   488,   489,    -1,    -1,    -1,   493,
     494,   495,   496,    -1,    -1,    -1,   500,    -1,    -1,    -1,
     504,    -1,   506,   507,   508,   509,    -1,   511,   512,   513,
     514,   515,    -1,    -1,    -1,    -1,    -1,   521,   522,   523,
      -1,   525,   526,    -1,   528,    -1,    -1,   531,    -1,   533,
      -1,   535,   536,   537,   538,   539,   540,    -1,    -1,   543,
     544,    -1,    -1,   547,   548,   549,   550,   551,   552,    -1,
      -1,   555,   556,   557,   558,    -1,   560,   561,    -1,    -1,
     564,   565,   566,   567,    -1,   569,   570,   571,    -1,   573,
     574,   575,   576,    -1,    -1,    -1,    -1,    -1,   582,   583,
      -1,    -1,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,    -1,   598,   599,    -1,    -1,   602,    -1,
      -1,   605,    -1,   607,    -1,   609,   610,    -1,    -1,    -1,
      -1,    -1,   616,    -1,   618,    -1,    -1,   621,    -1,    -1,
      -1,   625,    -1,   627,   628,   629,   630,    -1,    -1,    -1,
      -1,    -1,    -1,   637,   638,   639,    -1,   641,   642,   643,
     644,    -1,    -1,   647,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,   665,   666,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,   198,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,   234,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,   261,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,   516,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,    -1,    -1,   647,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,   666,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,   144,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,   185,
     186,    -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,
      -1,   217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,    -1,   318,   319,   320,   321,    -1,   323,   324,    -1,
      -1,    -1,    -1,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,    -1,   340,    -1,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,    -1,   355,
     356,    -1,    -1,   359,   360,   361,   362,   363,    -1,    -1,
      -1,   367,   368,    -1,    -1,    -1,   372,    -1,   374,   375,
      -1,   377,   378,   379,    -1,    -1,   382,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   392,   393,   394,    -1,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,    -1,   411,    -1,   413,   414,   415,
      -1,   417,    -1,   419,   420,   421,   422,   423,    -1,   425,
     426,   427,    -1,    -1,   430,    -1,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
      -1,   447,   448,    -1,   450,   451,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,    -1,
     466,   467,    -1,   469,   470,   471,    -1,   473,    -1,    -1,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,    -1,   488,   489,   490,    -1,    -1,   493,   494,   495,
     496,    -1,    -1,    -1,   500,    -1,    -1,    -1,   504,    -1,
     506,   507,   508,   509,    -1,   511,   512,   513,   514,   515,
      -1,    -1,    -1,    -1,    -1,   521,   522,   523,    -1,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,   533,    -1,   535,
     536,   537,   538,   539,   540,    -1,    -1,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,   552,    -1,    -1,   555,
     556,   557,   558,    -1,   560,   561,    -1,    -1,   564,   565,
     566,   567,    -1,    -1,   570,   571,    -1,   573,   574,   575,
     576,    -1,    -1,    -1,    -1,    -1,   582,   583,    -1,    -1,
      -1,   587,   588,   589,   590,    -1,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,   602,    -1,    -1,   605,
      -1,   607,    -1,   609,   610,    -1,    -1,    -1,    -1,    -1,
     616,    -1,   618,    -1,    -1,   621,    -1,    -1,    -1,   625,
      -1,   627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,
      -1,   637,   638,   639,    -1,   641,   642,   643,   644,    -1,
      -1,   647,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,   658,    15,    16,    -1,   662,    -1,    20,    -1,
     666,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,
      -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,   185,   186,    -1,    -1,   189,   190,    -1,
      -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,    -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,
      -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,
     242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,
      -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,
      -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,
      -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,    -1,   318,   319,   320,   321,
      -1,   323,   324,    -1,    -1,    -1,    -1,   329,   330,   331,
     332,   333,   334,    -1,    -1,   337,   338,    -1,   340,    -1,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,    -1,    -1,   355,   356,    -1,    -1,   359,   360,   361,
     362,   363,    -1,    -1,    -1,   367,   368,    -1,    -1,    -1,
     372,    -1,   374,   375,    -1,   377,   378,   379,    -1,    -1,
     382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     392,   393,   394,    -1,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,    -1,   411,
      -1,   413,   414,   415,    -1,   417,    -1,   419,   420,   421,
     422,   423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,    -1,   447,   448,    -1,   450,   451,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,    -1,   466,   467,    -1,   469,   470,   471,
      -1,   473,    -1,    -1,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,    -1,   488,   489,   490,    -1,
      -1,   493,   494,   495,   496,    -1,    -1,    -1,   500,    -1,
      -1,    -1,   504,    -1,   506,   507,   508,   509,    -1,   511,
     512,   513,   514,   515,    -1,    -1,    -1,    -1,    -1,   521,
     522,   523,    -1,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,   533,    -1,   535,   536,   537,   538,   539,   540,    -1,
      -1,   543,   544,    -1,    -1,   547,   548,   549,   550,   551,
     552,    -1,    -1,   555,   556,   557,   558,    -1,   560,   561,
      -1,    -1,   564,   565,   566,   567,    -1,    -1,   570,   571,
      -1,   573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,
     582,   583,    -1,    -1,    -1,   587,   588,   589,   590,    -1,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
     602,    -1,    -1,   605,    -1,   607,    -1,   609,   610,    -1,
      -1,    -1,    -1,    -1,   616,    -1,   618,    -1,    -1,   621,
      -1,    -1,    -1,   625,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,    -1,   637,   638,   639,    -1,   641,
     642,   643,   644,    -1,    -1,   647,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,   658,    15,    16,    -1,
     662,    -1,    20,    -1,   666,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,    -1,   182,   183,   184,   185,   186,    -1,
      -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,
      -1,   199,    -1,   201,    -1,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,   217,
      -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,
     258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,
      -1,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,    -1,
     318,   319,   320,   321,    -1,   323,   324,    -1,    -1,    -1,
      -1,   329,   330,   331,   332,   333,   334,    -1,    -1,   337,
     338,    -1,   340,    -1,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,    -1,   355,   356,    -1,
      -1,   359,   360,   361,   362,   363,    -1,    -1,    -1,   367,
     368,    -1,    -1,    -1,   372,    -1,   374,   375,    -1,   377,
     378,   379,    -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   392,   393,   394,    -1,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,    -1,   411,    -1,   413,   414,   415,    -1,   417,
      -1,   419,   420,   421,   422,   423,    -1,   425,   426,   427,
      -1,    -1,   430,    -1,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,    -1,   447,
     448,    -1,   450,   451,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,    -1,   466,   467,
      -1,   469,   470,   471,    -1,   473,    -1,    -1,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,   490,    -1,    -1,   493,   494,   495,   496,    -1,
      -1,    -1,   500,    -1,    -1,    -1,   504,    -1,   506,   507,
     508,   509,    -1,   511,   512,   513,   514,   515,    -1,    -1,
      -1,    -1,    -1,   521,   522,   523,    -1,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,   533,    -1,   535,   536,   537,
     538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,   547,
     548,   549,   550,   551,   552,    -1,    -1,   555,   556,   557,
     558,    -1,   560,   561,    -1,    -1,   564,   565,   566,   567,
      -1,    -1,   570,   571,    -1,   573,   574,   575,   576,    -1,
      -1,    -1,    -1,    -1,   582,   583,    -1,    -1,    -1,   587,
     588,   589,   590,    -1,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,   602,    -1,    -1,   605,    -1,   607,
      -1,   609,   610,    -1,    -1,    -1,    -1,    -1,   616,    -1,
     618,    -1,    -1,   621,    -1,    -1,    -1,   625,    -1,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,    -1,   637,
     638,   639,    -1,   641,   642,   643,   644,    -1,    -1,   647,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
     658,    15,    16,    -1,    -1,    -1,    20,    -1,   666,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,
     214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,    -1,   318,   319,   320,   321,    -1,   323,
     324,    -1,    -1,    -1,    -1,   329,   330,   331,   332,   333,
     334,    -1,    -1,   337,   338,    -1,   340,    -1,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
      -1,   355,   356,    -1,    -1,   359,   360,   361,   362,   363,
      -1,    -1,    -1,   367,   368,    -1,    -1,    -1,   372,    -1,
     374,   375,    -1,   377,   378,   379,    -1,    -1,   382,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,   393,
     394,    -1,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,    -1,   411,    -1,   413,
     414,   415,    -1,   417,    -1,   419,   420,   421,   422,   423,
      -1,   425,   426,   427,    -1,    -1,   430,    -1,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,    -1,   447,   448,    -1,   450,   451,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,    -1,   466,   467,    -1,   469,   470,   471,    -1,   473,
      -1,    -1,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,    -1,   488,   489,   490,    -1,    -1,   493,
     494,   495,   496,    -1,    -1,    -1,   500,    -1,    -1,    -1,
     504,    -1,   506,   507,   508,   509,    -1,   511,   512,   513,
     514,   515,    -1,    -1,    -1,    -1,    -1,   521,   522,   523,
      -1,   525,   526,    -1,   528,    -1,    -1,   531,    -1,   533,
      -1,   535,   536,   537,   538,   539,   540,    -1,    -1,   543,
     544,    -1,    -1,   547,   548,   549,   550,   551,   552,    -1,
      -1,   555,   556,   557,   558,    -1,   560,   561,    -1,    -1,
     564,   565,   566,   567,    -1,    -1,   570,   571,    -1,   573,
     574,   575,   576,    -1,    -1,    -1,    -1,    -1,   582,   583,
      -1,    -1,    -1,   587,   588,   589,   590,    -1,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,   602,    -1,
      -1,   605,    -1,   607,    -1,   609,   610,    -1,    -1,    -1,
      -1,    -1,   616,    -1,   618,    -1,    -1,   621,    -1,    -1,
      -1,   625,    -1,   627,   628,   629,   630,    -1,    -1,    -1,
      -1,    -1,    -1,   637,   638,   639,    -1,   641,   642,   643,
     644,    -1,    -1,   647,    -1,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,   659,    15,    16,    -1,    -1,
      -1,    20,   666,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    -1,
      89,    90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,
      -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,
      -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,   138,
      -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,
      -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,   158,
      -1,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
     169,    -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,
     179,   180,    -1,   182,   183,   184,   185,   186,    -1,    -1,
     189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,
     199,    -1,   201,    -1,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,
      -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,
      -1,    -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,
      -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,
      -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,
      -1,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,
      -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,    -1,   318,
     319,   320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,
     329,   330,   331,   332,   333,   334,    -1,    -1,   337,   338,
      -1,   340,    -1,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,
     359,   360,   361,   362,   363,    -1,    -1,    -1,   367,   368,
      -1,    -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,
     379,    -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   392,   393,   394,    -1,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,    -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,
     419,   420,   421,   422,   423,    -1,   425,   426,   427,    -1,
      -1,   430,    -1,    -1,    -1,   434,   435,   436,   437,   438,
      -1,    -1,   441,   442,   443,   444,   445,    -1,   447,   448,
      -1,   450,   451,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,    -1,   466,   467,    -1,
     469,   470,   471,    -1,   473,    -1,    -1,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,    -1,   488,
     489,    -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,
      -1,   500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,
     509,    -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,
      -1,    -1,   521,   522,   523,    -1,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,   533,    -1,   535,   536,   537,   538,
     539,   540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,
     549,   550,   551,   552,    -1,    -1,   555,   556,   557,   558,
      -1,   560,   561,    -1,    -1,   564,   565,   566,   567,    -1,
      -1,   570,   571,    -1,   573,   574,   575,   576,    -1,    -1,
      -1,    -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,
     589,   590,    -1,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,
     609,   610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,
      -1,    -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,
     629,   630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,
     639,    -1,   641,   642,   643,   644,    -1,    -1,   647,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     5,     6,
     659,     8,     9,    10,    11,    12,   665,   666,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,
      97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,   169,    -1,    -1,   172,   173,   174,   175,   176,
      -1,    -1,   179,   180,    -1,   182,   183,   184,   185,   186,
      -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,
     197,    -1,   199,    -1,   201,    -1,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,
     217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,
     227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
      -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,
      -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,
      -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,
     267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,
     277,   278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
      -1,   318,   319,   320,   321,    -1,   323,   324,    -1,    -1,
      -1,    -1,   329,   330,   331,   332,   333,   334,    -1,    -1,
     337,   338,    -1,   340,    -1,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,    -1,    -1,   355,   356,
      -1,    -1,   359,   360,   361,   362,   363,    -1,    -1,    -1,
     367,   368,    -1,    -1,    -1,   372,    -1,   374,   375,    -1,
     377,   378,   379,    -1,    -1,   382,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   392,   393,   394,    -1,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,    -1,   411,    -1,   413,   414,   415,    -1,
     417,    -1,   419,   420,   421,   422,   423,    -1,   425,   426,
     427,    -1,    -1,   430,    -1,    -1,    -1,   434,   435,   436,
     437,   438,    -1,    -1,   441,   442,   443,   444,   445,    -1,
     447,   448,    -1,   450,   451,   452,    -1,    -1,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,    -1,   466,
     467,    -1,   469,   470,   471,    -1,   473,    -1,    -1,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
      -1,   488,   489,    -1,    -1,    -1,   493,   494,   495,   496,
      -1,    -1,    -1,   500,    -1,    -1,    -1,   504,    -1,   506,
     507,   508,   509,    -1,   511,   512,   513,   514,   515,    -1,
      -1,    -1,    -1,    -1,   521,   522,   523,    -1,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,   533,    -1,   535,   536,
     537,   538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,
     547,   548,   549,   550,   551,   552,    -1,    -1,   555,   556,
     557,   558,    -1,   560,   561,    -1,    -1,   564,   565,   566,
     567,    -1,    -1,   570,   571,    -1,   573,   574,   575,   576,
      -1,    -1,    -1,    -1,    -1,   582,   583,    -1,    -1,    -1,
     587,   588,   589,   590,    -1,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,    -1,   602,    -1,    -1,   605,    -1,
     607,    -1,   609,   610,    -1,    -1,    -1,    -1,    -1,   616,
      -1,   618,    -1,    -1,   621,    -1,    -1,    -1,   625,    -1,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,    -1,
     637,   638,   639,    -1,   641,   642,   643,   644,    -1,    -1,
     647,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,   658,    15,    16,    -1,    -1,    -1,    20,    -1,   666,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,
      -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
      -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,
      -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,
      -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,
     253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,
     263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,
      -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,
      -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,    -1,   318,   319,   320,   321,    -1,
     323,   324,    -1,    -1,    -1,    -1,   329,   330,   331,   332,
     333,   334,    -1,    -1,   337,   338,    -1,   340,    -1,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,    -1,   355,   356,    -1,    -1,   359,   360,   361,   362,
     363,    -1,    -1,    -1,   367,   368,    -1,    -1,    -1,   372,
      -1,   374,   375,    -1,   377,   378,   379,    -1,    -1,   382,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,
     393,   394,    -1,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,    -1,   411,    -1,
     413,   414,   415,    -1,   417,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,    -1,
      -1,   434,   435,   436,   437,   438,    -1,    -1,   441,   442,
     443,   444,   445,    -1,   447,   448,    -1,   450,   451,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,    -1,   466,   467,    -1,   469,   470,   471,    -1,
     473,    -1,    -1,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,    -1,   488,   489,    -1,    -1,    -1,
     493,   494,   495,   496,    -1,    -1,    -1,   500,    -1,    -1,
      -1,   504,    -1,   506,   507,   508,   509,    -1,   511,   512,
     513,   514,   515,    -1,    -1,    -1,    -1,    -1,   521,   522,
     523,    -1,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
     533,    -1,   535,   536,   537,   538,   539,   540,    -1,    -1,
     543,   544,    -1,    -1,   547,   548,   549,   550,   551,   552,
      -1,    -1,   555,   556,   557,   558,    -1,   560,   561,    -1,
      -1,   564,   565,   566,   567,    -1,    -1,   570,   571,    -1,
     573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,   582,
     583,    -1,    -1,    -1,   587,   588,   589,   590,    -1,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,   602,
      -1,    -1,   605,    -1,   607,    -1,   609,   610,    -1,    -1,
      -1,    -1,    -1,   616,    -1,   618,    -1,    -1,   621,    -1,
      -1,    -1,   625,    -1,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,    -1,   637,   638,   639,    -1,   641,   642,
     643,   644,    -1,    -1,   647,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,   658,    15,    16,    -1,    -1,
      -1,    20,    -1,   666,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    -1,
      89,    90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,
      -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,
      -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,   138,
      -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,
      -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,   158,
      -1,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
     169,    -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,
     179,   180,    -1,   182,   183,   184,   185,   186,    -1,    -1,
     189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,
     199,    -1,   201,    -1,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,
      -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,
      -1,    -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,
      -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,
      -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,
      -1,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,
      -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,    -1,   318,
     319,   320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,
     329,   330,   331,   332,   333,   334,    -1,    -1,   337,   338,
      -1,   340,    -1,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,
     359,   360,   361,   362,   363,    -1,    -1,    -1,   367,   368,
      -1,    -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,
     379,    -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   392,   393,   394,    -1,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,    -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,
     419,   420,   421,   422,   423,    -1,   425,   426,   427,    -1,
      -1,   430,    -1,    -1,    -1,   434,   435,   436,   437,   438,
      -1,    -1,   441,   442,   443,   444,   445,    -1,   447,   448,
      -1,   450,   451,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,    -1,   466,   467,    -1,
     469,   470,   471,    -1,   473,    -1,    -1,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,    -1,   488,
     489,    -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,
      -1,   500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,
     509,    -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,
      -1,    -1,   521,   522,   523,    -1,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,   533,    -1,   535,   536,   537,   538,
     539,   540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,
     549,   550,   551,   552,    -1,    -1,   555,   556,   557,   558,
      -1,   560,   561,    -1,    -1,   564,   565,   566,   567,    -1,
      -1,   570,   571,    -1,   573,   574,   575,   576,    -1,    -1,
      -1,    -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,
     589,   590,    -1,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,
     609,   610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,
      -1,    -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,
     629,   630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,
     639,    -1,   641,   642,   643,   644,    -1,    -1,   647,    -1,
      -1,    -1,    -1,    -1,   653,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,   666,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,    -1,    -1,   647,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,   665,   666,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,   185,
     186,    -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,
      -1,   217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,    -1,   318,   319,   320,   321,    -1,   323,   324,    -1,
      -1,    -1,    -1,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,    -1,   340,    -1,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,    -1,   355,
     356,    -1,    -1,   359,   360,   361,   362,   363,    -1,    -1,
      -1,   367,   368,    -1,    -1,    -1,   372,    -1,   374,   375,
      -1,   377,   378,   379,    -1,    -1,   382,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   392,   393,   394,    -1,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,    -1,   411,    -1,   413,   414,   415,
      -1,   417,    -1,   419,   420,   421,   422,   423,    -1,   425,
     426,   427,    -1,    -1,   430,    -1,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
      -1,   447,   448,    -1,   450,   451,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,    -1,
     466,   467,    -1,   469,   470,   471,    -1,   473,    -1,    -1,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,    -1,   488,   489,    -1,    -1,    -1,   493,   494,   495,
     496,    -1,    -1,    -1,   500,    -1,    -1,    -1,   504,    -1,
     506,   507,   508,   509,    -1,   511,   512,   513,   514,   515,
      -1,    -1,    -1,    -1,    -1,   521,   522,   523,    -1,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,   533,    -1,   535,
     536,   537,   538,   539,   540,    -1,    -1,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,   552,    -1,    -1,   555,
     556,   557,   558,    -1,   560,   561,    -1,    -1,   564,   565,
     566,   567,    -1,    -1,   570,   571,    -1,   573,   574,   575,
     576,    -1,    -1,    -1,    -1,    -1,   582,   583,    -1,    -1,
      -1,   587,   588,   589,   590,    -1,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,   602,    -1,    -1,   605,
      -1,   607,    -1,   609,   610,    -1,    -1,    -1,    -1,    -1,
     616,    -1,   618,    -1,    -1,   621,    -1,    -1,    -1,   625,
      -1,   627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,
      -1,   637,   638,   639,    -1,   641,   642,   643,   644,    -1,
      -1,   647,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
     666,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,
      -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,   185,   186,    -1,    -1,   189,   190,    -1,
      -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,    -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,
      -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,
     242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,
      -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,
      -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,
      -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,    -1,   318,   319,   320,   321,
      -1,   323,   324,    -1,    -1,    -1,    -1,   329,   330,   331,
     332,   333,   334,    -1,    -1,   337,   338,    -1,   340,    -1,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,    -1,    -1,   355,   356,    -1,    -1,   359,   360,   361,
     362,   363,    -1,    -1,    -1,   367,   368,    -1,    -1,    -1,
     372,    -1,   374,   375,    -1,   377,   378,   379,    -1,    -1,
     382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     392,   393,   394,    -1,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,    -1,   411,
      -1,   413,   414,   415,    -1,   417,    -1,   419,   420,   421,
     422,   423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,    -1,   447,   448,    -1,   450,   451,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,    -1,   466,   467,    -1,   469,   470,   471,
      -1,   473,    -1,    -1,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,    -1,   488,   489,    -1,    -1,
      -1,   493,   494,   495,   496,    -1,    -1,    -1,   500,    -1,
      -1,    -1,   504,    -1,   506,   507,   508,   509,    -1,   511,
     512,   513,   514,   515,    -1,    -1,    -1,    -1,    -1,   521,
     522,   523,    -1,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,   533,    -1,   535,   536,   537,   538,   539,   540,    -1,
      -1,   543,   544,    -1,    -1,   547,   548,   549,   550,   551,
     552,    -1,    -1,   555,   556,   557,   558,    -1,   560,   561,
      -1,    -1,   564,   565,   566,   567,    -1,    -1,   570,   571,
      -1,   573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,
     582,   583,    -1,    -1,    -1,   587,   588,   589,   590,    -1,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
     602,    -1,    -1,   605,    -1,   607,    -1,   609,   610,    -1,
      -1,    -1,    -1,    -1,   616,    -1,   618,    -1,    -1,   621,
      -1,    -1,    -1,   625,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,    -1,   637,   638,   639,    -1,   641,
     642,   643,   644,    -1,    -1,   647,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,   666,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,    -1,   182,   183,   184,   185,   186,    -1,
      -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,
      -1,   199,    -1,   201,    -1,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,   217,
      -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,
     258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,
      -1,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,    -1,
     318,   319,   320,   321,    -1,   323,   324,    -1,    -1,    -1,
      -1,   329,   330,   331,   332,   333,   334,    -1,    -1,   337,
     338,    -1,   340,    -1,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,    -1,   355,   356,    -1,
      -1,   359,   360,   361,   362,   363,    -1,    -1,    -1,   367,
     368,    -1,    -1,    -1,   372,    -1,   374,   375,    -1,   377,
     378,   379,    -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   392,   393,   394,    -1,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,    -1,   411,    -1,   413,   414,   415,    -1,   417,
      -1,   419,   420,   421,   422,   423,    -1,   425,   426,   427,
      -1,    -1,   430,    -1,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,    -1,   447,
     448,    -1,   450,   451,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,    -1,   466,   467,
      -1,   469,   470,   471,    -1,   473,    -1,    -1,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,    -1,    -1,    -1,   493,   494,   495,   496,    -1,
      -1,    -1,   500,    -1,    -1,    -1,   504,    -1,   506,   507,
     508,   509,    -1,   511,   512,   513,   514,   515,    -1,    -1,
      -1,    -1,    -1,   521,   522,   523,    -1,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,   533,    -1,   535,   536,   537,
     538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,   547,
     548,   549,   550,   551,   552,    -1,    -1,   555,   556,   557,
     558,    -1,   560,   561,    -1,    -1,   564,   565,   566,   567,
      -1,    -1,   570,   571,    -1,   573,   574,   575,   576,    -1,
      -1,    -1,    -1,    -1,   582,   583,    -1,    -1,    -1,   587,
     588,   589,   590,    -1,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,   602,    -1,    -1,   605,    -1,   607,
      -1,   609,   610,    -1,    -1,    -1,    -1,    -1,   616,    -1,
     618,    -1,    -1,   621,    -1,    -1,    -1,   625,    -1,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,    -1,   637,
     638,   639,    -1,   641,   642,   643,   644,    -1,    -1,   647,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,   666,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,
     214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,    -1,   318,   319,   320,   321,    -1,   323,
     324,    -1,    -1,    -1,    -1,   329,   330,   331,   332,   333,
     334,    -1,    -1,   337,   338,    -1,   340,    -1,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
      -1,   355,   356,    -1,    -1,   359,   360,   361,   362,   363,
      -1,    -1,    -1,   367,   368,    -1,    -1,    -1,   372,    -1,
     374,   375,    -1,   377,   378,   379,    -1,    -1,   382,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,   393,
     394,    -1,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,    -1,   411,    -1,   413,
     414,   415,    -1,   417,    -1,   419,   420,   421,   422,   423,
      -1,   425,   426,   427,    -1,    -1,   430,    -1,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,    -1,   447,   448,    -1,   450,   451,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,    -1,   466,   467,    -1,   469,   470,   471,    -1,   473,
      -1,    -1,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,    -1,   488,   489,    -1,    -1,    -1,   493,
     494,   495,   496,    -1,    -1,    -1,   500,    -1,    -1,    -1,
     504,    -1,   506,   507,   508,   509,    -1,   511,   512,   513,
     514,   515,    -1,    -1,    -1,    -1,    -1,   521,   522,   523,
      -1,   525,   526,    -1,   528,    -1,    -1,   531,    -1,   533,
      -1,   535,   536,   537,   538,   539,   540,    -1,    -1,   543,
     544,    -1,    -1,   547,   548,   549,   550,   551,   552,    -1,
      -1,   555,   556,   557,   558,    -1,   560,   561,    -1,    -1,
     564,   565,   566,   567,    -1,    -1,   570,   571,    -1,   573,
     574,   575,   576,    -1,    -1,    -1,    -1,    -1,   582,   583,
      -1,    -1,    -1,   587,   588,   589,   590,    -1,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,   602,    -1,
      -1,   605,    -1,   607,    -1,   609,   610,    -1,    -1,    -1,
      -1,    -1,   616,    -1,   618,    -1,    -1,   621,    -1,    -1,
      -1,   625,    -1,   627,   628,   629,   630,    -1,    -1,    -1,
      -1,    -1,    -1,   637,   638,   639,    -1,   641,   642,   643,
     644,    -1,    -1,   647,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,   666,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     390,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,   569,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,    -1,    -1,   647,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,   665,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,
      97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,    -1,    -1,    -1,   124,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,   169,    -1,    -1,   172,   173,   174,   175,   176,
      -1,    -1,   179,   180,    -1,   182,   183,   184,   185,   186,
      -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,
     197,    -1,   199,    -1,   201,    -1,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,
     217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,
     227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
      -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,
      -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,
      -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,
     267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,
     277,   278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
      -1,   318,   319,   320,   321,    -1,   323,   324,    -1,    -1,
      -1,    -1,   329,   330,   331,   332,   333,   334,    -1,    -1,
     337,   338,    -1,   340,    -1,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,    -1,    -1,   355,   356,
      -1,    -1,   359,   360,   361,   362,   363,    -1,    -1,    -1,
     367,   368,    -1,    -1,    -1,   372,    -1,   374,   375,    -1,
     377,   378,   379,    -1,    -1,   382,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   392,   393,   394,    -1,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,    -1,   411,    -1,   413,   414,   415,    -1,
     417,    -1,   419,   420,   421,   422,   423,    -1,   425,   426,
     427,    -1,    -1,   430,    -1,    -1,    -1,   434,   435,   436,
     437,   438,    -1,    -1,   441,   442,   443,   444,   445,    -1,
     447,   448,    -1,   450,   451,   452,    -1,    -1,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,    -1,   466,
     467,    -1,   469,   470,   471,    -1,   473,    -1,    -1,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
      -1,   488,   489,    -1,    -1,    -1,   493,   494,   495,   496,
      -1,    -1,    -1,   500,    -1,    -1,    -1,   504,    -1,   506,
     507,   508,   509,    -1,   511,   512,   513,   514,   515,    -1,
      -1,    -1,    -1,    -1,   521,   522,   523,    -1,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,   533,    -1,   535,   536,
     537,   538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,
     547,   548,   549,   550,   551,   552,    -1,    -1,   555,   556,
     557,   558,    -1,   560,   561,    -1,    -1,   564,   565,   566,
     567,    -1,    -1,   570,   571,    -1,   573,   574,   575,   576,
      -1,    -1,    -1,    -1,    -1,   582,   583,    -1,    -1,    -1,
     587,   588,   589,   590,    -1,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,    -1,   602,    -1,    -1,   605,    -1,
     607,    -1,   609,   610,    -1,    -1,    -1,    -1,    -1,   616,
      -1,   618,    -1,    -1,   621,    -1,    -1,    -1,   625,    -1,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,    -1,
     637,   638,   639,    -1,   641,   642,   643,   644,    -1,    -1,
     647,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,   665,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,
     214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,   270,   271,   272,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,    -1,   318,   319,   320,   321,    -1,   323,
     324,    -1,    -1,    -1,    -1,   329,   330,   331,   332,   333,
     334,    -1,    -1,   337,   338,    -1,   340,    -1,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
      -1,   355,   356,    -1,    -1,   359,   360,   361,   362,   363,
      -1,    -1,    -1,   367,   368,    -1,    -1,    -1,   372,    -1,
     374,   375,    -1,   377,   378,   379,    -1,    -1,   382,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,   393,
     394,    -1,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,    -1,   411,    -1,   413,
     414,   415,    -1,   417,    -1,   419,   420,   421,   422,   423,
      -1,   425,   426,   427,    -1,    -1,   430,    -1,    -1,    -1,
     434,   435,   436,   437,   438,    -1,    -1,   441,   442,   443,
     444,   445,    -1,   447,   448,    -1,   450,   451,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,    -1,   466,   467,    -1,   469,   470,   471,    -1,   473,
      -1,    -1,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,    -1,   488,   489,    -1,    -1,    -1,   493,
     494,   495,   496,    -1,    -1,    -1,   500,    -1,    -1,    -1,
     504,    -1,   506,   507,   508,   509,    -1,   511,   512,   513,
     514,   515,    -1,    -1,    -1,    -1,    -1,   521,   522,   523,
      -1,   525,   526,    -1,   528,    -1,    -1,   531,    -1,   533,
      -1,   535,   536,   537,   538,   539,   540,    -1,    -1,   543,
     544,    -1,    -1,   547,   548,   549,   550,   551,   552,    -1,
      -1,   555,   556,   557,   558,    -1,   560,   561,    -1,    -1,
     564,   565,   566,   567,    -1,   569,   570,   571,    -1,   573,
     574,   575,   576,    -1,    -1,    -1,    -1,    -1,   582,   583,
      -1,    -1,    -1,   587,   588,   589,   590,    -1,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,   602,    -1,
      -1,   605,    -1,   607,    -1,   609,   610,    -1,    -1,    -1,
      -1,    -1,   616,    -1,   618,    -1,    -1,   621,    -1,    -1,
      -1,   625,    -1,   627,   628,   629,   630,    -1,    -1,    -1,
      -1,    -1,    -1,   637,   638,   639,    -1,   641,   642,   643,
     644,    -1,    -1,   647,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,   665,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    -1,    89,    90,
      91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,
      -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,
      -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,
      -1,   132,    -1,   134,   135,   136,   137,   138,    -1,    -1,
      -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,   169,    -1,
      -1,   172,   173,   174,   175,   176,    -1,    -1,   179,   180,
      -1,   182,   183,   184,   185,   186,    -1,    -1,   189,   190,
      -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,
     201,    -1,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,   220,
     221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,
     241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,
     251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,
      -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,
      -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,    -1,   314,   315,   316,    -1,   318,   319,   320,
     321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,   330,
     331,   332,   333,   334,    -1,    -1,   337,   338,    -1,   340,
      -1,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,   360,
     361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,    -1,
      -1,   372,    -1,   374,   375,    -1,   377,   378,   379,    -1,
      -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   392,   393,   394,    -1,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,    -1,
     411,    -1,   413,   414,   415,    -1,   417,    -1,   419,   420,
     421,   422,   423,    -1,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,
     441,   442,   443,   444,   445,    -1,   447,   448,    -1,   450,
     451,   452,    -1,    -1,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,    -1,   466,   467,    -1,   469,   470,
     471,    -1,   473,    -1,    -1,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,    -1,   488,   489,    -1,
      -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,   500,
      -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,    -1,
     511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,    -1,
     521,   522,   523,    -1,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,   533,    -1,   535,   536,   537,   538,   539,   540,
      -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,   550,
     551,   552,    -1,    -1,   555,   556,   557,   558,    -1,   560,
     561,    -1,    -1,   564,   565,   566,   567,    -1,   569,   570,
     571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,    -1,
      -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,   590,
      -1,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
      -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,   610,
      -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,    -1,
     621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,   630,
      -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,    -1,
     641,   642,   643,   644,    -1,    -1,   647,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,   665,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,    -1,    -1,    -1,   124,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,    -1,   182,   183,   184,   185,   186,    -1,
      -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,
      -1,   199,    -1,   201,    -1,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,   217,
      -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,
     258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,
      -1,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,    -1,
     318,   319,   320,   321,    -1,   323,   324,    -1,    -1,    -1,
      -1,   329,   330,   331,   332,   333,   334,    -1,    -1,   337,
     338,    -1,   340,    -1,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,    -1,   355,   356,    -1,
      -1,   359,   360,   361,   362,   363,    -1,    -1,    -1,   367,
     368,    -1,    -1,    -1,   372,    -1,   374,   375,    -1,   377,
     378,   379,    -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   392,   393,   394,    -1,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,    -1,   411,    -1,   413,   414,   415,    -1,   417,
      -1,   419,   420,   421,   422,   423,    -1,   425,   426,   427,
      -1,    -1,   430,    -1,    -1,    -1,   434,   435,   436,   437,
     438,    -1,    -1,   441,   442,   443,   444,   445,    -1,   447,
     448,    -1,   450,   451,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,    -1,   466,   467,
      -1,   469,   470,   471,    -1,   473,    -1,    -1,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,    -1,
     488,   489,    -1,    -1,    -1,   493,   494,   495,   496,    -1,
      -1,    -1,   500,    -1,    -1,    -1,   504,    -1,   506,   507,
     508,   509,    -1,   511,   512,   513,   514,   515,    -1,    -1,
      -1,    -1,    -1,   521,   522,   523,    -1,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,   533,    -1,   535,   536,   537,
     538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,   547,
     548,   549,   550,   551,   552,    -1,    -1,   555,   556,   557,
     558,    -1,   560,   561,    -1,    -1,   564,   565,   566,   567,
      -1,    -1,   570,   571,    -1,   573,   574,   575,   576,    -1,
      -1,    -1,    -1,    -1,   582,   583,    -1,    -1,    -1,   587,
     588,   589,   590,    -1,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,   602,    -1,    -1,   605,    -1,   607,
      -1,   609,   610,    -1,    -1,    -1,    -1,    -1,   616,    -1,
     618,    -1,    -1,   621,    -1,    -1,    -1,   625,    -1,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,    -1,   637,
     638,   639,    -1,   641,   642,   643,   644,    -1,    -1,   647,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,   665,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    -1,    89,    90,    91,    92,    93,    -1,
      -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,
     125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,
     135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,
     145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,
      -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,   169,    -1,    -1,   172,   173,   174,
     175,   176,    -1,    -1,   179,   180,    -1,   182,   183,   184,
     185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,   194,
     195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,
     215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,    -1,
     225,   226,   227,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,
      -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,
      -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,
      -1,    -1,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
      -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,
     285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,    -1,   318,   319,   320,   321,    -1,   323,   324,
      -1,    -1,    -1,    -1,   329,   330,   331,   332,   333,   334,
      -1,    -1,   337,   338,    -1,   340,    -1,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,    -1,    -1,
     355,   356,    -1,    -1,   359,   360,   361,   362,   363,    -1,
      -1,    -1,   367,   368,    -1,    -1,    -1,   372,    -1,   374,
     375,    -1,   377,   378,   379,    -1,    -1,   382,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,   393,   394,
      -1,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,    -1,   411,    -1,   413,   414,
     415,    -1,   417,    -1,   419,   420,   421,   422,   423,    -1,
     425,   426,   427,    -1,    -1,   430,    -1,    -1,    -1,   434,
     435,   436,   437,   438,    -1,    -1,   441,   442,   443,   444,
     445,    -1,   447,   448,    -1,   450,   451,   452,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
      -1,   466,   467,    -1,   469,   470,   471,    -1,   473,    -1,
      -1,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,    -1,   488,   489,    -1,    -1,    -1,   493,   494,
     495,   496,    -1,    -1,    -1,   500,    -1,    -1,    -1,   504,
      -1,   506,   507,   508,   509,    -1,   511,   512,   513,   514,
     515,    -1,    -1,    -1,    -1,    -1,   521,   522,   523,    -1,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,   533,    -1,
     535,   536,   537,   538,   539,   540,    -1,    -1,   543,   544,
      -1,    -1,   547,   548,   549,   550,   551,   552,    -1,    -1,
     555,   556,   557,   558,    -1,   560,   561,    -1,    -1,   564,
     565,   566,   567,    -1,   569,   570,   571,    -1,   573,   574,
     575,   576,    -1,    -1,    -1,    -1,    -1,   582,   583,    -1,
      -1,    -1,   587,   588,   589,   590,    -1,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,    -1,   602,    -1,    -1,
     605,    -1,   607,    -1,   609,   610,    -1,    -1,    -1,    -1,
      -1,   616,    -1,   618,    -1,    -1,   621,    -1,    -1,    -1,
     625,    -1,   627,   628,   629,   630,    -1,    -1,    -1,    -1,
      -1,    -1,   637,   638,   639,    -1,   641,   642,   643,   644,
      -1,    -1,   647,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
     665,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,
      -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,   185,   186,    -1,    -1,   189,   190,    -1,
      -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,    -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,
      -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,
     242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,
      -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,
      -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,
      -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,    -1,   318,   319,   320,   321,
      -1,   323,   324,    -1,    -1,    -1,    -1,   329,   330,   331,
     332,   333,   334,    -1,    -1,   337,   338,    -1,   340,    -1,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,    -1,    -1,   355,   356,    -1,    -1,   359,   360,   361,
     362,   363,    -1,    -1,    -1,   367,   368,    -1,    -1,    -1,
     372,    -1,   374,   375,    -1,   377,   378,   379,    -1,    -1,
     382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     392,   393,   394,    -1,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,    -1,   411,
      -1,   413,   414,   415,    -1,   417,    -1,   419,   420,   421,
     422,   423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,
      -1,    -1,   434,   435,   436,   437,   438,    -1,    -1,   441,
     442,   443,   444,   445,    -1,   447,   448,    -1,   450,   451,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,    -1,   466,   467,    -1,   469,   470,   471,
      -1,   473,    -1,    -1,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,    -1,   488,   489,    -1,    -1,
      -1,   493,   494,   495,   496,    -1,    -1,    -1,   500,    -1,
      -1,    -1,   504,    -1,   506,   507,   508,   509,    -1,   511,
     512,   513,   514,   515,    -1,    -1,    -1,    -1,    -1,   521,
     522,   523,    -1,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,   533,    -1,   535,   536,   537,   538,   539,   540,    -1,
      -1,   543,   544,    -1,    -1,   547,   548,   549,   550,   551,
     552,    -1,    -1,   555,   556,   557,   558,    -1,   560,   561,
      -1,    -1,   564,   565,   566,   567,    -1,    -1,   570,   571,
      -1,   573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,
     582,   583,    -1,    -1,    -1,   587,   588,   589,   590,    -1,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
     602,    -1,    -1,   605,    -1,   607,    -1,   609,   610,    -1,
      -1,    -1,    -1,    -1,   616,    -1,   618,    -1,    -1,   621,
      -1,    -1,    -1,   625,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,    -1,   637,   638,   639,    -1,   641,
     642,   643,   644,    -1,    -1,   647,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,   665,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    -1,
      89,    90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,
      -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,
      -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,   138,
      -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,
      -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,   158,
      -1,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
     169,    -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,
     179,   180,    -1,   182,   183,   184,   185,   186,    -1,    -1,
     189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,
     199,    -1,   201,    -1,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,
      -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,
      -1,    -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,
      -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,
      -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,
      -1,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,
      -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,    -1,   318,
     319,   320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,
     329,   330,   331,   332,   333,   334,    -1,    -1,   337,   338,
      -1,   340,    -1,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,
     359,   360,   361,   362,   363,    -1,    -1,    -1,   367,   368,
      -1,    -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,
     379,    -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   392,   393,   394,    -1,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,    -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,
     419,   420,   421,   422,   423,    -1,   425,   426,   427,    -1,
      -1,   430,    -1,    -1,    -1,   434,   435,   436,   437,   438,
      -1,    -1,   441,   442,   443,   444,   445,    -1,   447,   448,
      -1,   450,   451,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,    -1,   466,   467,    -1,
     469,   470,   471,    -1,   473,    -1,    -1,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,    -1,   488,
     489,    -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,
      -1,   500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,
     509,    -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,
      -1,    -1,   521,   522,   523,    -1,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,   533,    -1,   535,   536,   537,   538,
     539,   540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,
     549,   550,   551,   552,    -1,    -1,   555,   556,   557,   558,
      -1,   560,   561,    -1,    -1,   564,   565,   566,   567,    -1,
      -1,   570,   571,    -1,   573,   574,   575,   576,    -1,    -1,
      -1,    -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,
     589,   590,    -1,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,
     609,   610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,
      -1,    -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,
     629,   630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,
     639,    -1,   641,   642,   643,   644,    -1,    -1,   647,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,   665,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,   185,
     186,    -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,
      -1,   217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,    -1,   318,   319,   320,   321,    -1,   323,   324,    -1,
      -1,    -1,    -1,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,    -1,   340,    -1,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,    -1,   355,
     356,    -1,    -1,   359,   360,   361,   362,   363,    -1,    -1,
      -1,   367,   368,    -1,    -1,    -1,   372,    -1,   374,   375,
      -1,   377,   378,   379,    -1,    -1,   382,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   392,   393,   394,    -1,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,    -1,   411,    -1,   413,   414,   415,
      -1,   417,    -1,   419,   420,   421,   422,   423,    -1,   425,
     426,   427,    -1,    -1,   430,    -1,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
      -1,   447,   448,    -1,   450,   451,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,    -1,
     466,   467,    -1,   469,   470,   471,    -1,   473,    -1,    -1,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,    -1,   488,   489,    -1,    -1,    -1,   493,   494,   495,
     496,    -1,    -1,    -1,   500,    -1,    -1,    -1,   504,    -1,
     506,   507,   508,   509,    -1,   511,   512,   513,   514,   515,
      -1,    -1,    -1,    -1,    -1,   521,   522,   523,    -1,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,   533,    -1,   535,
     536,   537,   538,   539,   540,    -1,    -1,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,   552,    -1,    -1,   555,
     556,   557,   558,    -1,   560,   561,    -1,    -1,   564,   565,
     566,   567,    -1,    -1,   570,   571,    -1,   573,   574,   575,
     576,    -1,    -1,    -1,    -1,    -1,   582,   583,    -1,    -1,
      -1,   587,   588,   589,   590,    -1,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,   602,    -1,    -1,   605,
      -1,   607,    -1,   609,   610,    -1,    -1,    -1,    -1,    -1,
     616,    -1,   618,    -1,    -1,   621,    -1,    -1,    -1,   625,
      -1,   627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,
      -1,   637,   638,   639,    -1,   641,   642,   643,   644,     5,
       6,   647,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,   659,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,   185,
     186,    -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,
      -1,   217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,    -1,   318,   319,   320,   321,    -1,   323,   324,    -1,
      -1,    -1,    -1,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,    -1,   340,    -1,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,    -1,   355,
     356,    -1,    -1,   359,   360,   361,   362,   363,    -1,    -1,
      -1,   367,   368,    -1,    -1,    -1,   372,    -1,   374,   375,
      -1,   377,   378,   379,    -1,    -1,   382,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   392,   393,   394,    -1,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,    -1,   411,    -1,   413,   414,   415,
      -1,   417,    -1,   419,   420,   421,   422,   423,    -1,   425,
     426,   427,    -1,    -1,   430,    -1,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
      -1,   447,   448,    -1,   450,   451,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,    -1,
     466,   467,    -1,   469,   470,   471,    -1,   473,    -1,    -1,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,    -1,   488,   489,    -1,    -1,    -1,   493,   494,   495,
     496,    -1,    -1,    -1,   500,    -1,    -1,    -1,   504,    -1,
     506,   507,   508,   509,    -1,   511,   512,   513,   514,   515,
      -1,    -1,    -1,    -1,    -1,   521,   522,   523,    -1,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,   533,    -1,   535,
     536,   537,   538,   539,   540,    -1,    -1,   543,   544,    -1,
      -1,   547,   548,   549,   550,   551,   552,    -1,    -1,   555,
     556,   557,   558,    -1,   560,   561,    -1,    -1,   564,   565,
     566,   567,    -1,    -1,   570,   571,    -1,   573,   574,   575,
     576,    -1,    -1,    -1,    -1,    -1,   582,   583,    -1,    -1,
      -1,   587,   588,   589,   590,    -1,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,   602,    -1,    -1,   605,
      -1,   607,    -1,   609,   610,    -1,    -1,    -1,    -1,    -1,
     616,    -1,   618,    -1,    -1,   621,    -1,    -1,    -1,   625,
      -1,   627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,
      -1,   637,   638,   639,    -1,   641,   642,   643,   644,    -1,
       6,   647,     8,     9,    10,    11,    12,    -1,    -1,    -1,
      16,    -1,    -1,   659,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    -1,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    -1,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,    -1,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,    -1,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,    -1,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,   181,   182,   183,   184,   185,
     186,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,    -1,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,    -1,    -1,   215,
      -1,    -1,    -1,    -1,    -1,   221,    -1,    -1,    -1,   225,
     226,   227,   228,   229,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,   255,
      -1,    -1,   258,    -1,   260,    -1,    -1,    -1,   264,    -1,
      -1,   267,   268,    -1,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,    -1,    -1,   290,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,    -1,   318,   319,   320,   321,    -1,   323,   324,    -1,
      -1,    -1,    -1,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,    -1,   340,    -1,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,    -1,   355,
     356,    -1,    -1,   359,   360,   361,   362,   363,    -1,    -1,
      -1,    -1,   368,    -1,    -1,    -1,   372,    -1,   374,   375,
      -1,   377,   378,   379,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,    -1,
      -1,    -1,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,    -1,    -1,    -1,    -1,    -1,   414,   415,
      -1,   417,    -1,   419,   420,   421,   422,   423,    -1,   425,
     426,   427,    -1,    -1,   430,    -1,    -1,    -1,   434,   435,
     436,   437,   438,    -1,    -1,   441,   442,   443,   444,   445,
      -1,   447,    -1,    -1,   450,    -1,   452,   453,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,    -1,    -1,
     466,    -1,    -1,   469,   470,   471,   472,   473,    -1,    -1,
      -1,   477,   478,   479,   480,   481,   482,   483,    -1,   485,
     486,    -1,   488,    -1,    -1,    -1,    -1,   493,   494,   495,
      -1,    -1,    -1,    -1,   500,    -1,    -1,    -1,    -1,    -1,
      -1,   507,    -1,   509,    -1,   511,    -1,    -1,   514,   515,
      -1,    -1,    -1,    -1,    -1,   521,   522,   523,    -1,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,    -1,    -1,    -1,   544,    -1,
      -1,   547,   548,   549,   550,   551,   552,    -1,    -1,   555,
     556,   557,   558,    -1,   560,   561,    -1,    -1,   564,   565,
     566,   567,    -1,    -1,   570,   571,    -1,   573,   574,   575,
     576,    -1,    -1,    -1,    -1,    -1,   582,   583,    -1,    -1,
      -1,    -1,   588,   589,   590,    -1,   592,   593,    -1,   595,
     596,    -1,    -1,    -1,    -1,    -1,   602,    -1,    -1,   605,
      -1,    -1,    -1,   609,   610,    -1,    -1,    -1,    -1,    -1,
     616,    -1,   618,    -1,    -1,   621,    -1,    -1,    -1,   625,
      -1,   627,   628,   629,   630,    -1,    -1,   633,    -1,    -1,
      -1,   637,   638,    -1,    -1,   641,    -1,   643,   644,    -1,
      -1,   647,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,   660,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,
      -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
      -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,
      -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,
      -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,
     253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,
     263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,
      -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,
      -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,    -1,   318,   319,   320,   321,    -1,
     323,   324,    -1,    -1,    -1,    -1,   329,   330,   331,   332,
     333,   334,    -1,    -1,   337,   338,    -1,   340,    -1,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,    -1,   355,   356,    -1,    -1,   359,   360,   361,   362,
     363,    -1,    -1,    -1,   367,   368,    -1,    -1,    -1,   372,
      -1,   374,   375,    -1,   377,   378,   379,    -1,    -1,   382,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,
     393,   394,    -1,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,    -1,   411,    -1,
     413,   414,   415,    -1,   417,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,    -1,
      -1,   434,   435,   436,   437,   438,    -1,    -1,   441,   442,
     443,   444,   445,    -1,   447,   448,    -1,   450,   451,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,    -1,   466,   467,    -1,   469,   470,   471,    -1,
     473,    -1,    -1,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,    -1,   488,   489,    -1,    -1,    -1,
     493,   494,   495,   496,    -1,    -1,    -1,   500,    -1,    -1,
      -1,   504,    -1,   506,   507,   508,   509,    -1,   511,   512,
     513,   514,   515,    -1,    -1,    -1,    -1,    -1,   521,   522,
     523,    -1,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
     533,    -1,   535,   536,   537,   538,   539,   540,    -1,    -1,
     543,   544,    -1,    -1,   547,   548,   549,   550,   551,   552,
      -1,    -1,   555,   556,   557,   558,    -1,   560,   561,    -1,
      -1,   564,   565,   566,   567,    -1,    -1,   570,   571,    -1,
     573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,   582,
     583,    -1,    -1,    -1,   587,   588,   589,   590,    -1,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,   602,
      -1,    -1,   605,    -1,   607,    -1,   609,   610,    -1,    -1,
      -1,    -1,    -1,   616,    -1,   618,    -1,    -1,   621,    -1,
      -1,    -1,   625,    -1,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,    -1,   637,   638,   639,    -1,   641,   642,
     643,   644,     5,     6,   647,     8,     9,    10,    11,    12,
     653,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,
      -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
      -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,
      -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,
      -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,
     253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,
     263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,
      -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,
      -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,    -1,   318,   319,   320,   321,    -1,
     323,   324,    -1,    -1,    -1,    -1,   329,   330,   331,   332,
     333,   334,    -1,    -1,   337,   338,    -1,   340,    -1,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,    -1,   355,   356,    -1,    -1,   359,   360,   361,   362,
     363,    -1,    -1,    -1,   367,   368,    -1,    -1,    -1,   372,
      -1,   374,   375,    -1,   377,   378,   379,    -1,    -1,   382,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,
     393,   394,    -1,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,    -1,   411,    -1,
     413,   414,   415,    -1,   417,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,    -1,
      -1,   434,   435,   436,   437,   438,    -1,    -1,   441,   442,
     443,   444,   445,    -1,   447,   448,    -1,   450,   451,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,    -1,   466,   467,    -1,   469,   470,   471,    -1,
     473,    -1,    -1,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,    -1,   488,   489,    -1,    -1,    -1,
     493,   494,   495,   496,    -1,    -1,    -1,   500,    -1,    -1,
      -1,   504,    -1,   506,   507,   508,   509,    -1,   511,   512,
     513,   514,   515,    -1,    -1,    -1,    -1,    -1,   521,   522,
     523,    -1,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
     533,    -1,   535,   536,   537,   538,   539,   540,    -1,    -1,
     543,   544,    -1,    -1,   547,   548,   549,   550,   551,   552,
      -1,    -1,   555,   556,   557,   558,    -1,   560,   561,    -1,
      -1,   564,   565,   566,   567,    -1,    -1,   570,   571,    -1,
     573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,   582,
     583,    -1,    -1,    -1,   587,   588,   589,   590,    -1,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,   602,
      -1,    -1,   605,    -1,   607,    -1,   609,   610,    -1,    -1,
      -1,    -1,    -1,   616,    -1,   618,    -1,    -1,   621,    -1,
      -1,    -1,   625,    -1,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,    -1,   637,   638,   639,    -1,   641,   642,
     643,   644,     5,     6,   647,     8,     9,    10,    11,    12,
     653,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,
      -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
      -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,
      -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,
      -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,
     253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,
     263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,
      -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,
      -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,    -1,   318,   319,   320,   321,    -1,
     323,   324,    -1,    -1,    -1,    -1,   329,   330,   331,   332,
     333,   334,    -1,    -1,   337,   338,    -1,   340,    -1,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,    -1,   355,   356,    -1,    -1,   359,   360,   361,   362,
     363,    -1,    -1,    -1,   367,   368,    -1,    -1,    -1,   372,
      -1,   374,   375,    -1,   377,   378,   379,    -1,    -1,   382,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,
     393,   394,    -1,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,    -1,   411,    -1,
     413,   414,   415,    -1,   417,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,    -1,
      -1,   434,   435,   436,   437,   438,    -1,    -1,   441,   442,
     443,   444,   445,    -1,   447,   448,    -1,   450,   451,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,    -1,   466,   467,    -1,   469,   470,   471,    -1,
     473,    -1,    -1,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,    -1,   488,   489,    -1,    -1,    -1,
     493,   494,   495,   496,    -1,    -1,    -1,   500,    -1,    -1,
      -1,   504,    -1,   506,   507,   508,   509,    -1,   511,   512,
     513,   514,   515,    -1,    -1,    -1,    -1,    -1,   521,   522,
     523,    -1,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
     533,    -1,   535,   536,   537,   538,   539,   540,    -1,    -1,
     543,   544,    -1,    -1,   547,   548,   549,   550,   551,   552,
      -1,    -1,   555,   556,   557,   558,    -1,   560,   561,    -1,
      -1,   564,   565,   566,   567,    -1,    -1,   570,   571,    -1,
     573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,   582,
     583,    -1,    -1,    -1,   587,   588,   589,   590,    -1,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,   602,
      -1,    -1,   605,    -1,   607,    -1,   609,   610,    -1,    -1,
      -1,    -1,    -1,   616,    -1,   618,    -1,    -1,   621,    -1,
      -1,    -1,   625,    -1,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,    -1,   637,   638,   639,    -1,   641,   642,
     643,   644,     5,     6,   647,     8,     9,    10,    11,    12,
     653,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,
      -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
      -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,
      -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,
      -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,
     253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,
     263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,
      -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,
      -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,    -1,   318,   319,   320,   321,    -1,
     323,   324,    -1,    -1,    -1,    -1,   329,   330,   331,   332,
     333,   334,    -1,    -1,   337,   338,    -1,   340,    -1,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,    -1,   355,   356,    -1,    -1,   359,   360,   361,   362,
     363,    -1,    -1,    -1,   367,   368,    -1,    -1,    -1,   372,
      -1,   374,   375,    -1,   377,   378,   379,    -1,    -1,   382,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,
     393,   394,    -1,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,    -1,   411,    -1,
     413,   414,   415,    -1,   417,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,    -1,
      -1,   434,   435,   436,   437,   438,    -1,    -1,   441,   442,
     443,   444,   445,    -1,   447,   448,    -1,   450,   451,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,    -1,   466,   467,    -1,   469,   470,   471,    -1,
     473,    -1,    -1,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,    -1,   488,   489,    -1,    -1,    -1,
     493,   494,   495,   496,    -1,    -1,    -1,   500,    -1,    -1,
      -1,   504,    -1,   506,   507,   508,   509,    -1,   511,   512,
     513,   514,   515,    -1,    -1,    -1,    -1,    -1,   521,   522,
     523,    -1,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
     533,    -1,   535,   536,   537,   538,   539,   540,    -1,    -1,
     543,   544,    -1,    -1,   547,   548,   549,   550,   551,   552,
      -1,    -1,   555,   556,   557,   558,    -1,   560,   561,    -1,
      -1,   564,   565,   566,   567,    -1,    -1,   570,   571,    -1,
     573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,   582,
     583,    -1,    -1,    -1,   587,   588,   589,   590,    -1,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,   602,
      -1,    -1,   605,    -1,   607,    -1,   609,   610,    -1,    -1,
      -1,    -1,    -1,   616,    -1,   618,    -1,    -1,   621,    -1,
      -1,    -1,   625,    -1,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,    -1,   637,   638,   639,    -1,   641,   642,
     643,   644,     5,     6,   647,     8,     9,    10,    11,    12,
     653,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,   121,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,    -1,    -1,
      -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
      -1,   214,   215,    -1,   217,   218,    -1,   220,   221,    -1,
      -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,
      -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,
     253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,
     263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,
      -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,
      -1,   284,   285,    -1,    -1,   288,    -1,    -1,    -1,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,    -1,   318,   319,   320,   321,    -1,
     323,   324,    -1,    -1,    -1,    -1,   329,   330,   331,   332,
     333,   334,    -1,    -1,   337,   338,    -1,   340,    -1,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,    -1,   355,   356,    -1,    -1,   359,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,    -1,    -1,   371,   372,
      -1,   374,   375,    -1,   377,   378,   379,    -1,    -1,   382,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,
     393,   394,    -1,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,    -1,   411,    -1,
     413,   414,   415,    -1,   417,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,    -1,
      -1,   434,   435,   436,   437,   438,    -1,    -1,   441,   442,
     443,   444,   445,    -1,   447,   448,    -1,   450,   451,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,    -1,   466,   467,    -1,   469,   470,   471,    -1,
     473,    -1,    -1,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,    -1,   488,   489,    -1,    -1,    -1,
     493,   494,   495,   496,    -1,    -1,    -1,   500,    -1,    -1,
      -1,   504,    -1,   506,   507,   508,   509,    -1,   511,   512,
     513,   514,   515,    -1,    -1,   518,   519,   520,   521,   522,
     523,    -1,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
     533,    -1,   535,   536,   537,   538,   539,   540,    -1,    -1,
     543,   544,    -1,    -1,   547,   548,   549,   550,   551,   552,
      -1,    -1,   555,   556,   557,   558,    -1,   560,   561,    -1,
      -1,   564,   565,   566,   567,    -1,    -1,   570,   571,    -1,
     573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,   582,
     583,    -1,    -1,    -1,   587,   588,   589,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,   602,
      -1,    -1,   605,    -1,   607,    -1,   609,   610,    -1,    -1,
      -1,    -1,    -1,   616,    -1,   618,    -1,    -1,   621,    -1,
      -1,    -1,   625,    -1,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,    -1,   637,   638,   639,    -1,   641,   642,
     643,   644,     5,     6,   647,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    18,    19,    20,    21,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,
      -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
      -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,
      -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,
      -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,
     253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,
     263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,
      -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,
      -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,    -1,   318,   319,   320,   321,    -1,
     323,   324,    -1,    -1,    -1,    -1,   329,   330,   331,   332,
     333,   334,    -1,    -1,   337,   338,    -1,   340,    -1,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,    -1,   355,   356,    -1,    -1,   359,   360,   361,   362,
     363,    -1,    -1,    -1,   367,   368,    -1,    -1,    -1,   372,
      -1,   374,   375,    -1,   377,   378,   379,    -1,    -1,   382,
      -1,    -1,   385,    -1,    -1,   388,    -1,    -1,    -1,   392,
     393,   394,    -1,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,    -1,   411,    -1,
     413,   414,   415,    -1,   417,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,    -1,
      -1,   434,   435,   436,   437,   438,    -1,    -1,   441,   442,
     443,   444,   445,    -1,   447,   448,    -1,   450,   451,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,    -1,   466,   467,    -1,   469,   470,   471,    -1,
     473,    -1,    -1,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,    -1,   488,   489,    -1,    -1,    -1,
     493,   494,   495,   496,    -1,    -1,    -1,   500,    -1,    -1,
      -1,   504,    -1,   506,   507,   508,   509,    -1,   511,   512,
     513,   514,   515,    -1,    -1,    -1,    -1,    -1,   521,   522,
     523,    -1,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
     533,    -1,   535,   536,   537,   538,   539,   540,    -1,    -1,
     543,   544,    -1,    -1,   547,   548,   549,   550,   551,   552,
      -1,    -1,   555,   556,   557,   558,    -1,   560,   561,    -1,
      -1,   564,   565,   566,   567,    -1,   569,   570,   571,    -1,
     573,   574,   575,   576,    -1,    -1,    -1,    -1,    -1,   582,
     583,    -1,    -1,    -1,   587,   588,   589,   590,    -1,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,   602,
      -1,    -1,   605,    -1,   607,    -1,   609,   610,    -1,    -1,
      -1,    -1,    -1,   616,    -1,   618,    -1,    -1,   621,    -1,
      -1,    -1,   625,    -1,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,    -1,   637,   638,   639,    -1,   641,   642,
     643,   644,   645,    -1,   647,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,   159,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,   499,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,   569,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,   569,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,   288,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,   371,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,   569,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,   103,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,   569,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,   103,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,   569,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    13,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,   569,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    37,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,   218,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,   569,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,   569,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,   569,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,   569,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    94,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,   171,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,   519,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,   196,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,   569,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    13,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,     5,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,   367,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,   394,    -1,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
      -1,   411,    -1,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,   448,    -1,
     450,   451,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,    -1,   466,   467,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,    -1,   488,   489,
      -1,    -1,    -1,   493,   494,   495,   496,    -1,    -1,    -1,
     500,    -1,    -1,    -1,   504,    -1,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,   536,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,   587,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,   602,    -1,    -1,   605,    -1,   607,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,   639,
      -1,   641,   642,   643,   644,    -1,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,   149,
     150,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,    -1,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,   255,    -1,    -1,   258,    -1,
     260,    -1,    -1,    -1,   264,    -1,    -1,   267,   268,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
     290,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,    -1,    -1,    -1,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
      -1,    -1,    -1,    -1,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,    -1,    -1,
     450,    -1,   452,   453,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,   466,    -1,    -1,   469,
     470,   471,   472,   473,    -1,    -1,    -1,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,    -1,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,    -1,    -1,    -1,
     500,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,   509,
      -1,   511,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,    -1,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,    -1,    -1,
      -1,    -1,   602,    -1,    -1,   605,    -1,    -1,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,   633,    -1,    -1,    -1,   637,   638,    -1,
      -1,   641,    -1,   643,   644,    -1,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,   149,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,    -1,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,   255,    -1,    -1,   258,    -1,
     260,    -1,    -1,    -1,   264,    -1,    -1,   267,   268,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
     290,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,    -1,    -1,    -1,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
      -1,    -1,    -1,    -1,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,    -1,    -1,
     450,    -1,   452,   453,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,   466,    -1,    -1,   469,
     470,   471,   472,   473,    -1,    -1,    -1,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,    -1,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,    -1,    -1,    -1,
     500,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,   509,
      -1,   511,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,    -1,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,    -1,    -1,
      -1,    -1,   602,    -1,    -1,   605,    -1,    -1,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,   631,    -1,   633,    -1,    -1,    -1,   637,   638,    -1,
      -1,   641,    -1,   643,   644,    -1,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,   149,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,    -1,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,   255,    -1,    -1,   258,    -1,
     260,    -1,    -1,    -1,   264,    -1,    -1,   267,   268,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
     290,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,    -1,    -1,    -1,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
      -1,    -1,    -1,    -1,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,    -1,    -1,
     450,    -1,   452,   453,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,   466,    -1,    -1,   469,
     470,   471,   472,   473,    -1,    -1,    -1,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,    -1,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,    -1,    -1,    -1,
     500,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,   509,
      -1,   511,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,    -1,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,    -1,    -1,
      -1,    -1,   602,    -1,    -1,   605,    -1,    -1,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,   631,    -1,   633,    -1,    -1,    -1,   637,   638,    -1,
      -1,   641,    -1,   643,   644,    -1,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,    -1,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,   255,    -1,    -1,   258,    -1,
     260,    -1,    -1,    -1,   264,    -1,    -1,   267,   268,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
     290,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,    -1,    -1,    -1,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
      -1,    -1,    -1,    -1,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,    -1,    -1,
     450,    -1,   452,   453,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,   466,    -1,    -1,   469,
     470,   471,   472,   473,    -1,    -1,    -1,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,    -1,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,    -1,    -1,    -1,
     500,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,   509,
      -1,   511,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,    -1,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,    -1,    -1,
      -1,    -1,   602,    -1,    -1,   605,    -1,    -1,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,   633,    -1,    -1,    -1,   637,   638,    -1,
      -1,   641,    -1,   643,   644,    -1,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,    -1,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,   255,    -1,    -1,   258,    -1,
     260,    -1,    -1,    -1,   264,    -1,    -1,   267,   268,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
     290,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,    -1,    -1,    -1,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
      -1,    -1,    -1,    -1,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,    -1,    -1,
     450,    -1,   452,   453,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,   466,    -1,    -1,   469,
     470,   471,   472,   473,    -1,    -1,    -1,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,    -1,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,    -1,    -1,    -1,
     500,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,   509,
      -1,   511,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,    -1,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,    -1,    -1,
      -1,    -1,   602,    -1,    -1,   605,    -1,    -1,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,   633,    -1,    -1,    -1,   637,   638,    -1,
      -1,   641,    -1,   643,   644,    -1,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,    -1,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,   255,    -1,    -1,   258,    -1,
     260,    -1,    -1,    -1,   264,    -1,    -1,   267,   268,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
     290,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,    -1,    -1,    -1,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
      -1,    -1,    -1,    -1,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,    -1,    -1,
     450,    -1,   452,   453,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,   466,    -1,    -1,   469,
     470,   471,   472,   473,    -1,    -1,    -1,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,    -1,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,    -1,    -1,    -1,
     500,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,   509,
      -1,   511,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,    -1,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,    -1,    -1,
      -1,    -1,   602,    -1,    -1,   605,    -1,    -1,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,   633,    -1,    -1,    -1,   637,   638,    -1,
      -1,   641,    -1,   643,   644,    -1,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,    -1,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,   255,    -1,    -1,   258,    -1,
     260,    -1,    -1,    -1,   264,    -1,    -1,   267,   268,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
     290,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,    -1,    -1,    -1,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
      -1,    -1,    -1,    -1,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,    -1,    -1,
     450,    -1,   452,   453,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,   466,    -1,    -1,   469,
     470,   471,   472,   473,    -1,    -1,    -1,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,    -1,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,    -1,    -1,    -1,
     500,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,   509,
      -1,   511,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,    -1,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,    -1,    -1,
      -1,    -1,   602,    -1,    -1,   605,    -1,    -1,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,   633,    -1,    -1,    -1,   637,   638,    -1,
      -1,   641,    -1,   643,   644,    -1,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,    -1,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,   255,    -1,    -1,   258,    -1,
     260,    -1,    -1,    -1,   264,    -1,    -1,   267,   268,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
     290,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,    -1,    -1,    -1,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
      -1,    -1,    -1,    -1,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,    -1,    -1,
     450,    -1,   452,   453,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,   466,    -1,    -1,   469,
     470,   471,   472,   473,    -1,    -1,    -1,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,    -1,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,    -1,    -1,    -1,
     500,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,   509,
      -1,   511,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,    -1,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,    -1,    -1,
      -1,    -1,   602,    -1,    -1,   605,    -1,    -1,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,   633,    -1,    -1,    -1,   637,   638,    -1,
      -1,   641,    -1,   643,   644,    -1,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,    -1,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,    -1,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,   255,    -1,    -1,   258,    -1,
     260,    -1,    -1,    -1,   264,    -1,    -1,   267,   268,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
     290,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,    -1,    -1,    -1,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
      -1,    -1,    -1,    -1,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,    -1,    -1,
     450,    -1,   452,   453,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,   466,    -1,    -1,   469,
     470,   471,   472,   473,    -1,    -1,    -1,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,    -1,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,    -1,    -1,    -1,
     500,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,   509,
      -1,   511,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,    -1,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,    -1,    -1,
      -1,    -1,   602,    -1,    -1,   605,    -1,    -1,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,   633,    -1,    -1,    -1,   637,   638,    -1,
      -1,   641,    -1,   643,   644,    -1,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,    -1,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,    -1,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,   255,    -1,    -1,   258,    -1,
     260,    -1,    -1,    -1,   264,    -1,    -1,   267,   268,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
     290,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,   379,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,    -1,    -1,    -1,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
      -1,    -1,    -1,    -1,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,    -1,    -1,
     450,    -1,   452,   453,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,   466,    -1,    -1,   469,
     470,   471,   472,   473,    -1,    -1,    -1,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,    -1,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,    -1,    -1,    -1,
     500,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,   509,
      -1,   511,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,    -1,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,    -1,    -1,
      -1,    -1,   602,    -1,    -1,   605,    -1,    -1,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,   633,    -1,    -1,    -1,   637,   638,    -1,
      -1,   641,    -1,   643,   644,    -1,     6,   647,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,    -1,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,    -1,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,    -1,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,    -1,   318,   319,
     320,   321,    -1,   323,   324,    -1,    -1,    -1,    -1,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
     340,    -1,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,    -1,   355,   356,    -1,    -1,   359,
     360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,    -1,
      -1,    -1,   372,    -1,   374,   375,    -1,   377,   378,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,    -1,    -1,    -1,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
      -1,    -1,    -1,    -1,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,    -1,   434,   435,   436,   437,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,   447,    -1,    -1,
     450,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,   466,    -1,    -1,   469,
     470,   471,    -1,   473,    -1,    -1,    -1,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,    -1,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,    -1,    -1,    -1,
     500,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,   509,
      -1,   511,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,   521,   522,   523,    -1,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,   544,    -1,    -1,   547,   548,   549,
     550,   551,   552,    -1,    -1,   555,   556,   557,   558,    -1,
     560,   561,    -1,    -1,   564,   565,   566,   567,    -1,    -1,
     570,   571,    -1,   573,   574,   575,   576,    -1,    -1,    -1,
      -1,    -1,   582,   583,    -1,    -1,    -1,    -1,   588,   589,
     590,    -1,   592,   593,    -1,   595,   596,    -1,    -1,    -1,
      -1,    -1,   602,    -1,    -1,   605,    -1,    -1,    -1,   609,
     610,    -1,    -1,    -1,    -1,    -1,   616,    -1,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,    -1,   637,   638,    -1,
      -1,   641,    -1,   643,   644,    -1,    -1,   647
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    98,   120,   129,   130,   131,   142,   143,   155,   169,
     189,   207,   209,   214,   217,   240,   242,   262,   279,   283,
     380,   397,   399,   413,   424,   446,   449,   451,   454,   464,
     465,   474,   476,   484,   490,   498,   503,   504,   505,   536,
     543,   587,   599,   603,   606,   611,   642,   658,   669,   672,
     673,   674,   675,   676,   678,   683,   685,   707,   740,   767,
     774,   775,   894,   977,  1065,  1073,  1117,  1118,  1119,  1122,
    1136,  1139,  1144,  1146,  1147,  1152,  1155,  1160,  1167,  1178,
    1179,  1297,  1299,  1312,  1313,  1331,  1335,  1339,  1346,  1361,
    1365,  1368,  1378,  1384,  1388,  1390,  1391,  1444,  1465,  1471,
    1473,  1474,  1481,  1484,  1511,  1517,  1518,  1519,  1520,  1574,
    1581,  1582,    12,   107,   126,   199,   284,   418,   496,   561,
     563,   609,  1538,  1539,  1540,  1543,   280,   369,  1154,  1512,
     569,  1435,   234,     5,     6,     8,     9,    10,    11,    12,
      15,    16,    20,    23,    25,    26,    27,    28,    29,    30,
      32,    36,    40,    43,    44,    45,    47,    49,    50,    53,
      56,    57,    59,    60,    61,    63,    65,    66,    67,    68,
      69,    70,    72,    73,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    86,    87,    89,    90,    91,    92,
      93,    97,   100,   102,   105,   109,   110,   111,   114,   119,
     120,   125,   126,   128,   132,   134,   135,   136,   137,   138,
     142,   145,   146,   147,   151,   153,   154,   156,   157,   158,
     161,   162,   164,   165,   166,   167,   168,   169,   172,   173,
     174,   175,   176,   179,   180,   182,   183,   184,   185,   186,
     189,   190,   194,   195,   197,   199,   201,   203,   204,   205,
     206,   208,   210,   214,   215,   217,   220,   221,   225,   226,
     227,   228,   231,   232,   233,   236,   241,   242,   246,   250,
     251,   253,   254,   258,   260,   263,   264,   267,   270,   271,
     277,   278,   280,   282,   284,   285,   293,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   314,   315,   316,   318,   319,
     320,   321,   323,   324,   329,   330,   331,   332,   333,   334,
     337,   338,   340,   342,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   355,   356,   359,   360,   361,   362,   363,
     367,   368,   372,   374,   375,   377,   378,   379,   382,   392,
     393,   394,   396,   397,   398,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   411,   413,   414,   415,   417,
     419,   420,   421,   422,   423,   425,   426,   427,   430,   434,
     435,   436,   437,   438,   441,   442,   443,   444,   445,   447,
     448,   450,   451,   452,   455,   456,   457,   458,   459,   460,
     461,   462,   464,   466,   467,   469,   470,   471,   473,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     488,   489,   493,   494,   495,   496,   500,   504,   506,   507,
     508,   509,   511,   512,   513,   514,   515,   521,   522,   523,
     525,   526,   528,   531,   533,   535,   536,   537,   538,   539,
     540,   543,   544,   547,   548,   549,   550,   551,   552,   555,
     556,   557,   558,   560,   561,   564,   565,   566,   567,   570,
     571,   573,   574,   575,   576,   582,   583,   587,   588,   589,
     590,   592,   593,   595,   596,   598,   599,   602,   605,   607,
     609,   610,   616,   618,   621,   625,   627,   628,   629,   630,
     637,   638,   639,   641,   642,   643,   644,   647,   734,  1432,
    1438,  1442,  1443,   314,   455,   560,   563,  1467,  1467,   638,
    1513,   107,   198,   284,   496,   516,   561,   566,   601,   609,
     716,   944,   945,   946,  1043,  1044,  1045,   230,   291,   427,
    1337,  1338,  1298,   107,   166,   199,   234,   284,   418,   496,
     561,   566,   584,   609,   625,  1308,  1438,  1154,   102,   533,
     776,   732,   733,   666,  1429,  1431,  1438,   684,   127,   219,
     291,  1314,   405,    86,   426,  1389,   110,   234,   644,  1396,
    1467,  1154,   658,   895,  1438,  1385,   484,   609,  1467,  1154,
     127,   291,  1315,  1334,  1379,   519,   764,   768,   769,  1438,
     732,  1513,  1438,  1182,  1183,  1184,    61,    62,   124,   208,
     280,   350,   402,   495,   582,   665,  1005,  1438,  1445,  1450,
    1454,  1455,  1347,   768,   203,   508,   582,   203,   508,   563,
    1341,   405,  1472,  1334,  1438,    32,    79,   153,   413,   435,
     476,   536,  1577,   490,   658,  1180,     0,   155,   670,   413,
     103,   272,   609,  1081,  1435,  1438,  1440,  1441,  1501,  1502,
     605,  1120,  1134,   175,   194,   400,  1366,  1429,  1438,   159,
    1085,  1438,   159,   734,   211,   734,  1440,   842,   843,   846,
     869,  1438,  1429,   229,  1307,   166,  1071,  1538,  1467,  1513,
    1161,   741,   666,   580,   184,  1137,  1148,    19,  1514,   229,
     947,   211,  1440,   844,   869,   947,   388,  1535,  1539,  1540,
    1541,  1542,  1543,   563,   945,   234,   234,   234,   196,  1306,
    1430,  1438,  1337,     8,    23,    29,    35,    37,    38,    39,
      41,    54,    55,    61,    62,    69,    72,    92,    95,    96,
     101,   103,   106,   107,   112,   113,   114,   119,   121,   124,
     170,   177,   178,   187,   194,   204,   206,   212,   218,   225,
     229,   240,   243,   269,   277,   288,   317,   322,   333,   337,
     339,   343,   344,   345,   346,   347,   354,   364,   365,   366,
     370,   371,   395,   402,   407,   408,   410,   425,   453,   454,
     473,   475,   481,   482,   488,   541,   542,   549,   553,   554,
     559,   569,   573,   574,   575,   576,   585,   586,   587,   591,
     594,   609,   613,   614,   615,   617,   622,   624,   629,   630,
     647,   651,   652,   653,   657,   658,   661,   662,   665,   666,
    1003,  1193,  1194,  1197,  1198,  1199,  1200,  1204,  1207,  1208,
    1209,  1210,  1211,  1212,  1219,  1220,  1415,  1417,  1419,  1420,
    1421,  1423,  1425,  1427,  1432,  1438,  1307,  1307,  1307,  1438,
     211,  1307,  1307,   869,  1307,  1307,  1307,  1467,   679,  1369,
     134,  1485,  1438,   379,    68,   431,   666,  1440,   230,  1113,
    1438,  1197,  1438,   244,  1392,  1466,  1467,   978,  1197,    48,
     896,   196,    35,   314,  1352,  1386,  1438,   732,  1156,  1467,
     244,  1316,   314,   426,   508,  1380,  1381,   618,   765,   498,
     770,  1482,   580,  1514,   600,  1521,  1522,   244,   386,  1274,
    1275,  1294,  1295,    13,   139,   219,   524,   525,   526,   527,
     528,   529,   546,  1189,  1190,  1191,  1534,   498,   666,    35,
     124,   159,   499,  1006,  1007,  1324,  1440,   193,  1324,   253,
     431,  1456,  1457,  1459,  1461,   665,  1440,    35,   124,  1009,
    1010,  1440,   666,   582,  1446,  1453,  1455,   660,  1447,  1324,
      36,    61,    72,    96,    98,   108,   157,   162,   165,   197,
     199,   208,   210,   233,   234,   259,   280,   314,   379,   406,
     417,   418,   421,   422,   442,   495,   508,   544,   563,   628,
    1005,  1042,  1348,  1352,  1353,  1355,  1451,   770,   445,   531,
    1131,  1132,  1133,   431,   634,  1123,  1124,  1125,  1131,  1340,
    1438,  1467,  1113,    37,   218,   569,  1416,  1436,  1576,  1576,
    1576,    95,  1575,  1576,  1576,  1182,  1180,   659,   664,  1438,
     658,  1196,   658,   227,   665,   227,   463,   660,  1506,   298,
     299,   443,   444,   521,   522,   523,   705,  1135,   609,  1126,
    1127,   159,  1363,  1362,   331,   567,   593,  1067,   607,  1441,
    1069,   848,   870,  1438,  1068,   382,     7,    58,   143,   365,
     430,   432,   871,  1066,   170,   732,   734,   530,  1544,  1545,
    1070,  1145,  1162,  1163,  1164,  1165,  1429,   658,   742,  1438,
     686,   687,  1304,  1305,  1429,  1304,    57,   367,   367,   446,
    1515,   364,   365,  1203,  1438,   847,   870,   192,     7,   732,
     454,    11,   166,   199,   418,   584,   719,  1537,  1545,  1560,
    1562,  1563,  1569,   199,   719,  1536,  1545,  1560,  1563,  1569,
    1538,  1543,   947,  1438,  1438,  1438,  1306,  1429,  1438,   196,
     660,   666,  1336,   658,   658,   658,  1207,   658,   658,   658,
    1197,  1232,   658,   658,   658,   658,   658,   658,   658,   658,
    1196,  1196,   658,   992,   658,   658,   658,   569,   658,   658,
     658,   658,   658,   658,   658,   658,   658,   658,   658,   658,
     658,  1197,   658,   658,   658,  1230,  1231,  1425,  1438,   658,
     658,   658,   658,   658,   658,   658,   658,   658,  1197,   992,
     658,   658,   658,   658,   658,   658,   658,   658,   658,   658,
     658,   658,   658,   658,   658,   658,   658,   992,   569,   658,
     658,   658,   569,   658,   658,   658,    37,   218,   569,   658,
    1196,   992,   992,   658,   658,   658,   658,   658,   658,  1207,
    1207,  1207,  1197,  1530,  1531,  1438,   665,  1221,  1440,  1438,
     660,    18,    19,    21,   385,   388,   645,  1195,  1201,  1202,
    1435,  1438,   159,   160,   200,   213,   252,   265,   292,   357,
    1205,    33,   140,   247,   273,   343,   440,   501,   502,   514,
     649,   650,   651,   652,   653,   654,   655,   656,  1203,  1207,
      71,   387,  1436,   257,   658,   666,  1438,   734,  1438,   376,
     870,   734,  1440,   368,   627,   880,   882,  1309,  1310,  1311,
    1353,   734,   732,  1303,  1307,   612,   680,    35,   132,   157,
     161,   201,   221,   285,   381,   417,   426,   441,   466,   509,
     540,  1370,  1375,  1376,  1467,    85,   665,   777,   778,   779,
     780,  1438,    13,    14,    98,   129,   143,   166,   169,   182,
     209,   234,   240,   283,   419,   423,   439,   447,   455,   490,
     503,   504,   555,   584,   606,   608,  1486,  1488,  1490,  1491,
      21,   159,  1262,  1263,  1475,  1438,  1316,   513,   666,    50,
      84,   291,  1398,  1429,  1468,  1469,  1153,   659,   275,   278,
     428,   897,   899,   665,   677,  1435,   285,  1157,  1441,  1158,
    1159,  1429,  1140,  1429,    50,  1382,   660,  1436,    56,    66,
      76,    89,    90,    91,   105,   332,   349,   486,   548,   565,
     771,   773,    13,   423,  1483,  1488,   484,  1516,  1515,    13,
     139,  1527,   145,   390,   665,  1292,  1293,  1296,  1440,    48,
     274,  1278,  1279,   196,  1186,   193,   283,  1192,  1193,  1191,
    1438,    71,  1012,  1197,  1441,   402,   569,  1463,   271,   378,
     640,   660,  1460,   660,  1458,   208,   280,   495,  1452,  1324,
    1438,  1456,  1447,  1324,  1448,  1449,  1450,  1454,    13,    35,
     124,   376,  1197,  1464,   165,   273,   632,  1359,   658,   107,
     166,   199,   418,   563,   584,   609,   625,  1359,    13,   956,
    1440,  1278,   196,   247,  1354,  1356,    70,   540,   193,   540,
     560,    70,   540,    13,    43,    93,    97,   251,   330,   394,
     515,   557,  1342,  1343,  1344,   165,   221,   540,   540,  1278,
    1359,  1356,   285,   156,    73,   420,   560,   583,   540,   621,
     660,   378,   640,    87,   660,   193,   706,  1305,   490,   658,
     662,  1235,  1236,  1237,  1238,  1239,  1243,  1429,   660,   377,
    1579,   556,  1580,   643,   256,   469,  1578,   659,  1275,  1279,
    1522,  1523,  1525,  1526,   155,   671,   659,   659,    48,  1440,
      48,   634,    65,   254,   363,   532,   550,   641,  1497,  1498,
    1502,   634,  1078,   159,   159,   159,   159,   159,   159,   660,
     159,  1121,   402,  1128,  1440,   193,  1178,  1312,  1313,  1331,
    1335,  1364,  1367,  1416,  1438,   124,   942,   943,   953,   954,
    1015,   110,   735,     7,   849,   735,   658,   109,   866,   866,
     866,     4,     7,    12,    14,    17,    27,    28,    58,    63,
      64,    69,    77,    83,    86,    95,   110,   128,   136,   137,
     143,   151,   157,   168,   191,   232,   234,   241,   260,   283,
     320,   338,   342,   380,   386,   393,   399,   402,   434,   448,
     449,   450,   451,   480,   537,   538,   539,   544,   561,   564,
     587,   600,   607,   634,   637,   892,   949,   951,   953,   954,
    1086,  1091,  1092,  1094,  1097,  1103,  1104,  1105,  1110,  1111,
    1271,  1072,   489,   625,  1545,  1304,   247,   660,   234,   261,
     399,  1040,  1173,  1175,  1176,   743,   744,  1197,   231,   293,
     294,   295,   296,   297,   300,   301,   302,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   315,   316,   701,
     702,   705,   456,   457,   458,   459,   460,   461,   462,   688,
     689,   175,   427,   660,  1138,    59,   175,   179,   193,   329,
     427,  1149,  1150,  1151,    57,   446,   170,   715,   849,   110,
     866,  1501,   199,   947,   734,  1438,   734,   734,  1545,  1429,
    1046,  1047,  1046,  1046,   612,   399,  1241,  1242,   666,  1236,
    1430,   653,  1438,  1197,  1197,    13,   139,  1226,  1264,  1226,
    1226,  1226,   631,  1234,  1197,  1197,  1197,  1229,  1229,  1197,
    1197,  1197,   139,  1226,  1264,   371,   659,   659,  1197,  1197,
    1197,  1197,  1425,  1530,   115,   116,   117,   118,   119,   222,
     223,   224,   225,   333,   335,   336,   337,   344,   425,   487,
     488,   629,   646,   647,  1259,  1260,  1197,  1228,  1229,   111,
     114,   573,   576,  1261,   139,  1222,  1197,  1197,  1197,  1197,
    1259,  1197,  1229,  1231,    10,   660,   666,   139,  1226,  1197,
    1197,   139,  1226,  1197,  1197,  1229,  1229,  1229,  1197,  1197,
    1229,  1200,  1197,  1197,  1197,  1197,  1197,  1197,   659,  1197,
    1226,  1226,  1197,  1197,   139,  1226,  1197,  1260,  1260,  1197,
      46,   266,   581,  1197,  1197,   659,  1426,  1427,  1438,  1226,
    1226,  1197,  1197,  1197,   659,   660,   659,   490,   658,  1528,
    1529,  1197,  1452,   499,   666,  1194,  1435,  1438,  1197,  1197,
    1197,   178,   370,   586,   602,  1203,    13,    20,  1199,  1206,
    1200,  1200,   658,  1207,  1200,  1200,  1200,  1200,   273,  1200,
    1200,   243,  1200,   243,  1200,  1200,  1200,  1200,  1200,    33,
     247,   273,   440,  1440,  1207,  1436,  1197,  1216,  1217,  1218,
     653,  1438,   666,  1429,  1309,   660,  1311,   157,  1441,  1500,
    1304,  1300,   665,   681,   682,   285,   285,   285,   285,    50,
     285,   285,   660,  1371,   114,   573,   576,   772,   782,  1220,
    1419,  1425,  1440,   660,   159,   417,  1489,   478,   478,   561,
     566,   609,   625,   383,  1493,   560,   376,  1495,    67,   508,
    1492,   108,   625,  1494,   376,   660,  1438,   185,   361,  1438,
    1476,  1477,  1429,  1435,  1438,  1168,   280,  1397,  1263,   660,
    1304,    73,   658,   904,   905,   904,   905,   400,   907,   215,
     261,  1440,    31,   580,  1387,   660,   580,   660,   580,  1304,
    1241,    13,  1383,  1381,   660,   159,  1489,   376,   376,  1438,
    1179,   569,  1437,  1437,  1440,   660,  1197,  1276,  1424,   288,
     371,   591,  1280,  1281,  1417,  1438,  1192,   144,  1188,  1236,
     632,  1265,   606,   247,   124,  1011,  1014,  1440,  1324,   658,
     431,   452,   493,  1462,  1459,  1457,   666,   666,   666,  1455,
    1197,  1464,   660,  1453,   247,  1357,  1435,  1197,   653,   947,
     734,   734,   734,  1429,   734,   732,  1429,   285,   348,   540,
    1351,  1351,  1359,  1438,   734,  1359,  1441,  1354,   734,  1359,
     250,   558,   180,   193,  1345,   660,  1357,   706,  1354,  1429,
    1356,  1354,  1354,   273,   632,  1360,  1360,  1133,   511,  1125,
      60,  1189,  1238,  1244,  1247,  1438,    99,   237,   256,   269,
     353,   475,   546,  1240,   498,   660,  1241,  1416,   403,   193,
    1278,   569,   402,   569,  1440,   569,   569,   569,    19,  1496,
     318,   319,   323,   324,  1079,  1080,     5,   402,  1074,  1075,
    1076,  1077,  1433,  1435,   121,   187,   288,   371,   591,  1285,
    1433,   121,   187,   218,   288,   371,   591,  1283,  1435,  1435,
     705,  1435,   706,   159,   125,  1129,    86,   943,    71,  1005,
     135,    77,    92,   263,   341,   367,   429,   530,   737,   739,
     436,   595,   867,   868,   236,   863,   864,   865,   872,   880,
     882,   107,   220,   392,   402,   409,   512,   609,   717,   718,
    1435,    26,   321,   857,   858,   859,   872,   873,   874,   880,
     882,   850,   851,   857,    74,    88,   399,   964,   967,   968,
    1038,  1040,  1044,  1045,  1112,  1324,  1325,  1112,   399,  1325,
    1325,  1112,  1325,   399,   399,  1325,  1325,  1325,   580,   135,
    1325,   259,   399,   561,   192,   399,   416,  1040,  1112,   259,
    1325,   399,   399,   561,   135,  1325,  1325,  1325,  1325,  1325,
    1112,   399,    48,  1325,   893,  1325,   399,   401,    21,   159,
     580,  1040,  1116,   399,   399,  1325,  1325,  1325,  1325,   138,
     330,  1325,  1325,   399,  1325,   401,   616,   616,   949,   660,
     891,   892,  1092,   658,   666,   963,   969,  1428,  1438,   376,
     727,  1082,   126,   246,  1429,   124,  1166,  1438,  1164,  1429,
    1174,   658,  1175,   659,   660,   159,   159,   159,   159,   159,
     159,   159,   159,   159,   159,   159,   159,   159,   159,   159,
     159,   159,   159,   159,   159,   159,   660,   706,   159,   159,
     159,   159,   159,   159,   159,   660,  1305,   607,  1150,   941,
     942,    77,   362,   437,   596,   860,   861,   862,   872,   876,
     877,   878,   879,   880,   882,   639,   611,   845,  1506,  1438,
     734,   658,   471,  1570,     9,    31,   840,   708,   589,   612,
    1054,   376,   376,   376,  1236,   658,  1265,  1438,  1265,   666,
    1336,   660,   659,  1226,   659,  1197,   659,   659,   659,  1197,
     149,   631,  1233,    21,   659,   612,   659,   660,   659,   659,
     660,   612,   660,  1229,   659,   653,   659,   660,   660,   659,
     659,   659,   659,   196,   660,   659,   660,  1229,   659,   660,
     660,   660,   652,   660,   659,   659,   658,  1425,  1438,  1226,
     659,   659,   659,  1226,   659,   660,   659,   659,   659,   659,
     659,   660,   659,   247,   659,   660,   660,   659,   660,   660,
     659,   659,   659,   660,   196,   660,  1226,   659,   659,   660,
     660,   660,   659,   196,  1197,   196,  1197,   196,  1197,   196,
     659,   660,   659,   659,   659,   659,   660,    21,   271,   660,
    1030,   659,  1229,  1245,  1246,   490,   658,  1181,   600,   663,
    1440,  1197,  1438,   178,   370,   586,   602,   658,    19,  1197,
    1530,   164,  1267,  1200,  1197,  1197,  1200,   658,  1207,  1200,
    1195,   659,   660,   658,   666,  1438,  1301,  1311,  1325,   660,
      52,   468,  1114,  1304,  1440,   660,   706,  1376,  1304,  1377,
     780,   783,   784,   779,   372,   482,   781,   560,   658,  1503,
    1441,  1503,  1503,  1503,   199,   418,   563,  1487,  1491,   159,
     185,   200,   213,   264,   265,   292,   361,   415,  1478,  1480,
    1265,  1241,   666,  1169,  1170,  1171,  1172,  1429,   235,   291,
     431,   640,  1470,  1469,   658,   913,  1200,   121,   187,   218,
     288,   371,   591,  1284,  1287,  1288,   552,   908,   898,    12,
     900,  1197,  1435,  1441,  1441,  1159,  1429,   175,   427,   610,
    1141,  1142,  1143,   490,   498,   617,   618,   658,   939,  1317,
    1318,  1320,  1321,  1322,   706,   773,   772,   660,  1441,   199,
     418,  1487,  1005,  1008,  1293,    22,   130,  1277,   660,   375,
     660,  1197,   211,  1268,   500,   402,  1463,  1463,    78,   592,
     431,  1324,  1449,  1435,   196,  1358,   659,  1438,  1441,  1359,
     426,  1278,  1344,  1358,  1359,  1354,  1429,  1359,  1359,  1435,
    1197,  1433,  1193,   600,   659,  1524,  1525,  1235,   256,   256,
     389,  1248,   256,   269,   475,  1248,  1243,  1235,  1332,  1333,
    1426,  1237,  1263,   660,   334,   569,    21,    48,  1497,  1283,
    1283,  1283,  1283,  1080,   283,   603,   173,  1076,   124,   243,
     359,  1435,   159,   404,  1130,  1284,  1325,  1325,   351,  1435,
     530,   530,   530,   530,   530,   489,  1435,  1435,  1325,   660,
     865,  1435,  1435,  1435,  1435,  1283,  1435,  1435,   659,   660,
    1325,  1325,   660,   859,   852,   853,   872,   873,   874,  1062,
    1428,  1154,    64,   192,   416,   601,   966,  1039,  1062,  1040,
    1041,  1041,   124,  1438,  1428,  1154,  1285,  1283,  1428,  1283,
      13,  1093,  1101,  1102,  1438,  1154,  1435,  1435,  1435,  1005,
    1325,  1283,  1093,   261,  1101,   261,  1428,  1428,   955,  1440,
    1102,  1093,  1325,   185,   264,   367,   958,  1283,   124,  1438,
    1285,  1285,  1428,  1154,  1272,  1273,  1426,   124,  1283,   896,
    1435,  1154,  1428,  1429,  1154,  1154,    80,    82,   124,   147,
     186,   438,   957,   124,  1283,   124,  1283,   124,  1283,  1438,
    1283,  1093,   952,     7,   143,  1105,   960,   961,   962,   963,
     964,  1438,     9,   185,  1115,   439,   965,   966,  1032,   970,
     666,    81,   485,   449,  1083,  1546,   658,   416,  1255,  1256,
    1257,  1438,  1197,   658,  1283,  1433,  1283,  1283,  1433,  1433,
    1283,  1283,  1433,  1433,  1433,  1433,  1433,  1433,  1433,  1433,
    1283,  1283,  1433,  1420,   702,   658,   690,   690,   658,   695,
     695,   658,   698,   698,   658,   693,   689,  1325,  1325,  1325,
    1325,   660,   862,  1440,   284,   176,   183,   854,   855,   856,
     872,   873,   874,   875,   878,   879,   880,   881,   882,  1078,
     471,   720,  1564,   122,   245,   433,   547,   959,   658,   129,
     240,   606,   841,   273,   658,   884,   948,   950,   951,    47,
     215,   483,  1059,  1059,  1429,  1429,  1429,  1265,  1258,  1438,
    1274,   243,  1197,   659,   572,  1197,  1197,   153,    35,    62,
     111,   114,   122,   258,   355,   506,   576,   604,  1227,  1006,
    1197,  1197,  1006,  1227,   659,   659,   243,   243,  1197,  1197,
    1197,   386,  1224,  1197,  1197,  1197,  1197,  1197,  1200,   659,
     659,  1197,  1197,  1197,  1197,  1197,  1197,  1229,   243,  1197,
    1197,  1197,   659,  1197,  1197,  1197,  1197,   196,  1197,   196,
    1197,   196,  1197,  1197,  1197,    35,    62,  1025,  1026,  1027,
    1028,  1029,  1284,  1283,   659,   659,  1185,  1186,  1187,  1532,
    1533,  1534,  1245,  1181,   659,  1527,   666,  1063,  1530,  1199,
     659,   660,   659,  1207,  1259,  1259,    19,  1197,  1530,  1267,
    1218,  1228,   653,  1438,  1302,   955,  1441,  1114,   682,  1372,
     159,   660,  1438,  1504,  1505,   580,   653,  1429,  1438,  1499,
    1499,  1499,  1479,  1278,   498,  1317,  1318,   660,  1173,  1175,
    1437,   640,   280,   901,   902,   903,  1438,   659,    48,   658,
     915,   905,   159,   658,   580,  1142,  1189,  1332,   659,   939,
    1319,  1422,  1423,  1426,  1438,  1521,   658,  1323,  1326,   159,
     209,   196,  1499,  1499,  1499,  1007,    73,  1400,  1424,  1281,
    1281,    48,   216,  1266,   340,   658,   659,  1464,  1285,  1349,
     162,   628,   371,  1350,  1265,  1354,  1185,  1527,  1263,   663,
     256,  1243,  1248,  1248,   256,   376,   376,   612,   660,  1265,
    1324,   191,   230,   611,  1250,  1251,  1252,  1253,  1254,  1283,
    1435,  1435,   733,  1284,  1435,   159,  1014,  1007,   110,   110,
     126,   246,   288,   371,   591,   883,  1286,  1287,  1432,   865,
     718,   883,   883,   859,   660,   853,  1095,   658,   261,   261,
    1041,  1062,  1047,  1062,  1062,   143,   498,  1093,  1106,  1088,
     660,  1284,  1007,  1435,   561,  1428,  1114,   634,   561,  1435,
    1107,  1093,   660,  1277,  1093,   580,  1098,  1093,   658,   659,
     660,  1438,  1429,    34,    35,    40,    42,    44,    45,    62,
     111,   114,   122,   141,   158,   186,   188,   204,   205,   245,
     258,   277,   286,   287,   289,   326,   327,   328,   345,   346,
     347,   352,   355,   373,   374,   407,   408,   433,   494,   498,
     510,   570,   573,   576,   577,   578,   579,   619,   620,   647,
     971,   979,   982,   983,   984,   985,   986,   987,   988,  1438,
     365,   414,    25,   167,   721,   580,   136,   151,   723,   658,
    1547,  1093,   659,   660,   703,   704,  1283,   659,   691,   692,
    1438,   659,   696,   697,  1438,   659,   699,   700,  1433,  1434,
     658,   659,   694,  1435,  1284,   883,   883,   862,   382,   211,
    1325,  1325,   660,   856,  1074,   959,   376,   745,   746,   748,
    1438,   513,  1571,   376,  1429,   273,   885,   890,   891,   960,
     890,   660,   950,   709,   711,   713,   659,   660,   274,  1282,
    1197,   659,  1197,   572,   658,   996,   997,   997,   658,   991,
     658,   989,   990,   996,   997,   245,   991,   245,   659,   659,
     659,   659,   659,  1197,  1197,   659,   659,   660,   659,    48,
     492,  1223,   660,   660,   659,   660,   659,   247,  1213,  1214,
     659,   659,   659,   659,   660,   659,   659,  1197,   659,   193,
     659,   659,   660,   659,   660,   660,   659,  1197,   659,  1197,
     659,  1197,   659,   659,   659,   658,  1020,  1020,    22,   130,
     473,   651,  1022,  1023,  1024,   660,   660,  1265,  1193,  1534,
    1185,   659,  1524,  1528,  1438,   659,  1229,  1199,   659,   660,
     659,   659,  1109,  1110,  1111,   193,   634,  1373,    56,    66,
      76,    89,    90,    91,   105,   332,   349,   470,   486,   548,
     565,   785,   784,   659,   660,  1501,   666,   666,   580,   580,
     580,   658,  1332,   376,  1330,  1330,  1171,  1429,  1175,   230,
    1177,  1393,   659,   660,   899,   399,   916,   917,  1284,   901,
    1441,  1193,   658,  1320,  1321,   659,   659,   660,   666,   124,
    1197,  1327,  1328,  1329,   660,   772,   383,  1500,   196,   196,
     196,   152,   163,   384,   568,  1401,  1402,   276,  1403,  1269,
    1424,  1197,  1274,  1463,  1278,  1278,  1359,  1528,  1235,  1243,
     256,   256,  1235,  1243,  1197,  1197,   658,  1333,  1274,  1329,
    1040,  1040,  1251,   119,  1435,   853,   400,   658,  1096,  1197,
    1062,  1047,   658,  1046,  1046,   124,   124,   969,  1149,  1102,
    1012,   563,   971,  1087,  1273,  1428,  1099,  1101,  1089,  1377,
     962,   658,  1033,   996,   996,   997,   991,   989,   412,   980,
     989,   989,    23,    35,    49,   598,  1005,  1016,  1017,  1018,
      62,   619,   983,   985,  1018,  1018,    62,   620,   620,   623,
     989,   981,   997,   991,   991,  1018,   996,   997,    27,    71,
      75,    77,   124,   370,   376,   416,   494,   544,   601,   999,
    1000,  1001,  1013,  1031,  1203,   623,   996,  1018,    35,   996,
    1019,   996,   996,   997,   658,   990,   998,   666,   414,  1197,
    1197,   376,   727,   734,   376,    77,   728,  1438,  1548,    21,
     659,  1256,   659,   660,   659,   660,   659,   660,   666,   659,
     660,   692,   659,   660,   658,  1438,   883,   883,   856,   513,
     485,   659,   660,   747,  1435,   238,   247,   391,   749,   750,
     751,   752,  1429,  1429,   939,   659,   230,   454,   887,  1399,
     950,   658,   658,   658,  1438,  1281,  1259,  1197,   121,   288,
     371,   591,  1018,   371,   371,  1259,  1259,  1197,  1225,  1424,
    1416,   659,  1197,  1197,  1229,    44,   353,   659,   634,  1215,
    1197,  1259,  1197,  1197,  1197,  1197,   659,   659,   659,  1284,
     659,  1030,  1025,  1023,  1025,  1026,  1283,  1268,   659,  1229,
    1111,  1110,  1374,   431,  1505,   634,  1508,   653,   653,  1501,
    1501,  1501,  1328,  1330,   146,  1177,   267,  1399,   903,   215,
     261,   918,   659,   660,   659,  1185,  1523,  1320,  1321,  1422,
    1438,   659,   660,  1326,   196,  1500,  1500,  1500,    48,    48,
     152,    48,  1402,   534,   568,  1404,  1405,   635,   636,   660,
    1270,  1278,   659,   706,   376,   612,  1243,  1243,   376,   612,
    1258,  1282,   193,  1249,  1249,  1284,   916,   659,   658,   658,
    1060,  1061,  1438,   658,   658,   114,   573,   576,   651,   652,
    1418,  1419,  1115,  1429,  1108,  1154,  1100,  1141,   659,  1034,
    1438,   317,  1035,   506,   604,   648,   993,   994,   995,   658,
     993,   993,    35,    23,   598,  1005,    35,  1006,  1018,   623,
     993,   658,  1018,   993,  1011,   124,   147,   186,  1435,  1003,
    1004,  1418,   606,   124,   124,   138,   330,   261,    71,  1001,
     202,   972,   261,   370,  1018,  1019,  1018,  1019,   993,   371,
     993,  1438,  1259,   508,  1435,   142,  1084,   659,   660,  1549,
    1550,   704,   692,   697,  1438,   700,   660,   658,   717,  1435,
     721,  1565,   748,   979,  1002,   659,   660,   747,   193,   659,
     659,   948,    21,   940,  1060,  1060,  1060,   659,   659,   659,
     659,   659,   659,   660,   659,   659,   659,   660,   659,   660,
     659,   340,   263,   426,   659,   659,   659,   659,   659,   659,
    1021,   659,   660,  1266,   659,   174,   283,   209,  1506,  1506,
    1506,   659,   261,   244,   658,   906,   900,   919,  1438,   917,
    1329,  1500,  1416,  1416,    48,  1416,    48,    48,  1405,  1424,
     418,  1289,  1197,   658,  1197,   658,   659,   211,   256,   386,
     658,   658,   659,  1060,  1060,   659,   660,  1277,   658,  1060,
    1060,  1420,  1420,  1090,  1091,  1115,   244,   659,   660,   197,
     398,   507,   376,  1036,   995,  1064,  1416,  1006,  1019,  1064,
    1003,   618,  1011,    15,    21,   722,   729,   730,  1438,   490,
     658,  1551,  1555,   692,   692,   659,   726,   727,   471,  1012,
    1572,   751,  1438,   148,   886,   890,   658,   939,   659,   659,
     659,   371,  1424,  1197,   340,   172,   659,  1283,  1274,   383,
     634,  1507,  1507,  1507,   606,   563,   913,   909,   658,   617,
     920,  1416,  1416,  1416,    16,  1294,  1295,  1258,  1258,    48,
      48,  1255,  1257,   659,   659,    77,   260,  1048,  1051,  1054,
    1055,  1056,  1061,   371,   659,   659,   658,  1438,   129,   606,
     659,   660,   659,   658,   535,   724,    54,    68,   181,   229,
     255,   268,   379,   472,   731,   790,   792,   793,   794,   796,
     797,   798,   799,   800,   801,   803,   811,   812,   815,   826,
     829,   831,   832,  1432,  1439,  1443,  1556,   658,  1553,  1554,
     634,  1557,  1552,   659,   660,   723,  1566,   736,  1002,   481,
    1523,   887,   939,   888,  1048,   634,  1049,  1053,  1055,  1058,
    1050,  1052,  1055,  1057,   659,   659,   659,  1278,   209,   318,
     319,   323,   324,  1509,  1510,  1332,  1429,   659,   551,   914,
     911,   912,  1438,   247,   270,    77,   110,   234,   320,   338,
     362,   561,   936,   937,   938,  1353,   658,  1192,   659,   659,
     659,   659,  1032,  1048,  1435,  1325,  1056,  1277,   659,  1049,
    1050,   916,    52,   367,   468,   498,  1037,  1037,  1018,  1416,
    1018,   978,  1197,   154,   725,   813,   816,  1438,   196,   361,
     804,   791,  1439,  1439,  1438,   795,   673,   290,   453,   633,
     835,    32,   833,   667,  1182,  1553,   659,  1555,    53,    64,
     280,  1521,   692,   728,  1002,   133,   737,   738,  1203,  1573,
     190,   411,  1558,  1559,   659,  1521,   710,   396,   712,  1058,
     714,  1057,  1289,   383,  1283,  1283,  1283,  1283,  1510,  1241,
    1284,   659,   660,   922,   571,  1325,   135,   135,  1325,  1325,
    1325,  1325,   658,   931,   938,   157,   371,  1290,  1291,  1283,
     659,     6,   124,   370,   376,   376,   659,  1197,  1197,   631,
     818,   822,   196,  1438,   806,   807,  1197,   754,   789,   790,
     792,   794,   796,   798,   799,   800,   801,   803,   811,   826,
     829,   831,   754,   836,   834,   827,   830,   659,  1523,    64,
     383,    64,   659,   142,  1567,   133,   789,  1440,  1561,   889,
    1109,  1432,  1109,  1109,  1192,  1394,   910,   912,   658,   924,
     926,   921,  1435,  1325,  1325,  1286,  1286,  1284,  1438,   552,
     932,   933,  1325,   659,   660,   606,   129,   545,   626,   976,
     814,   823,   149,   822,   825,   244,   153,  1197,   153,   789,
     664,   605,  1197,   755,   835,   833,   383,   383,   729,   736,
     789,  1523,  1008,   914,   658,   925,   926,   927,   325,   923,
     926,  1435,  1435,   934,   659,   660,   955,  1291,  1037,  1037,
      77,   370,   601,   973,   974,   975,  1031,  1203,   631,   817,
     819,  1197,   754,   153,   802,   229,   808,   290,   664,   838,
     837,   123,   753,   756,   828,  1439,   828,  1568,  1395,   659,
     660,   325,   929,   930,  1200,   935,  1440,   933,  1435,   261,
     975,   261,   370,   820,   819,   825,   824,    54,   805,  1438,
     572,  1197,   142,    94,   171,   760,   786,  1438,   153,   789,
     664,   789,   479,  1406,   926,   660,   928,   936,  1197,   153,
     572,   660,   754,   839,   754,   214,   660,   757,    85,   104,
     664,   227,  1400,   930,   659,   821,    54,   754,  1438,   809,
     153,   153,   193,  1438,  1002,   193,   193,    48,  1403,   572,
     149,   150,   810,   453,   633,   758,   124,   787,   763,   764,
    1283,   759,  1416,   230,  1407,   754,   754,   806,   518,   520,
     761,   762,   763,   766,  1203,  1438,   788,  1178,   371,   658,
    1409,   660,   789,   195,  1197,   276,   479,  1408,   659,   665,
    1410,  1411,  1426,   498,  1412,   762,  1440,   659,   660,  1413,
    1414,  1426,  1411,   660,  1324,  1414,  1329
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  However,
   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
   discussed.  */

#define YYFAIL		goto yyerrlab
#if defined YYFAIL
  /* This is here to suppress warnings from the GCC cpp's
     -Wunused-macros.  Normally we don't worry about that warning, but
     some users do, and we want to make it easy for users to remove
     YYFAIL uses, which will produce warnings from Bison 2.5.  */
#endif

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))

/* Error token number */
#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (YYID (N))                                                     \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (YYID (0))
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

__attribute__((__unused__))
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
#else
static unsigned
yy_location_print_ (yyo, yylocp)
    FILE *yyo;
    YYLTYPE const * const yylocp;
#endif
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += fprintf (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += fprintf (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += fprintf (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += fprintf (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += fprintf (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */
#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, YYTHD)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, YYTHD); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
#endif
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (YYTHD);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
        break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
#else
static void
yy_stack_print (yybottom, yytop)
    yytype_int16 *yybottom;
    yytype_int16 *yytop;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, YYTHD)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    class THD *YYTHD;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , YYTHD);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, YYTHD); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULL, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULL;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - Assume YYFAIL is not used.  It's too flawed to consider.  See
       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
       for details.  YYERROR is fine as it does not invoke this
       function.
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULL, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, YYTHD)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    class THD *YYTHD;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
        break;
    }
}




/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (class THD *YYTHD)
#else
int
yyparse (YYTHD)
    class THD *YYTHD;
#endif
#endif
{
/* The lookahead symbol.  */
int yychar;


#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
static YYSTYPE yyval_default;
# define YY_INITIAL_VALUE(Value) = Value
#endif
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

/* The semantic value of the lookahead symbol.  */
YYSTYPE yylval YY_INITIAL_VALUE(yyval_default);

/* Location data for the lookahead symbol.  */
YYLTYPE yylloc = yyloc_default;


    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       `yyss': related to states.
       `yyvs': related to semantic values.
       `yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);

	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss_alloc, yyss);
	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
	YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
/* Line 1792 of yacc.c  */
#line 1584 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!thd->bootstrap &&
                !thd->m_parser_state->has_comment())
            {
              my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 3:
/* Line 1792 of yacc.c  */
#line 1596 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
    break;

  case 5:
/* Line 1792 of yacc.c  */
#line 1621 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 20:
/* Line 1792 of yacc.c  */
#line 1649 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {  MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 22:
/* Line 1792 of yacc.c  */
#line 1651 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].select)); }
    break;

  case 31:
/* Line 1792 of yacc.c  */
#line 1660 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 46:
/* Line 1792 of yacc.c  */
#line 1675 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 52:
/* Line 1792 of yacc.c  */
#line 1681 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].select)); }
    break;

  case 53:
/* Line 1792 of yacc.c  */
#line 1682 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].set)); }
    break;

  case 56:
/* Line 1792 of yacc.c  */
#line 1685 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 62:
/* Line 1792 of yacc.c  */
#line 1691 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 65:
/* Line 1792 of yacc.c  */
#line 1698 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 68:
/* Line 1792 of yacc.c  */
#line 1713 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (4)].lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
    break;

  case 69:
/* Line 1792 of yacc.c  */
#line 1733 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(1) - (1)].lex_str);
            lex->prepared_stmt_code_is_varref= FALSE;
          }
    break;

  case 70:
/* Line 1792 of yacc.c  */
#line 1740 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(2) - (2)].lex_str);
            lex->prepared_stmt_code_is_varref= TRUE;
          }
    break;

  case 71:
/* Line 1792 of yacc.c  */
#line 1750 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 72:
/* Line 1792 of yacc.c  */
#line 1757 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 77:
/* Line 1792 of yacc.c  */
#line 1772 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[(2) - (2)].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
    break;

  case 78:
/* Line 1792 of yacc.c  */
#line 1784 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
    break;

  case 79:
/* Line 1792 of yacc.c  */
#line 1792 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 80:
/* Line 1792 of yacc.c  */
#line 1803 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
    break;

  case 81:
/* Line 1792 of yacc.c  */
#line 1814 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 82:
/* Line 1792 of yacc.c  */
#line 1816 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 83:
/* Line 1792 of yacc.c  */
#line 1826 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 86:
/* Line 1792 of yacc.c  */
#line 1835 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_DB);
          }
    break;

  case 87:
/* Line 1792 of yacc.c  */
#line 1842 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_DB);
          }
    break;

  case 88:
/* Line 1792 of yacc.c  */
#line 1849 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_TABLE);
          }
    break;

  case 89:
/* Line 1792 of yacc.c  */
#line 1856 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
    break;

  case 90:
/* Line 1792 of yacc.c  */
#line 1863 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
    break;

  case 91:
/* Line 1792 of yacc.c  */
#line 1870 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
    break;

  case 92:
/* Line 1792 of yacc.c  */
#line 1878 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_REWRITE_DB);
          }
    break;

  case 93:
/* Line 1792 of yacc.c  */
#line 1887 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 94:
/* Line 1792 of yacc.c  */
#line 1893 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 95:
/* Line 1792 of yacc.c  */
#line 1900 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 96:
/* Line 1792 of yacc.c  */
#line 1907 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 97:
/* Line 1792 of yacc.c  */
#line 1915 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *db_item= new (thd->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str,
                                                           (yyvsp[(1) - (1)].lex_str).length,
                                                           thd->charset());
            (yyval.item)= db_item;
          }
    break;

  case 98:
/* Line 1792 of yacc.c  */
#line 1925 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 99:
/* Line 1792 of yacc.c  */
#line 1931 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 100:
/* Line 1792 of yacc.c  */
#line 1937 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (5)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (5)].item));
          }
    break;

  case 101:
/* Line 1792 of yacc.c  */
#line 1945 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(4) - (7)].item));
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(6) - (7)].item));
            (yyval.item_list)= (yyvsp[(1) - (7)].item_list);
          }
    break;

  case 102:
/* Line 1792 of yacc.c  */
#line 1953 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 103:
/* Line 1792 of yacc.c  */
#line 1959 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 104:
/* Line 1792 of yacc.c  */
#line 1966 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 105:
/* Line 1792 of yacc.c  */
#line 1973 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 106:
/* Line 1792 of yacc.c  */
#line 1981 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item_string *table_item= new (thd->mem_root) Item_string((yyvsp[(1) - (3)].lex_str).str,
                                                              (yyvsp[(1) - (3)].lex_str).length,
                                                              thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
            (yyval.item)= table_item;
          }
    break;

  case 107:
/* Line 1792 of yacc.c  */
#line 1994 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 108:
/* Line 1792 of yacc.c  */
#line 2000 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 109:
/* Line 1792 of yacc.c  */
#line 2007 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 110:
/* Line 1792 of yacc.c  */
#line 2014 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 111:
/* Line 1792 of yacc.c  */
#line 2022 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *string_item= new (thd->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str,
                                                               (yyvsp[(1) - (1)].lex_str).length,
                                                               thd->charset());
            (yyval.item)= string_item;
          }
    break;

  case 114:
/* Line 1792 of yacc.c  */
#line 2038 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.host = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 115:
/* Line 1792 of yacc.c  */
#line 2042 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.bind_addr = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 116:
/* Line 1792 of yacc.c  */
#line 2046 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.user = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 117:
/* Line 1792 of yacc.c  */
#line 2050 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.password = (yyvsp[(3) - (3)].lex_str).str;
            if (strlen((yyvsp[(3) - (3)].lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
    break;

  case 118:
/* Line 1792 of yacc.c  */
#line 2060 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.port = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 119:
/* Line 1792 of yacc.c  */
#line 2064 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.connect_retry = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 120:
/* Line 1792 of yacc.c  */
#line 2068 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.retry_count= (yyvsp[(3) - (3)].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 121:
/* Line 1792 of yacc.c  */
#line 2073 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[(3) - (3)]).cpp.start, (yylsp[(3) - (3)]).cpp.end - (yylsp[(3) - (3)]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 122:
/* Line 1792 of yacc.c  */
#line 2084 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 123:
/* Line 1792 of yacc.c  */
#line 2089 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_ca= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 124:
/* Line 1792 of yacc.c  */
#line 2093 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_capath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 125:
/* Line 1792 of yacc.c  */
#line 2097 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.tls_version= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 126:
/* Line 1792 of yacc.c  */
#line 2101 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cert= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 127:
/* Line 1792 of yacc.c  */
#line 2105 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cipher= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 128:
/* Line 1792 of yacc.c  */
#line 2109 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_key= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 129:
/* Line 1792 of yacc.c  */
#line 2113 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 130:
/* Line 1792 of yacc.c  */
#line 2118 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crl= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 131:
/* Line 1792 of yacc.c  */
#line 2122 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crlpath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 132:
/* Line 1792 of yacc.c  */
#line 2127 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            Lex->mi.heartbeat_period= (float) (yyvsp[(3) - (3)].item)->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 133:
/* Line 1792 of yacc.c  */
#line 2160 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
    break;

  case 134:
/* Line 1792 of yacc.c  */
#line 2165 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.auto_position= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 139:
/* Line 1792 of yacc.c  */
#line 2182 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[(1) - (1)].ulong_num));
          }
    break;

  case 140:
/* Line 1792 of yacc.c  */
#line 2188 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.log_file_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 141:
/* Line 1792 of yacc.c  */
#line 2192 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.pos = (yyvsp[(3) - (3)].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
    break;

  case 142:
/* Line 1792 of yacc.c  */
#line 2208 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 143:
/* Line 1792 of yacc.c  */
#line 2212 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_pos = (yyvsp[(3) - (3)].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
    break;

  case 144:
/* Line 1792 of yacc.c  */
#line 2222 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       }
    break;

  case 145:
/* Line 1792 of yacc.c  */
#line 2227 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, (yyvsp[(3) - (3)].lex_str).str);
         Lex->mi.channel= (yyvsp[(3) - (3)].lex_str).str;
         Lex->mi.for_channel= true;
       }
    break;

  case 146:
/* Line 1792 of yacc.c  */
#line 2244 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_TABLE;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(5) - (5)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_WRITE, MDL_SHARED))
              MYSQL_YYABORT;
            /*
              Instruct open_table() to acquire SHARED lock to check the
              existance of table. If the table does not exist then
              it will be upgraded EXCLUSIVE MDL lock. If table exist
              then open_table() will return with an error or warning.
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_FOR_CREATE;
            lex->alter_info.reset();
            lex->col_list.empty();
            lex->change=NullS;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.options=(yyvsp[(2) - (5)].num) | (yyvsp[(4) - (5)].num);
            lex->create_info.default_table_charset= NULL;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->create_last_non_select_table= lex->last_table();
          }
    break;

  case 147:
/* Line 1792 of yacc.c  */
#line 2270 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->set_current_select(lex->select_lex);
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.db_type=
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE ?
                ha_default_temp_handlerton(thd) : ha_default_handlerton(thd);
              push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                  ER_WARN_USING_OTHER_HANDLER,
                                  ER(ER_WARN_USING_OTHER_HANDLER),
                                  ha_resolve_storage_engine_name(lex->create_info.db_type),
                                  (yyvsp[(5) - (7)].table)->table.str);
            }
            create_table_set_open_action_and_adjust_tables(lex);
          }
    break;

  case 148:
/* Line 1792 of yacc.c  */
#line 2289 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 149:
/* Line 1792 of yacc.c  */
#line 2294 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 150:
/* Line 1792 of yacc.c  */
#line 2298 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 151:
/* Line 1792 of yacc.c  */
#line 2301 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 152:
/* Line 1792 of yacc.c  */
#line 2306 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 153:
/* Line 1792 of yacc.c  */
#line 2310 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 154:
/* Line 1792 of yacc.c  */
#line 2313 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 155:
/* Line 1792 of yacc.c  */
#line 2318 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 156:
/* Line 1792 of yacc.c  */
#line 2322 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 157:
/* Line 1792 of yacc.c  */
#line 2324 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 158:
/* Line 1792 of yacc.c  */
#line 2329 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[(4) - (6)].lex_str);
            lex->create_info.options=(yyvsp[(3) - (6)].num);
          }
    break;

  case 159:
/* Line 1792 of yacc.c  */
#line 2336 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
          }
    break;

  case 160:
/* Line 1792 of yacc.c  */
#line 2342 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 161:
/* Line 1792 of yacc.c  */
#line 2345 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->create_info.options=(yyvsp[(3) - (8)].num);
          }
    break;

  case 162:
/* Line 1792 of yacc.c  */
#line 2351 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
    break;

  case 163:
/* Line 1792 of yacc.c  */
#line 2355 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
    break;

  case 164:
/* Line 1792 of yacc.c  */
#line 2360 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            Lex->server_options.m_server_name= (yyvsp[(3) - (11)].lex_str);
            Lex->server_options.set_scheme((yyvsp[(7) - (11)].lex_str));
            Lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_create_server(&Lex->server_options);
          }
    break;

  case 167:
/* Line 1792 of yacc.c  */
#line 2376 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_username((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 168:
/* Line 1792 of yacc.c  */
#line 2380 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_host((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 169:
/* Line 1792 of yacc.c  */
#line 2384 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_db((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 170:
/* Line 1792 of yacc.c  */
#line 2388 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_owner((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 171:
/* Line 1792 of yacc.c  */
#line 2392 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_password((yyvsp[(2) - (2)].lex_str));
            Lex->contains_plaintext_password= true;
          }
    break;

  case 172:
/* Line 1792 of yacc.c  */
#line 2397 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_socket((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 173:
/* Line 1792 of yacc.c  */
#line 2401 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_port((yyvsp[(2) - (2)].ulong_num));
          }
    break;

  case 174:
/* Line 1792 of yacc.c  */
#line 2408 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;
            lex->create_info.options= (yyvsp[(2) - (3)].num);
            if (!(lex->event_parse_data= Event_parse_data::new_instance(thd)))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[(3) - (3)].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
    break;

  case 175:
/* Line 1792 of yacc.c  */
#line 2428 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
    break;

  case 176:
/* Line 1792 of yacc.c  */
#line 2439 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (3)].item), &(yyvsp[(2) - (3)].item));

            Lex->event_parse_data->item_expression= (yyvsp[(2) - (3)].item);
            Lex->event_parse_data->interval= (yyvsp[(3) - (3)].interval);
          }
    break;

  case 178:
/* Line 1792 of yacc.c  */
#line 2448 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[(2) - (2)].item);
          }
    break;

  case 179:
/* Line 1792 of yacc.c  */
#line 2456 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 180:
/* Line 1792 of yacc.c  */
#line 2458 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 181:
/* Line 1792 of yacc.c  */
#line 2464 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 182:
/* Line 1792 of yacc.c  */
#line 2470 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 183:
/* Line 1792 of yacc.c  */
#line 2479 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
    break;

  case 184:
/* Line 1792 of yacc.c  */
#line 2486 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_starts= (yyvsp[(2) - (2)].item);
          }
    break;

  case 186:
/* Line 1792 of yacc.c  */
#line 2496 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_ends= (yyvsp[(2) - (2)].item);
          }
    break;

  case 187:
/* Line 1792 of yacc.c  */
#line 2504 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 189:
/* Line 1792 of yacc.c  */
#line 2510 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
    break;

  case 190:
/* Line 1792 of yacc.c  */
#line 2516 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
    break;

  case 191:
/* Line 1792 of yacc.c  */
#line 2524 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 192:
/* Line 1792 of yacc.c  */
#line 2526 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[(2) - (2)].lex_str);
            (yyval.num)= 1;
          }
    break;

  case 193:
/* Line 1792 of yacc.c  */
#line 2533 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          SP_TYPE_EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[(0) - (0)]).cpp.end);
          }
    break;

  case 194:
/* Line 1792 of yacc.c  */
#line 2579 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= TRUE;
          }
    break;

  case 208:
/* Line 1792 of yacc.c  */
#line 2608 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex->db= NULL;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           lex->alter_password.update_account_locked_column= false;
           lex->alter_password.account_locked= false;
           memset(&(lex->mqh), 0, sizeof(lex->mqh));
         }
    break;

  case 209:
/* Line 1792 of yacc.c  */
#line 2625 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->alter_password.update_password_expired_fields= false;
           lex->alter_password.update_password_expired_column= false;
           lex->alter_password.use_default_password_lifetime= true;
           lex->alter_password.expire_after_days= 0;
         }
    break;

  case 210:
/* Line 1792 of yacc.c  */
#line 2636 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(1) - (3)].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[(1) - (3)].lex_str), FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(3) - (3)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new sp_name(to_lex_cstring((yyvsp[(1) - (3)].lex_str)), (yyvsp[(3) - (3)].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
    break;

  case 211:
/* Line 1792 of yacc.c  */
#line 2650 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db;
            if (sp_check_name(&(yyvsp[(1) - (1)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new sp_name(to_lex_cstring(db), (yyvsp[(1) - (1)].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
    break;

  case 212:
/* Line 1792 of yacc.c  */
#line 2668 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 213:
/* Line 1792 of yacc.c  */
#line 2669 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 214:
/* Line 1792 of yacc.c  */
#line 2673 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 215:
/* Line 1792 of yacc.c  */
#line 2674 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 216:
/* Line 1792 of yacc.c  */
#line 2680 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 217:
/* Line 1792 of yacc.c  */
#line 2682 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 218:
/* Line 1792 of yacc.c  */
#line 2684 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 219:
/* Line 1792 of yacc.c  */
#line 2686 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 220:
/* Line 1792 of yacc.c  */
#line 2688 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 221:
/* Line 1792 of yacc.c  */
#line 2690 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 222:
/* Line 1792 of yacc.c  */
#line 2692 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 223:
/* Line 1792 of yacc.c  */
#line 2697 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 224:
/* Line 1792 of yacc.c  */
#line 2698 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 225:
/* Line 1792 of yacc.c  */
#line 2699 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 226:
/* Line 1792 of yacc.c  */
#line 2704 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
    break;

  case 227:
/* Line 1792 of yacc.c  */
#line 2708 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
    break;

  case 228:
/* Line 1792 of yacc.c  */
#line 2715 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;

            lex->sql_command= SQLCOM_CALL;
            lex->spname= (yyvsp[(2) - (2)].spname);
            lex->call_value_list.empty();
            sp_add_used_routine(lex, YYTHD, (yyvsp[(2) - (2)].spname), SP_TYPE_PROCEDURE);
          }
    break;

  case 229:
/* Line 1792 of yacc.c  */
#line 2723 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 234:
/* Line 1792 of yacc.c  */
#line 2739 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

           Lex->call_value_list.push_back((yyvsp[(3) - (3)].item));
          }
    break;

  case 235:
/* Line 1792 of yacc.c  */
#line 2745 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            Lex->call_value_list.push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 240:
/* Line 1792 of yacc.c  */
#line 2765 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->length= 0;
            lex->dec= 0;
            lex->type= 0;

            lex->default_value= 0;
            lex->on_update_value= 0;

            lex->comment= null_lex_str;
            lex->charset= NULL;

            lex->interval_list.empty();
            lex->uint_geom_type= 0;
          }
    break;

  case 241:
/* Line 1792 of yacc.c  */
#line 2785 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(1) - (3)].lex_str),
                                                   (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                                   sp_variable::MODE_IN);

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 246:
/* Line 1792 of yacc.c  */
#line 2826 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (4)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }
            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(3) - (4)].lex_str),
                                                   (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                                   (sp_variable::enum_mode) (yyvsp[(1) - (4)].num));

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 247:
/* Line 1792 of yacc.c  */
#line 2854 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 248:
/* Line 1792 of yacc.c  */
#line 2855 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 249:
/* Line 1792 of yacc.c  */
#line 2856 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_OUT; }
    break;

  case 250:
/* Line 1792 of yacc.c  */
#line 2857 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_INOUT; }
    break;

  case 251:
/* Line 1792 of yacc.c  */
#line 2861 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 253:
/* Line 1792 of yacc.c  */
#line 2866 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 255:
/* Line 1792 of yacc.c  */
#line 2872 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 256:
/* Line 1792 of yacc.c  */
#line 2876 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[(2) - (3)].spblock).vars || (yyvsp[(2) - (3)].spblock).conds) && ((yyvsp[(1) - (3)].spblock).curs || (yyvsp[(1) - (3)].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(2) - (3)].spblock).curs && (yyvsp[(1) - (3)].spblock).hndlrs)
            { /* Cursor following handler */
              my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[(1) - (3)].spblock).vars + (yyvsp[(2) - (3)].spblock).vars;
            (yyval.spblock).conds= (yyvsp[(1) - (3)].spblock).conds + (yyvsp[(2) - (3)].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[(1) - (3)].spblock).hndlrs + (yyvsp[(2) - (3)].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[(1) - (3)].spblock).curs + (yyvsp[(2) - (3)].spblock).curs;
          }
    break;

  case 257:
/* Line 1792 of yacc.c  */
#line 2903 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            pctx->declare_var_boundary((yyvsp[(2) - (2)].num));
          }
    break;

  case 258:
/* Line 1792 of yacc.c  */
#line 2914 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint num_vars= pctx->context_var_count();
            enum enum_field_types var_type= (enum enum_field_types) (yyvsp[(4) - (5)].num);
            Item *dflt_value_item= (yyvsp[(5) - (5)].item);
            LEX_STRING dflt_value_query= EMPTY_STR;

            if (dflt_value_item)
            {
              // sp_opt_default only pushes start ptr for DEFAULT clause.
              const char *expr_start_ptr=
                sp->m_parser_data.pop_expr_start_ptr();
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[(5) - (5)]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= new (thd->mem_root) Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[(2) - (5)].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (fill_field_definition(thd, sp, var_type, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is=
                new (thd->mem_root)
                  sp_instr_set(sp->instructions(),
                               lex,
                               var_idx,
                               dflt_value_item,
                               dflt_value_query,
                               (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[(2) - (5)].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 259:
/* Line 1792 of yacc.c  */
#line 2987 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[(2) - (5)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[(2) - (5)].lex_str), (yyvsp[(5) - (5)].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
    break;

  case 260:
/* Line 1792 of yacc.c  */
#line 3004 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[(2) - (4)].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              new (thd->mem_root)
                sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[(2) - (4)].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_STR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
    break;

  case 261:
/* Line 1792 of yacc.c  */
#line 3046 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[(2) - (7)].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
    break;

  case 262:
/* Line 1792 of yacc.c  */
#line 3083 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[(4) - (4)]).raw.end);
          }
    break;

  case 263:
/* Line 1792 of yacc.c  */
#line 3092 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {             /*$7*/
            CONTEXTUALIZE((yyvsp[(6) - (6)].select));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[(2) - (6)].lex_str), &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[(2) - (6)].lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_STRING cursor_query= EMPTY_STR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(6) - (6)]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              new (thd->mem_root)
                sp_instr_cpush(sp->instructions(), pctx,
                               cursor_lex, cursor_query,
                               pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[(2) - (6)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
    break;

  case 264:
/* Line 1792 of yacc.c  */
#line 3157 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::EXIT; }
    break;

  case 265:
/* Line 1792 of yacc.c  */
#line 3158 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::CONTINUE; }
    break;

  case 266:
/* Line 1792 of yacc.c  */
#line 3164 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 267:
/* Line 1792 of yacc.c  */
#line 3166 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)+= 1; }
    break;

  case 268:
/* Line 1792 of yacc.c  */
#line 3171 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[(1) - (1)].spcondvalue)))
            {
              my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[(1) - (1)].spcondvalue));
            }
          }
    break;

  case 269:
/* Line 1792 of yacc.c  */
#line 3194 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { /* mysql errno */
            if ((yyvsp[(1) - (1)].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(1) - (1)].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 271:
/* Line 1792 of yacc.c  */
#line 3209 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[(3) - (3)].lex_str)) || is_sqlstate_completion((yyvsp[(3) - (3)].lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(3) - (3)].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 272:
/* Line 1792 of yacc.c  */
#line 3230 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 273:
/* Line 1792 of yacc.c  */
#line 3231 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 274:
/* Line 1792 of yacc.c  */
#line 3236 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue);
          }
    break;

  case 275:
/* Line 1792 of yacc.c  */
#line 3240 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 276:
/* Line 1792 of yacc.c  */
#line 3253 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 277:
/* Line 1792 of yacc.c  */
#line 3259 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 278:
/* Line 1792 of yacc.c  */
#line 3265 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 279:
/* Line 1792 of yacc.c  */
#line 3274 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_signal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 280:
/* Line 1792 of yacc.c  */
#line 3287 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
    break;

  case 281:
/* Line 1792 of yacc.c  */
#line 3313 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 282:
/* Line 1792 of yacc.c  */
#line 3318 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= NULL; }
    break;

  case 283:
/* Line 1792 of yacc.c  */
#line 3320 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 284:
/* Line 1792 of yacc.c  */
#line 3325 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= new (YYTHD->mem_root) Set_signal_information(); }
    break;

  case 285:
/* Line 1792 of yacc.c  */
#line 3327 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= (yyvsp[(2) - (2)].signal_item_list); }
    break;

  case 286:
/* Line 1792 of yacc.c  */
#line 3332 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= new (YYTHD->mem_root) Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[(1) - (3)].da_condition_item_name), (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 287:
/* Line 1792 of yacc.c  */
#line 3339 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= (yyvsp[(1) - (5)].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[(3) - (5)].da_condition_item_name), (yyvsp[(5) - (5)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 288:
/* Line 1792 of yacc.c  */
#line 3351 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 289:
/* Line 1792 of yacc.c  */
#line 3353 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            if ((yyvsp[(1) - (1)].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[(1) - (1)].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[(1) - (1)].item);
          }
    break;

  case 290:
/* Line 1792 of yacc.c  */
#line 3373 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 291:
/* Line 1792 of yacc.c  */
#line 3379 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
    break;

  case 292:
/* Line 1792 of yacc.c  */
#line 3381 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
    break;

  case 293:
/* Line 1792 of yacc.c  */
#line 3383 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
    break;

  case 294:
/* Line 1792 of yacc.c  */
#line 3385 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
    break;

  case 295:
/* Line 1792 of yacc.c  */
#line 3387 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
    break;

  case 296:
/* Line 1792 of yacc.c  */
#line 3389 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
    break;

  case 297:
/* Line 1792 of yacc.c  */
#line 3391 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
    break;

  case 298:
/* Line 1792 of yacc.c  */
#line 3393 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
    break;

  case 299:
/* Line 1792 of yacc.c  */
#line 3395 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
    break;

  case 300:
/* Line 1792 of yacc.c  */
#line 3397 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
    break;

  case 301:
/* Line 1792 of yacc.c  */
#line 3399 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
    break;

  case 302:
/* Line 1792 of yacc.c  */
#line 3401 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
    break;

  case 303:
/* Line 1792 of yacc.c  */
#line 3406 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_resignal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 304:
/* Line 1792 of yacc.c  */
#line 3420 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Diagnostics_information *info= (yyvsp[(4) - (4)].diag_info);

            info->set_which_da((yyvsp[(2) - (4)].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 305:
/* Line 1792 of yacc.c  */
#line 3436 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 306:
/* Line 1792 of yacc.c  */
#line 3438 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 307:
/* Line 1792 of yacc.c  */
#line 3440 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
    break;

  case 308:
/* Line 1792 of yacc.c  */
#line 3445 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Statement_information((yyvsp[(1) - (1)].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 309:
/* Line 1792 of yacc.c  */
#line 3451 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Condition_information((yyvsp[(2) - (3)].item), (yyvsp[(3) - (3)].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 310:
/* Line 1792 of yacc.c  */
#line 3460 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_list)= new (YYTHD->mem_root) List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[(1) - (1)].stmt_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 311:
/* Line 1792 of yacc.c  */
#line 3466 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].stmt_info_list)->push_back((yyvsp[(3) - (3)].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[(1) - (3)].stmt_info_list);
          }
    break;

  case 312:
/* Line 1792 of yacc.c  */
#line 3475 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_item)= new (YYTHD->mem_root) Statement_information_item((yyvsp[(3) - (3)].stmt_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 313:
/* Line 1792 of yacc.c  */
#line 3483 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, (yyvsp[(1) - (1)].lex_str), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[(1) - (1)]).raw.start,
                (yylsp[(1) - (1)]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 314:
/* Line 1792 of yacc.c  */
#line 3511 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[(2) - (2)].lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
    break;

  case 315:
/* Line 1792 of yacc.c  */
#line 3519 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
    break;

  case 316:
/* Line 1792 of yacc.c  */
#line 3521 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
    break;

  case 317:
/* Line 1792 of yacc.c  */
#line 3530 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 318:
/* Line 1792 of yacc.c  */
#line 3535 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_list)= new (YYTHD->mem_root) List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[(1) - (1)].cond_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 319:
/* Line 1792 of yacc.c  */
#line 3541 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].cond_info_list)->push_back((yyvsp[(3) - (3)].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[(1) - (3)].cond_info_list);
          }
    break;

  case 320:
/* Line 1792 of yacc.c  */
#line 3550 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_item)= new (YYTHD->mem_root) Condition_information_item((yyvsp[(3) - (3)].cond_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 321:
/* Line 1792 of yacc.c  */
#line 3558 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
    break;

  case 322:
/* Line 1792 of yacc.c  */
#line 3560 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
    break;

  case 323:
/* Line 1792 of yacc.c  */
#line 3562 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
    break;

  case 324:
/* Line 1792 of yacc.c  */
#line 3564 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
    break;

  case 325:
/* Line 1792 of yacc.c  */
#line 3566 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
    break;

  case 326:
/* Line 1792 of yacc.c  */
#line 3568 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
    break;

  case 327:
/* Line 1792 of yacc.c  */
#line 3570 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
    break;

  case 328:
/* Line 1792 of yacc.c  */
#line 3572 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
    break;

  case 329:
/* Line 1792 of yacc.c  */
#line 3574 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
    break;

  case 330:
/* Line 1792 of yacc.c  */
#line 3576 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
    break;

  case 331:
/* Line 1792 of yacc.c  */
#line 3578 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
    break;

  case 332:
/* Line 1792 of yacc.c  */
#line 3580 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
    break;

  case 333:
/* Line 1792 of yacc.c  */
#line 3582 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
    break;

  case 334:
/* Line 1792 of yacc.c  */
#line 3587 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (1)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(1) - (1)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
    break;

  case 335:
/* Line 1792 of yacc.c  */
#line 3607 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(3) - (3)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[(1) - (3)].num) + 1;
          }
    break;

  case 336:
/* Line 1792 of yacc.c  */
#line 3630 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item) = NULL; }
    break;

  case 337:
/* Line 1792 of yacc.c  */
#line 3632 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->sphead->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end); }
    break;

  case 338:
/* Line 1792 of yacc.c  */
#line 3634 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            (yyval.item) = (yyvsp[(3) - (3)].item);
          }
    break;

  case 352:
/* Line 1792 of yacc.c  */
#line 3659 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
    break;

  case 353:
/* Line 1792 of yacc.c  */
#line 3661 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 354:
/* Line 1792 of yacc.c  */
#line 3669 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
    break;

  case 355:
/* Line 1792 of yacc.c  */
#line 3678 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_STRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(2) - (2)]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                new (thd->mem_root)
                  sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
    break;

  case 356:
/* Line 1792 of yacc.c  */
#line 3725 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);

            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 357:
/* Line 1792 of yacc.c  */
#line 3735 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != SP_TYPE_FUNCTION)
            {
              my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              new (thd->mem_root)
                sp_instr_freturn(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query,
                                 sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 358:
/* Line 1792 of yacc.c  */
#line 3783 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_STR,
                             sp->instructions());
          }
    break;

  case 359:
/* Line 1792 of yacc.c  */
#line 3794 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 360:
/* Line 1792 of yacc.c  */
#line 3806 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 361:
/* Line 1792 of yacc.c  */
#line 3865 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i=
              new (thd->mem_root) sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 362:
/* Line 1792 of yacc.c  */
#line 3915 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i=
              new (thd->mem_root)
                sp_instr_copen(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 363:
/* Line 1792 of yacc.c  */
#line 3939 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(3) - (4)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i=
              new (thd->mem_root)
                sp_instr_cfetch(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 364:
/* Line 1792 of yacc.c  */
#line 3960 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 365:
/* Line 1792 of yacc.c  */
#line 3965 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              new (thd->mem_root)
                sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 369:
/* Line 1792 of yacc.c  */
#line 3995 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 370:
/* Line 1792 of yacc.c  */
#line 4013 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(3) - (3)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 371:
/* Line 1792 of yacc.c  */
#line 4033 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(0) - (0)]).raw.end);
          }
    break;

  case 372:
/* Line 1792 of yacc.c  */
#line 4042 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(2) - (2)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex,
                                     (yyvsp[(2) - (2)].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 373:
/* Line 1792 of yacc.c  */
#line 4081 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i =
              new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_STR, 0));
          }
    break;

  case 374:
/* Line 1792 of yacc.c  */
#line 4100 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 380:
/* Line 1792 of yacc.c  */
#line 4123 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 381:
/* Line 1792 of yacc.c  */
#line 4134 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_STRING case_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              new (thd->mem_root)
                sp_instr_set_case_expr(sp->instructions(), lex,
                                       case_expr_id, (yyvsp[(3) - (3)].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 382:
/* Line 1792 of yacc.c  */
#line 4180 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
    break;

  case 383:
/* Line 1792 of yacc.c  */
#line 4187 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_case(YYTHD);
          }
    break;

  case 384:
/* Line 1792 of yacc.c  */
#line 4194 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_end_case(Lex, false);
          }
    break;

  case 389:
/* Line 1792 of yacc.c  */
#line 4211 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 390:
/* Line 1792 of yacc.c  */
#line 4220 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              new (thd->mem_root)
                sp_instr_jump_case_when(sp->instructions(), lex,
                                        pctx->get_current_case_expr_id(),
                                        (yyvsp[(3) - (3)].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 391:
/* Line 1792 of yacc.c  */
#line 4263 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 392:
/* Line 1792 of yacc.c  */
#line 4271 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 393:
/* Line 1792 of yacc.c  */
#line 4280 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 394:
/* Line 1792 of yacc.c  */
#line 4318 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 395:
/* Line 1792 of yacc.c  */
#line 4326 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              new (thd->mem_root)
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 397:
/* Line 1792 of yacc.c  */
#line 4344 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
    break;

  case 398:
/* Line 1792 of yacc.c  */
#line 4362 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
    break;

  case 399:
/* Line 1792 of yacc.c  */
#line 4381 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 400:
/* Line 1792 of yacc.c  */
#line 4382 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 401:
/* Line 1792 of yacc.c  */
#line 4387 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
    break;

  case 402:
/* Line 1792 of yacc.c  */
#line 4403 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 403:
/* Line 1792 of yacc.c  */
#line 4420 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_STR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
    break;

  case 404:
/* Line 1792 of yacc.c  */
#line 4431 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
    break;

  case 405:
/* Line 1792 of yacc.c  */
#line 4439 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
    break;

  case 406:
/* Line 1792 of yacc.c  */
#line 4454 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[(3) - (5)].spblock).hndlrs)
            {
              sp_instr *i=
                new (thd->mem_root) sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[(3) - (5)].spblock).curs)
            {
              sp_instr *i=
                new (thd->mem_root)
                  sp_instr_cpop(sp->instructions(), pctx, (yyvsp[(3) - (5)].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
    break;

  case 407:
/* Line 1792 of yacc.c  */
#line 4490 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
                new (thd->mem_root)
                  sp_instr_jump(sp->instructions(), pctx,
                                pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 408:
/* Line 1792 of yacc.c  */
#line 4505 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 409:
/* Line 1792 of yacc.c  */
#line 4514 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 410:
/* Line 1792 of yacc.c  */
#line 4555 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
              new (thd->mem_root)
                sp_instr_jump(sp->instructions(), pctx, pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 411:
/* Line 1792 of yacc.c  */
#line 4573 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(3) - (3)]).raw.end);
          }
    break;

  case 412:
/* Line 1792 of yacc.c  */
#line 4582 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                             /*$6*/
            ITEMIZE((yyvsp[(5) - (5)].item), &(yyvsp[(5) - (5)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(5) - (5)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(ip, lex, (yyvsp[(5) - (5)].item), expr_query,
                                     pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
    break;

  case 414:
/* Line 1792 of yacc.c  */
#line 4626 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_BEFORE; }
    break;

  case 415:
/* Line 1792 of yacc.c  */
#line 4628 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_AFTER; }
    break;

  case 416:
/* Line 1792 of yacc.c  */
#line 4633 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_INSERT; }
    break;

  case 417:
/* Line 1792 of yacc.c  */
#line 4635 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_UPDATE; }
    break;

  case 418:
/* Line 1792 of yacc.c  */
#line 4637 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_DELETE; }
    break;

  case 422:
/* Line 1792 of yacc.c  */
#line 4671 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 423:
/* Line 1792 of yacc.c  */
#line 4673 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(4) - (4)].lex_str).str;
          }
    break;

  case 424:
/* Line 1792 of yacc.c  */
#line 4683 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE;
          }
    break;

  case 425:
/* Line 1792 of yacc.c  */
#line 4689 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE;
          }
    break;

  case 430:
/* Line 1792 of yacc.c  */
#line 4712 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 482:
/* Line 1792 of yacc.c  */
#line 4811 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 483:
/* Line 1792 of yacc.c  */
#line 4819 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 484:
/* Line 1792 of yacc.c  */
#line 4827 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 485:
/* Line 1792 of yacc.c  */
#line 4835 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 486:
/* Line 1792 of yacc.c  */
#line 4847 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 487:
/* Line 1792 of yacc.c  */
#line 4859 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
    break;

  case 488:
/* Line 1792 of yacc.c  */
#line 4864 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
    break;

  case 489:
/* Line 1792 of yacc.c  */
#line 4869 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
    break;

  case 490:
/* Line 1792 of yacc.c  */
#line 4877 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 491:
/* Line 1792 of yacc.c  */
#line 4885 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 492:
/* Line 1792 of yacc.c  */
#line 4893 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 493:
/* Line 1792 of yacc.c  */
#line 4901 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 494:
/* Line 1792 of yacc.c  */
#line 4909 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 495:
/* Line 1792 of yacc.c  */
#line 4917 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 496:
/* Line 1792 of yacc.c  */
#line 4925 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 497:
/* Line 1792 of yacc.c  */
#line 4938 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 498:
/* Line 1792 of yacc.c  */
#line 4951 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->storage_engine= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 499:
/* Line 1792 of yacc.c  */
#line 4965 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->file_block_size != 0)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "FILE_BLOCK_SIZE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->file_block_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 500:
/* Line 1792 of yacc.c  */
#line 4979 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
    break;

  case 501:
/* Line 1792 of yacc.c  */
#line 4984 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
    break;

  case 502:
/* Line 1792 of yacc.c  */
#line 4996 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= (yyvsp[(1) - (1)].ulonglong_number);}
    break;

  case 503:
/* Line 1792 of yacc.c  */
#line 4998 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[(1) - (1)].lex_str).str;
            size_t str_len= (yyvsp[(1) - (1)].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                case 'm':
                case 'M':
                  text_shift_number+=10;
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
    break;

  case 504:
/* Line 1792 of yacc.c  */
#line 5048 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 505:
/* Line 1792 of yacc.c  */
#line 5051 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 506:
/* Line 1792 of yacc.c  */
#line 5053 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex->add_table_to_list(thd, (yyvsp[(2) - (2)].table), NULL, 0,
                                                          TL_READ,
                                                          MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 507:
/* Line 1792 of yacc.c  */
#line 5068 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (4)].table), NULL, 0,
                                                          TL_READ,
                                                          MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 508:
/* Line 1792 of yacc.c  */
#line 5087 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 509:
/* Line 1792 of yacc.c  */
#line 5090 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
             CONTEXTUALIZE((yyvsp[(2) - (3)].create_select));
             Select->set_braces(1);
           }
    break;

  case 510:
/* Line 1792 of yacc.c  */
#line 5095 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
             if ((yyvsp[(5) - (5)].node) != NULL)
               CONTEXTUALIZE((yyvsp[(5) - (5)].node));
           }
    break;

  case 511:
/* Line 1792 of yacc.c  */
#line 5102 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 512:
/* Line 1792 of yacc.c  */
#line 5104 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(3) - (3)].create_select));
            Select->set_braces(0);
          }
    break;

  case 513:
/* Line 1792 of yacc.c  */
#line 5109 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(5) - (5)].union_list) != NULL)
              CONTEXTUALIZE((yyvsp[(5) - (5)].union_list));
          }
    break;

  case 514:
/* Line 1792 of yacc.c  */
#line 5114 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(4) - (5)].create_select));
            Select->set_braces(1);
          }
    break;

  case 515:
/* Line 1792 of yacc.c  */
#line 5119 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
             if ((yyvsp[(7) - (7)].node) != NULL)
               CONTEXTUALIZE((yyvsp[(7) - (7)].node));
          }
    break;

  case 516:
/* Line 1792 of yacc.c  */
#line 5127 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
    break;

  case 517:
/* Line 1792 of yacc.c  */
#line 5163 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 519:
/* Line 1792 of yacc.c  */
#line 5169 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.flags|= Alter_info::ALTER_PARTITION;
            }
          }
    break;

  case 521:
/* Line 1792 of yacc.c  */
#line 5187 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!lex->part_info)
            {
              my_syntax_error(ER(ER_PARTITION_ENTRY_ERROR));
              MYSQL_YYABORT;
            }
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
    break;

  case 522:
/* Line 1792 of yacc.c  */
#line 5199 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 524:
/* Line 1792 of yacc.c  */
#line 5208 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
    break;

  case 525:
/* Line 1792 of yacc.c  */
#line 5215 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= HASH_PARTITION; }
    break;

  case 526:
/* Line 1792 of yacc.c  */
#line 5216 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 527:
/* Line 1792 of yacc.c  */
#line 5218 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 528:
/* Line 1792 of yacc.c  */
#line 5220 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 529:
/* Line 1792 of yacc.c  */
#line 5222 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 530:
/* Line 1792 of yacc.c  */
#line 5224 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 531:
/* Line 1792 of yacc.c  */
#line 5228 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 532:
/* Line 1792 of yacc.c  */
#line 5230 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->linear_hash_ind= TRUE;}
    break;

  case 533:
/* Line 1792 of yacc.c  */
#line 5235 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
    break;

  case 534:
/* Line 1792 of yacc.c  */
#line 5237 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            switch ((yyvsp[(3) - (3)].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 535:
/* Line 1792 of yacc.c  */
#line 5253 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 536:
/* Line 1792 of yacc.c  */
#line 5254 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 537:
/* Line 1792 of yacc.c  */
#line 5258 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 538:
/* Line 1792 of yacc.c  */
#line 5259 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 539:
/* Line 1792 of yacc.c  */
#line 5264 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (part_info->part_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->num_columns > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of partition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 540:
/* Line 1792 of yacc.c  */
#line 5283 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
    break;

  case 541:
/* Line 1792 of yacc.c  */
#line 5293 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            /*
              TODO: replace @1.cpp.end with @2.cpp.start: we don't need whitespaces at
              the beginning of the partition expression string:
            */
            if (part_info->set_part_expr(const_cast<char *>((yylsp[(1) - (3)]).cpp.end), (yyvsp[(2) - (3)].item),
                                         const_cast<char *>((yylsp[(2) - (3)]).cpp.end), FALSE))
            { MYSQL_YYABORT; }
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
    break;

  case 542:
/* Line 1792 of yacc.c  */
#line 5309 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: replace @1.cpp.end with @2.cpp.start: we don't need whitespaces at
              the beginning of the partition expression string:
            */
            if (Lex->part_info->set_part_expr(const_cast<char *>((yylsp[(1) - (3)]).cpp.end), (yyvsp[(2) - (3)].item),
                                              const_cast<char *>((yylsp[(2) - (3)]).cpp.end), TRUE))
            { MYSQL_YYABORT; }
          }
    break;

  case 543:
/* Line 1792 of yacc.c  */
#line 5322 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 544:
/* Line 1792 of yacc.c  */
#line 5324 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 545:
/* Line 1792 of yacc.c  */
#line 5339 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 546:
/* Line 1792 of yacc.c  */
#line 5341 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->subpart_type= HASH_PARTITION; }
    break;

  case 547:
/* Line 1792 of yacc.c  */
#line 5342 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 548:
/* Line 1792 of yacc.c  */
#line 5345 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
    break;

  case 549:
/* Line 1792 of yacc.c  */
#line 5350 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 550:
/* Line 1792 of yacc.c  */
#line 5354 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 551:
/* Line 1792 of yacc.c  */
#line 5355 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 552:
/* Line 1792 of yacc.c  */
#line 5360 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->subpart_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->subpart_field_list.elements > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of subpartition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 553:
/* Line 1792 of yacc.c  */
#line 5378 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            LEX *lex= Lex;
            bool not_corr_func;
            not_corr_func= !lex->safe_to_cache_query;
            lex->safe_to_cache_query= 1;
            if (not_corr_func)
            {
              my_syntax_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[(1) - (1)].item);
          }
    break;

  case 554:
/* Line 1792 of yacc.c  */
#line 5395 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 555:
/* Line 1792 of yacc.c  */
#line 5397 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            LEX *lex= Lex;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
    break;

  case 556:
/* Line 1792 of yacc.c  */
#line 5412 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == RANGE_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "RANGE");
              MYSQL_YYABORT;
            }
            else if (part_info->part_type == LIST_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "LIST");
              MYSQL_YYABORT;
            }
          }
    break;

  case 557:
/* Line 1792 of yacc.c  */
#line 5428 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (part_info->num_parts !=
                  count_curr_parts)
              {
                my_syntax_error(ER(ER_PARTITION_WRONG_NO_PART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 558:
/* Line 1792 of yacc.c  */
#line 5449 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 559:
/* Line 1792 of yacc.c  */
#line 5450 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 560:
/* Line 1792 of yacc.c  */
#line 5455 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new partition_element();

            if (!p_elem || part_info->partitions.push_back(p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            p_elem->part_state= PART_NORMAL;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 561:
/* Line 1792 of yacc.c  */
#line 5474 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 562:
/* Line 1792 of yacc.c  */
#line 5479 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            p_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str;
          }
    break;

  case 563:
/* Line 1792 of yacc.c  */
#line 5488 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type == RANGE_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
              if (part_info->part_type == LIST_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
    break;

  case 564:
/* Line 1792 of yacc.c  */
#line 5510 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != RANGE_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
    break;

  case 565:
/* Line 1792 of yacc.c  */
#line 5525 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 566:
/* Line 1792 of yacc.c  */
#line 5527 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != LIST_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                               "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
    break;

  case 567:
/* Line 1792 of yacc.c  */
#line 5542 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 568:
/* Line 1792 of yacc.c  */
#line 5547 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;

            if (part_info->num_columns &&
                part_info->num_columns != 1U)
            {
              part_info->print_debug("Kilroy II", NULL);
              my_syntax_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 569:
/* Line 1792 of yacc.c  */
#line 5568 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 570:
/* Line 1792 of yacc.c  */
#line 5573 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (!lex->is_partition_management() ||
                  part_info->num_columns == 0 ||
                  part_info->num_columns > MAX_REF_PARTS)
              {
                part_info->print_debug("Kilroy III", NULL);
                my_syntax_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST [COLUMNS] partitions.
              */
              if (part_info->reorganize_into_single_field_col_val())
              {
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 571:
/* Line 1792 of yacc.c  */
#line 5602 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_columns < 2U)
            {
              my_syntax_error(ER(ER_ROW_SINGLE_PARTITION_FIELD_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 572:
/* Line 1792 of yacc.c  */
#line 5613 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 573:
/* Line 1792 of yacc.c  */
#line 5614 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 574:
/* Line 1792 of yacc.c  */
#line 5619 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (!(part_info->part_type == LIST_PARTITION &&
                  part_info->num_columns == 1U) &&
                 part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 575:
/* Line 1792 of yacc.c  */
#line 5630 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 576:
/* Line 1792 of yacc.c  */
#line 5632 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (part_info->num_columns != part_info->curr_list_object)
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              my_syntax_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
    break;

  case 577:
/* Line 1792 of yacc.c  */
#line 5655 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 578:
/* Line 1792 of yacc.c  */
#line 5656 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 579:
/* Line 1792 of yacc.c  */
#line 5661 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == LIST_PARTITION)
            {
              my_syntax_error(ER(ER_MAXVALUE_IN_VALUES_IN));
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 580:
/* Line 1792 of yacc.c  */
#line 5674 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[(1) - (1)].item);

            if (!lex->safe_to_cache_query)
            {
              my_syntax_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            if (part_info->add_column_list_value(YYTHD, part_expr))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 581:
/* Line 1792 of yacc.c  */
#line 5696 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0 &&
                !part_info->use_default_subpartitions)
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions.
              */
              my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 582:
/* Line 1792 of yacc.c  */
#line 5710 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (part_info->num_subparts !=
                  part_info->count_curr_subparts)
              {
                my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (part_info->partitions.elements > 1)
              {
                my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 583:
/* Line 1792 of yacc.c  */
#line 5735 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 584:
/* Line 1792 of yacc.c  */
#line 5736 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 585:
/* Line 1792 of yacc.c  */
#line 5741 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new partition_element(curr_part);
            if (part_info->use_default_subpartitions &&
                part_info->partitions.elements >= 2)
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
            if (!sub_p_elem ||
             curr_part->subpartitions.push_back(sub_p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
    break;

  case 586:
/* Line 1792 of yacc.c  */
#line 5773 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 587:
/* Line 1792 of yacc.c  */
#line 5778 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str; }
    break;

  case 588:
/* Line 1792 of yacc.c  */
#line 5782 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 589:
/* Line 1792 of yacc.c  */
#line 5783 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 590:
/* Line 1792 of yacc.c  */
#line 5787 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 591:
/* Line 1792 of yacc.c  */
#line 5788 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 592:
/* Line 1792 of yacc.c  */
#line 5793 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 593:
/* Line 1792 of yacc.c  */
#line 5795 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[(4) - (4)].db_type);
            part_info->default_engine_type= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 594:
/* Line 1792 of yacc.c  */
#line 5801 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 595:
/* Line 1792 of yacc.c  */
#line 5803 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 596:
/* Line 1792 of yacc.c  */
#line 5805 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 597:
/* Line 1792 of yacc.c  */
#line 5807 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 598:
/* Line 1792 of yacc.c  */
#line 5809 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 599:
/* Line 1792 of yacc.c  */
#line 5811 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 600:
/* Line 1792 of yacc.c  */
#line 5820 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_select)= NEW_PTN PT_create_select((yyvsp[(1) - (4)].optimizer_hints), (yyvsp[(2) - (4)].select_options), (yyvsp[(3) - (4)].item_list2), (yyvsp[(4) - (4)].table_expression));
          }
    break;

  case 601:
/* Line 1792 of yacc.c  */
#line 5826 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 602:
/* Line 1792 of yacc.c  */
#line 5827 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 603:
/* Line 1792 of yacc.c  */
#line 5831 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 604:
/* Line 1792 of yacc.c  */
#line 5832 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 605:
/* Line 1792 of yacc.c  */
#line 5836 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 606:
/* Line 1792 of yacc.c  */
#line 5837 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 607:
/* Line 1792 of yacc.c  */
#line 5841 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 608:
/* Line 1792 of yacc.c  */
#line 5842 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 609:
/* Line 1792 of yacc.c  */
#line 5846 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 610:
/* Line 1792 of yacc.c  */
#line 5847 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (1)].num);}
    break;

  case 611:
/* Line 1792 of yacc.c  */
#line 5851 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (1)].num); }
    break;

  case 612:
/* Line 1792 of yacc.c  */
#line 5852 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 613:
/* Line 1792 of yacc.c  */
#line 5856 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_TMP_TABLE; }
    break;

  case 614:
/* Line 1792 of yacc.c  */
#line 5860 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 615:
/* Line 1792 of yacc.c  */
#line 5861 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_IF_NOT_EXISTS; }
    break;

  case 623:
/* Line 1792 of yacc.c  */
#line 5882 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.db_type= (yyvsp[(3) - (3)].db_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
    break;

  case 624:
/* Line 1792 of yacc.c  */
#line 5887 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.max_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
    break;

  case 625:
/* Line 1792 of yacc.c  */
#line 5892 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.min_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
    break;

  case 626:
/* Line 1792 of yacc.c  */
#line 5897 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.avg_row_length=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
    break;

  case 627:
/* Line 1792 of yacc.c  */
#line 5902 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.password=(yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
    break;

  case 628:
/* Line 1792 of yacc.c  */
#line 5907 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.comment=(yyvsp[(3) - (3)].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
    break;

  case 629:
/* Line 1792 of yacc.c  */
#line 5912 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_COMPRESS;
            Lex->create_info.compress= (yyvsp[(3) - (3)].lex_str);
	  }
    break;

  case 630:
/* Line 1792 of yacc.c  */
#line 5917 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.auto_increment_value=(yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
    break;

  case 631:
/* Line 1792 of yacc.c  */
#line 5922 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 632:
/* Line 1792 of yacc.c  */
#line 5937 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 633:
/* Line 1792 of yacc.c  */
#line 5943 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
    break;

  case 634:
/* Line 1792 of yacc.c  */
#line 5958 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
    break;

  case 635:
/* Line 1792 of yacc.c  */
#line 5963 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
    break;

  case 636:
/* Line 1792 of yacc.c  */
#line 5978 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
    break;

  case 637:
/* Line 1792 of yacc.c  */
#line 5984 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[(3) - (3)].ulong_num) == 0 || (yyvsp[(3) - (3)].ulong_num) > 0xffff)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
    break;

  case 638:
/* Line 1792 of yacc.c  */
#line 6002 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
    break;

  case 639:
/* Line 1792 of yacc.c  */
#line 6007 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 640:
/* Line 1792 of yacc.c  */
#line 6012 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
             Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 641:
/* Line 1792 of yacc.c  */
#line 6017 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
    break;

  case 642:
/* Line 1792 of yacc.c  */
#line 6022 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.row_type= (yyvsp[(3) - (3)].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
    break;

  case 643:
/* Line 1792 of yacc.c  */
#line 6027 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->select_lex->table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 644:
/* Line 1792 of yacc.c  */
#line 6031 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex->table_list;
            lex->select_lex->table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list.first);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
    break;

  case 647:
/* Line 1792 of yacc.c  */
#line 6055 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.merge_insert_method= (yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
    break;

  case 648:
/* Line 1792 of yacc.c  */
#line 6060 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.data_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
    break;

  case 649:
/* Line 1792 of yacc.c  */
#line 6065 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.index_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
    break;

  case 650:
/* Line 1792 of yacc.c  */
#line 6070 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.tablespace= (yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_TABLESPACE;
          }
    break;

  case 651:
/* Line 1792 of yacc.c  */
#line 6075 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_DISK;}
    break;

  case 652:
/* Line 1792 of yacc.c  */
#line 6077 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
    break;

  case 653:
/* Line 1792 of yacc.c  */
#line 6079 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.connect_string.str= (yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[(3) - (3)].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
    break;

  case 654:
/* Line 1792 of yacc.c  */
#line 6085 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 655:
/* Line 1792 of yacc.c  */
#line 6093 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !my_charset_same(cinfo->default_table_charset,(yyvsp[(4) - (4)].charset)))
            {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                       "CHARACTER SET ", cinfo->default_table_charset->csname,
                       "CHARACTER SET ", (yyvsp[(4) - (4)].charset)->csname);
              MYSQL_YYABORT;
            }
            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 656:
/* Line 1792 of yacc.c  */
#line 6111 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !((yyvsp[(4) - (4)].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                   (yyvsp[(4) - (4)].charset))))
            {
              MYSQL_YYABORT;
            }

            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 657:
/* Line 1792 of yacc.c  */
#line 6128 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                thd->lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);

            if (plugin)
              (yyval.db_type)= plugin_data<handlerton*>(plugin);
            else
            {
              if (thd->variables.sql_mode & MODE_NO_ENGINE_SUBSTITUTION)
              {
                my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyval.db_type)= 0;
              push_warning_printf(thd, Sql_condition::SL_WARNING,
                                  ER_UNKNOWN_STORAGE_ENGINE,
                                  ER(ER_UNKNOWN_STORAGE_ENGINE),
                                  (yyvsp[(1) - (1)].lex_str).str);
            }
          }
    break;

  case 658:
/* Line 1792 of yacc.c  */
#line 6154 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);
            if (plugin)
              (yyval.db_type)= plugin_data<handlerton*>(plugin);
            else
            {
              my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 659:
/* Line 1792 of yacc.c  */
#line 6171 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 660:
/* Line 1792 of yacc.c  */
#line 6172 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 661:
/* Line 1792 of yacc.c  */
#line 6173 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 662:
/* Line 1792 of yacc.c  */
#line 6174 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 663:
/* Line 1792 of yacc.c  */
#line 6175 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 664:
/* Line 1792 of yacc.c  */
#line 6176 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 665:
/* Line 1792 of yacc.c  */
#line 6180 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 666:
/* Line 1792 of yacc.c  */
#line 6181 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 667:
/* Line 1792 of yacc.c  */
#line 6182 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 668:
/* Line 1792 of yacc.c  */
#line 6186 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 669:
/* Line 1792 of yacc.c  */
#line 6187 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 670:
/* Line 1792 of yacc.c  */
#line 6188 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 671:
/* Line 1792 of yacc.c  */
#line 6189 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 672:
/* Line 1792 of yacc.c  */
#line 6195 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
    break;

  case 678:
/* Line 1792 of yacc.c  */
#line 6213 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 679:
/* Line 1792 of yacc.c  */
#line 6220 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (7)].key_type), (yyvsp[(2) - (7)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 680:
/* Line 1792 of yacc.c  */
#line 6226 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 681:
/* Line 1792 of yacc.c  */
#line 6232 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 682:
/* Line 1792 of yacc.c  */
#line 6238 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(2) - (8)].key_type), (yyvsp[(3) - (8)].lex_str).str ? (yyvsp[(3) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 683:
/* Line 1792 of yacc.c  */
#line 6243 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Key *key= new Foreign_key((yyvsp[(4) - (8)].lex_str).str ? (yyvsp[(4) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str), lex->col_list,
                                      (yyvsp[(8) - (8)].table)->db,
                                      (yyvsp[(8) - (8)].table)->table,
                                      lex->ref_list,
                                      lex->fk_delete_opt,
                                      lex->fk_update_opt,
                                      lex->fk_match_option);
            if (key == NULL)
              MYSQL_YYABORT;
            lex->alter_info.key_list.push_back(key);
            if (add_create_index (lex, KEYTYPE_MULTIPLE, (yyvsp[(1) - (8)].lex_str).str ? (yyvsp[(1) - (8)].lex_str) : (yyvsp[(4) - (8)].lex_str),
                                  &default_key_create_info, 1))
              MYSQL_YYABORT;
            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= Alter_info::ADD_FOREIGN_KEY;
          }
    break;

  case 684:
/* Line 1792 of yacc.c  */
#line 6262 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 687:
/* Line 1792 of yacc.c  */
#line 6274 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (4)].item), &(yyvsp[(3) - (4)].item));
          }
    break;

  case 688:
/* Line 1792 of yacc.c  */
#line 6281 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 689:
/* Line 1792 of yacc.c  */
#line 6282 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 690:
/* Line 1792 of yacc.c  */
#line 6286 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 691:
/* Line 1792 of yacc.c  */
#line 6291 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0;
            lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset=NULL;
            lex->gcol_info= 0;
          }
    break;

  case 692:
/* Line 1792 of yacc.c  */
#line 6301 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd, &(yyvsp[(1) - (3)].lex_str), (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  lex->change,&lex->interval_list,lex->charset,
                                  lex->uint_geom_type,
                                  lex->gcol_info))
              MYSQL_YYABORT;
          }
    break;

  case 693:
/* Line 1792 of yacc.c  */
#line 6315 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 694:
/* Line 1792 of yacc.c  */
#line 6319 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (9)].num);
            if (Lex->charset)
            {
              Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[(2) - (9)].charset));
              if (Lex->charset == NULL)
                MYSQL_YYABORT;
            }
            else
              Lex->charset= (yyvsp[(2) - (9)].charset);
            Lex->gcol_info->set_field_type((enum enum_field_types) (yyval.num));
          }
    break;

  case 701:
/* Line 1792 of yacc.c  */
#line 6350 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 702:
/* Line 1792 of yacc.c  */
#line 6356 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 703:
/* Line 1792 of yacc.c  */
#line 6361 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 704:
/* Line 1792 of yacc.c  */
#line 6362 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 706:
/* Line 1792 of yacc.c  */
#line 6365 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 709:
/* Line 1792 of yacc.c  */
#line 6376 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->gcol_info->set_field_stored(TRUE);
          }
    break;

  case 710:
/* Line 1792 of yacc.c  */
#line 6383 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /* 
              "PARSE_GCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            if (!Lex->parse_gcol_expr)
            {
              YYTHD->parse_error_at((yylsp[(1) - (4)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 711:
/* Line 1792 of yacc.c  */
#line 6399 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->gcol_info= new Generated_column();
            if (!Lex->gcol_info)
            {
              mem_alloc_error(sizeof(Generated_column));
              MYSQL_YYABORT;
            }
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));
            uint expr_len= (uint)(yylsp[(1) - (1)]).cpp.length();
            Lex->gcol_info->dup_expr_str(YYTHD->mem_root, (yylsp[(1) - (1)]).cpp.start, expr_len);
            Lex->gcol_info->expr_item= (yyvsp[(1) - (1)].item);
            /*
              @todo: problems:
              - here we have a call to the constructor of
              Generated_column, which takes no argument and builds a
              non-functional object
              - then we fill it member by member; either by assignment to
              public members (!) or by call to a public setter. Both these
              techniques allow changing, at any future point in time, vital
              properties of the object which should rather be constant.
              Class should rather have a constructor which takes arguments,
              sets members, and members should be constant after that.
              This would also get rid of some setters like set_field_stored();
            */
          }
    break;

  case 712:
/* Line 1792 of yacc.c  */
#line 6428 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            (yyval.num)=(yyvsp[(1) - (3)].num);
          }
    break;

  case 713:
/* Line 1792 of yacc.c  */
#line 6433 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=(yyvsp[(1) - (3)].num);
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
          }
    break;

  case 714:
/* Line 1792 of yacc.c  */
#line 6439 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_FLOAT;
          }
    break;

  case 715:
/* Line 1792 of yacc.c  */
#line 6445 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 716:
/* Line 1792 of yacc.c  */
#line 6450 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 717:
/* Line 1792 of yacc.c  */
#line 6455 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 718:
/* Line 1792 of yacc.c  */
#line 6460 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 719:
/* Line 1792 of yacc.c  */
#line 6465 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 720:
/* Line 1792 of yacc.c  */
#line 6472 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 721:
/* Line 1792 of yacc.c  */
#line 6479 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->type|= (yyvsp[(3) - (3)].ulong_num);
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 722:
/* Line 1792 of yacc.c  */
#line 6486 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->type|= (yyvsp[(2) - (2)].ulong_num);
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 723:
/* Line 1792 of yacc.c  */
#line 6493 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 724:
/* Line 1792 of yacc.c  */
#line 6499 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 725:
/* Line 1792 of yacc.c  */
#line 6505 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 726:
/* Line 1792 of yacc.c  */
#line 6512 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->type|= (yyvsp[(3) - (3)].ulong_num);
            (yyval.num)= MYSQL_TYPE_VARCHAR;
            Lex->charset=national_charset_info;
          }
    break;

  case 727:
/* Line 1792 of yacc.c  */
#line 6519 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            Lex->charset=&my_charset_bin;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 728:
/* Line 1792 of yacc.c  */
#line 6525 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            if (Lex->length)
            {
              errno= 0;
              ulong length= strtoul(Lex->length, NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
            }
            (yyval.num)=MYSQL_TYPE_YEAR;
          }
    break;

  case 729:
/* Line 1792 of yacc.c  */
#line 6541 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DATE; }
    break;

  case 730:
/* Line 1792 of yacc.c  */
#line 6543 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->dec= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            (yyval.num)= MYSQL_TYPE_TIME2;
          }
    break;

  case 731:
/* Line 1792 of yacc.c  */
#line 6548 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->dec= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            if (YYTHD->variables.sql_mode & MODE_MAXDB)
              (yyval.num)=MYSQL_TYPE_DATETIME2;
            else
            {
              /*
                Unlike other types TIMESTAMP fields are NOT NULL by default.
                This behavior is deprecated now.
              */
              if (!YYTHD->variables.explicit_defaults_for_timestamp)
                Lex->type|= NOT_NULL_FLAG;
              /*
                To flag the current statement as dependent for binary
                logging on the session var. Extra copying to Lex is
                done in case prepared stmt.
              */
              Lex->binlog_need_explicit_defaults_ts=
                YYTHD->binlog_need_explicit_defaults_ts= true;

              (yyval.num)=MYSQL_TYPE_TIMESTAMP2;
            }
          }
    break;

  case 732:
/* Line 1792 of yacc.c  */
#line 6572 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->dec= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            (yyval.num)= MYSQL_TYPE_DATETIME2;
          }
    break;

  case 733:
/* Line 1792 of yacc.c  */
#line 6577 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
    break;

  case 734:
/* Line 1792 of yacc.c  */
#line 6582 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
    break;

  case 735:
/* Line 1792 of yacc.c  */
#line 6588 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)(yyvsp[(1) - (1)].num);
            (yyval.num)=MYSQL_TYPE_GEOMETRY;
          }
    break;

  case 736:
/* Line 1792 of yacc.c  */
#line 6594 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 737:
/* Line 1792 of yacc.c  */
#line 6599 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
    break;

  case 738:
/* Line 1792 of yacc.c  */
#line 6604 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 739:
/* Line 1792 of yacc.c  */
#line 6609 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 740:
/* Line 1792 of yacc.c  */
#line 6615 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
    break;

  case 741:
/* Line 1792 of yacc.c  */
#line 6621 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
    break;

  case 742:
/* Line 1792 of yacc.c  */
#line 6628 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 743:
/* Line 1792 of yacc.c  */
#line 6634 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
    break;

  case 744:
/* Line 1792 of yacc.c  */
#line 6640 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_NEWDECIMAL;
          }
    break;

  case 745:
/* Line 1792 of yacc.c  */
#line 6646 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_NEWDECIMAL;
          }
    break;

  case 746:
/* Line 1792 of yacc.c  */
#line 6652 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_NEWDECIMAL;
          }
    break;

  case 747:
/* Line 1792 of yacc.c  */
#line 6658 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {Lex->interval_list.empty();}
    break;

  case 748:
/* Line 1792 of yacc.c  */
#line 6660 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(6) - (6)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(6) - (6)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_ENUM;
          }
    break;

  case 749:
/* Line 1792 of yacc.c  */
#line 6666 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.empty();}
    break;

  case 750:
/* Line 1792 of yacc.c  */
#line 6668 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(6) - (6)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(6) - (6)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_SET;
          }
    break;

  case 751:
/* Line 1792 of yacc.c  */
#line 6674 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 752:
/* Line 1792 of yacc.c  */
#line 6680 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_LONGLONG;
            Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
              UNIQUE_FLAG);
          }
    break;

  case 753:
/* Line 1792 of yacc.c  */
#line 6686 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_JSON;
          }
    break;

  case 754:
/* Line 1792 of yacc.c  */
#line 6693 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRY; }
    break;

  case 755:
/* Line 1792 of yacc.c  */
#line 6694 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRYCOLLECTION; }
    break;

  case 756:
/* Line 1792 of yacc.c  */
#line 6696 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char*>(STRINGIFY_ARG
                                           (MAX_LEN_GEOM_POINT_FIELD));
            (yyval.num)= Field::GEOM_POINT;
          }
    break;

  case 757:
/* Line 1792 of yacc.c  */
#line 6701 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOINT; }
    break;

  case 758:
/* Line 1792 of yacc.c  */
#line 6702 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_LINESTRING; }
    break;

  case 759:
/* Line 1792 of yacc.c  */
#line 6703 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTILINESTRING; }
    break;

  case 760:
/* Line 1792 of yacc.c  */
#line 6704 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_POLYGON; }
    break;

  case 761:
/* Line 1792 of yacc.c  */
#line 6705 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOLYGON; }
    break;

  case 762:
/* Line 1792 of yacc.c  */
#line 6709 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 763:
/* Line 1792 of yacc.c  */
#line 6713 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 764:
/* Line 1792 of yacc.c  */
#line 6714 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 765:
/* Line 1792 of yacc.c  */
#line 6718 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 766:
/* Line 1792 of yacc.c  */
#line 6719 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 767:
/* Line 1792 of yacc.c  */
#line 6723 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 768:
/* Line 1792 of yacc.c  */
#line 6724 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 769:
/* Line 1792 of yacc.c  */
#line 6725 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 770:
/* Line 1792 of yacc.c  */
#line 6726 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 771:
/* Line 1792 of yacc.c  */
#line 6727 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 772:
/* Line 1792 of yacc.c  */
#line 6731 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG; }
    break;

  case 773:
/* Line 1792 of yacc.c  */
#line 6732 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY; }
    break;

  case 774:
/* Line 1792 of yacc.c  */
#line 6733 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SHORT; }
    break;

  case 775:
/* Line 1792 of yacc.c  */
#line 6734 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_INT24; }
    break;

  case 776:
/* Line 1792 of yacc.c  */
#line 6735 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONGLONG; }
    break;

  case 777:
/* Line 1792 of yacc.c  */
#line 6740 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              MYSQL_TYPE_FLOAT : MYSQL_TYPE_DOUBLE;
          }
    break;

  case 778:
/* Line 1792 of yacc.c  */
#line 6745 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 779:
/* Line 1792 of yacc.c  */
#line 6747 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 780:
/* Line 1792 of yacc.c  */
#line 6752 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
    break;

  case 781:
/* Line 1792 of yacc.c  */
#line 6757 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(1) - (1)].c_str);
            (yyval.precision).dec= NULL;
          }
    break;

  case 783:
/* Line 1792 of yacc.c  */
#line 6766 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(2) - (5)].lex_str).str;
            (yyval.precision).dec= (yyvsp[(4) - (5)].lex_str).str;
          }
    break;

  case 784:
/* Line 1792 of yacc.c  */
#line 6774 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; }
    break;

  case 785:
/* Line 1792 of yacc.c  */
#line 6775 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 786:
/* Line 1792 of yacc.c  */
#line 6779 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 787:
/* Line 1792 of yacc.c  */
#line 6780 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 788:
/* Line 1792 of yacc.c  */
#line 6782 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(2) - (3)].lex_str).str, NULL, &error);
           }
    break;

  case 789:
/* Line 1792 of yacc.c  */
#line 6789 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 790:
/* Line 1792 of yacc.c  */
#line 6790 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 791:
/* Line 1792 of yacc.c  */
#line 6794 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 792:
/* Line 1792 of yacc.c  */
#line 6795 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 793:
/* Line 1792 of yacc.c  */
#line 6799 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 794:
/* Line 1792 of yacc.c  */
#line 6800 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG;}
    break;

  case 795:
/* Line 1792 of yacc.c  */
#line 6801 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
    break;

  case 796:
/* Line 1792 of yacc.c  */
#line 6805 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 797:
/* Line 1792 of yacc.c  */
#line 6806 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 798:
/* Line 1792 of yacc.c  */
#line 6807 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 799:
/* Line 1792 of yacc.c  */
#line 6808 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 800:
/* Line 1792 of yacc.c  */
#line 6811 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; /* use default length */ }
    break;

  case 802:
/* Line 1792 of yacc.c  */
#line 6817 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
    break;

  case 804:
/* Line 1792 of yacc.c  */
#line 6825 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 805:
/* Line 1792 of yacc.c  */
#line 6826 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 806:
/* Line 1792 of yacc.c  */
#line 6830 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 808:
/* Line 1792 of yacc.c  */
#line 6836 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~ NOT_NULL_FLAG;
            Lex->type|= EXPLICIT_NULL_FLAG;
          }
    break;

  case 809:
/* Line 1792 of yacc.c  */
#line 6840 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 810:
/* Line 1792 of yacc.c  */
#line 6841 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->default_value=(yyvsp[(2) - (2)].item); }
    break;

  case 811:
/* Line 1792 of yacc.c  */
#line 6843 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root)
              Item_func_now_local(static_cast<uint8>((yyvsp[(3) - (3)].ulong_num)));
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->on_update_value= item;
          }
    break;

  case 812:
/* Line 1792 of yacc.c  */
#line 6850 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
    break;

  case 813:
/* Line 1792 of yacc.c  */
#line 6852 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 814:
/* Line 1792 of yacc.c  */
#line 6858 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 815:
/* Line 1792 of yacc.c  */
#line 6864 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 816:
/* Line 1792 of yacc.c  */
#line 6870 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 817:
/* Line 1792 of yacc.c  */
#line 6875 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 818:
/* Line 1792 of yacc.c  */
#line 6877 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[(2) - (2)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(2) - (2)].charset)->name,Lex->charset->csname);
              MYSQL_YYABORT;
            }
            else
            {
              Lex->charset=(yyvsp[(2) - (2)].charset);
            }
          }
    break;

  case 819:
/* Line 1792 of yacc.c  */
#line 6890 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DEFAULT << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 820:
/* Line 1792 of yacc.c  */
#line 6896 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_FIXED << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 821:
/* Line 1792 of yacc.c  */
#line 6902 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DYNAMIC << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 822:
/* Line 1792 of yacc.c  */
#line 6908 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DEFAULT << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 823:
/* Line 1792 of yacc.c  */
#line 6913 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DISK << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 824:
/* Line 1792 of yacc.c  */
#line 6918 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_MEMORY << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 825:
/* Line 1792 of yacc.c  */
#line 6927 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
          (yyval.num)= (yyvsp[(1) - (2)].num);

          if (Lex->charset) /* Lex->charset is scanned in "type" */
          {
            if (!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[(2) - (2)].charset))))
              MYSQL_YYABORT;
          }
          else if ((yyvsp[(2) - (2)].charset))
          {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                     "COLLATE with no CHARACTER SET "
                     "in SP parameters, RETURNS, DECLARE");
            MYSQL_YYABORT;
          }
        }
    break;

  case 826:
/* Line 1792 of yacc.c  */
#line 6948 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 827:
/* Line 1792 of yacc.c  */
#line 6954 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root)
              Item_func_now_local(static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 828:
/* Line 1792 of yacc.c  */
#line 6961 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 829:
/* Line 1792 of yacc.c  */
#line 6965 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 830:
/* Line 1792 of yacc.c  */
#line 6966 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 831:
/* Line 1792 of yacc.c  */
#line 6971 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 832:
/* Line 1792 of yacc.c  */
#line 6978 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 833:
/* Line 1792 of yacc.c  */
#line 6982 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 834:
/* Line 1792 of yacc.c  */
#line 6983 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 835:
/* Line 1792 of yacc.c  */
#line 6987 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 836:
/* Line 1792 of yacc.c  */
#line 6988 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 837:
/* Line 1792 of yacc.c  */
#line 6993 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[(1) - (1)].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 838:
/* Line 1792 of yacc.c  */
#line 7001 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 839:
/* Line 1792 of yacc.c  */
#line 7005 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 840:
/* Line 1792 of yacc.c  */
#line 7006 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 841:
/* Line 1792 of yacc.c  */
#line 7011 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[(1) - (1)].lex_str).str)))
              MYSQL_YYABORT;
          }
    break;

  case 842:
/* Line 1792 of yacc.c  */
#line 7018 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 843:
/* Line 1792 of yacc.c  */
#line 7019 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(2) - (2)].charset); }
    break;

  case 844:
/* Line 1792 of yacc.c  */
#line 7023 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 845:
/* Line 1792 of yacc.c  */
#line 7024 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 846:
/* Line 1792 of yacc.c  */
#line 7028 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset); }
    break;

  case 847:
/* Line 1792 of yacc.c  */
#line 7029 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 848:
/* Line 1792 of yacc.c  */
#line 7033 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 849:
/* Line 1792 of yacc.c  */
#line 7034 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 850:
/* Line 1792 of yacc.c  */
#line 7039 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1; }
    break;

  case 851:
/* Line 1792 of yacc.c  */
#line 7040 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1_bin; }
    break;

  case 852:
/* Line 1792 of yacc.c  */
#line 7041 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1_bin; }
    break;

  case 853:
/* Line 1792 of yacc.c  */
#line 7046 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
    break;

  case 854:
/* Line 1792 of yacc.c  */
#line 7054 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
    break;

  case 855:
/* Line 1792 of yacc.c  */
#line 7059 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
    break;

  case 856:
/* Line 1792 of yacc.c  */
#line 7067 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= NULL;
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 857:
/* Line 1792 of yacc.c  */
#line 7072 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(1) - (1)].charset);
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 858:
/* Line 1792 of yacc.c  */
#line 7077 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(1) - (1)].charset);
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 859:
/* Line 1792 of yacc.c  */
#line 7082 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= &my_charset_bin;
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 860:
/* Line 1792 of yacc.c  */
#line 7087 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(2) - (3)].charset);
            (yyval.charset_with_flags).type_flags= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 861:
/* Line 1792 of yacc.c  */
#line 7092 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= NULL;
            (yyval.charset_with_flags).type_flags= BINCMP_FLAG;
          }
    break;

  case 862:
/* Line 1792 of yacc.c  */
#line 7097 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(3) - (3)].charset);
            (yyval.charset_with_flags).type_flags= BINCMP_FLAG;
          }
    break;

  case 863:
/* Line 1792 of yacc.c  */
#line 7104 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 864:
/* Line 1792 of yacc.c  */
#line 7105 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= BINCMP_FLAG; }
    break;

  case 865:
/* Line 1792 of yacc.c  */
#line 7110 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
          if ((yyvsp[(2) - (2)].ulong_num) == 0)
          {
            my_syntax_error(ER(ER_SYNTAX_ERROR));
            MYSQL_YYABORT;
          }
        }
    break;

  case 866:
/* Line 1792 of yacc.c  */
#line 7118 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (4)].ulong_num); }
    break;

  case 867:
/* Line 1792 of yacc.c  */
#line 7122 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 868:
/* Line 1792 of yacc.c  */
#line 7123 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
    break;

  case 869:
/* Line 1792 of yacc.c  */
#line 7127 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
    break;

  case 870:
/* Line 1792 of yacc.c  */
#line 7130 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 871:
/* Line 1792 of yacc.c  */
#line 7131 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 872:
/* Line 1792 of yacc.c  */
#line 7132 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (2)].ulong_num) | (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 873:
/* Line 1792 of yacc.c  */
#line 7133 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) ; }
    break;

  case 874:
/* Line 1792 of yacc.c  */
#line 7138 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) < 1 ? 1 : ((yyvsp[(1) - (1)].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[(1) - (1)].ulong_num));
          (yyval.ulong_num)--;
        }
    break;

  case 875:
/* Line 1792 of yacc.c  */
#line 7146 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (1 | (yyvsp[(2) - (2)].ulong_num)) << (yyvsp[(1) - (2)].ulong_num);
        }
    break;

  case 876:
/* Line 1792 of yacc.c  */
#line 7152 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 877:
/* Line 1792 of yacc.c  */
#line 7153 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)|= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 878:
/* Line 1792 of yacc.c  */
#line 7158 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
          uint start= (yyvsp[(1) - (3)].ulong_num);
          uint end= (yyvsp[(3) - (3)].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
    break;

  case 879:
/* Line 1792 of yacc.c  */
#line 7167 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 880:
/* Line 1792 of yacc.c  */
#line 7168 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 881:
/* Line 1792 of yacc.c  */
#line 7172 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 882:
/* Line 1792 of yacc.c  */
#line 7173 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 885:
/* Line 1792 of yacc.c  */
#line 7187 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)=(yyvsp[(2) - (5)].table);
          }
    break;

  case 886:
/* Line 1792 of yacc.c  */
#line 7194 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->ref_list.empty(); }
    break;

  case 888:
/* Line 1792 of yacc.c  */
#line 7200 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(3) - (3)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key);
          }
    break;

  case 889:
/* Line 1792 of yacc.c  */
#line 7207 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key);
          }
    break;

  case 890:
/* Line 1792 of yacc.c  */
#line 7219 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_UNDEF; }
    break;

  case 891:
/* Line 1792 of yacc.c  */
#line 7221 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_FULL; }
    break;

  case 892:
/* Line 1792 of yacc.c  */
#line 7223 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_PARTIAL; }
    break;

  case 893:
/* Line 1792 of yacc.c  */
#line 7225 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_SIMPLE; }
    break;

  case 894:
/* Line 1792 of yacc.c  */
#line 7230 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 895:
/* Line 1792 of yacc.c  */
#line 7236 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (3)].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 896:
/* Line 1792 of yacc.c  */
#line 7242 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[(3) - (3)].m_fk_option);
          }
    break;

  case 897:
/* Line 1792 of yacc.c  */
#line 7249 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(6) - (6)].m_fk_option);
          }
    break;

  case 898:
/* Line 1792 of yacc.c  */
#line 7256 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(6) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(3) - (6)].m_fk_option);
          }
    break;

  case 899:
/* Line 1792 of yacc.c  */
#line 7264 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
    break;

  case 900:
/* Line 1792 of yacc.c  */
#line 7265 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
    break;

  case 901:
/* Line 1792 of yacc.c  */
#line 7266 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
    break;

  case 902:
/* Line 1792 of yacc.c  */
#line 7267 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
    break;

  case 903:
/* Line 1792 of yacc.c  */
#line 7268 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
    break;

  case 904:
/* Line 1792 of yacc.c  */
#line 7272 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
    break;

  case 905:
/* Line 1792 of yacc.c  */
#line 7276 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
    break;

  case 906:
/* Line 1792 of yacc.c  */
#line 7277 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 907:
/* Line 1792 of yacc.c  */
#line 7281 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 908:
/* Line 1792 of yacc.c  */
#line 7282 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 909:
/* Line 1792 of yacc.c  */
#line 7286 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 911:
/* Line 1792 of yacc.c  */
#line 7291 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 912:
/* Line 1792 of yacc.c  */
#line 7292 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 913:
/* Line 1792 of yacc.c  */
#line 7293 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 914:
/* Line 1792 of yacc.c  */
#line 7297 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
    break;

  case 915:
/* Line 1792 of yacc.c  */
#line 7298 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 916:
/* Line 1792 of yacc.c  */
#line 7302 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_FULLTEXT;}
    break;

  case 917:
/* Line 1792 of yacc.c  */
#line 7307 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_type)= KEYTYPE_SPATIAL;
          }
    break;

  case 918:
/* Line 1792 of yacc.c  */
#line 7313 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->key_create_info= default_key_create_info;
          }
    break;

  case 921:
/* Line 1792 of yacc.c  */
#line 7330 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 923:
/* Line 1792 of yacc.c  */
#line 7335 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 925:
/* Line 1792 of yacc.c  */
#line 7340 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 933:
/* Line 1792 of yacc.c  */
#line 7360 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 934:
/* Line 1792 of yacc.c  */
#line 7361 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 935:
/* Line 1792 of yacc.c  */
#line 7366 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.block_size= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 936:
/* Line 1792 of yacc.c  */
#line 7367 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 941:
/* Line 1792 of yacc.c  */
#line 7382 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX_CSTRING plugin_name= {(yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length};
            if (plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
              Lex->key_create_info.parser_name= (yyvsp[(3) - (3)].lex_str);
            else
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 942:
/* Line 1792 of yacc.c  */
#line 7395 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 943:
/* Line 1792 of yacc.c  */
#line 7396 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
    break;

  case 944:
/* Line 1792 of yacc.c  */
#line 7397 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 945:
/* Line 1792 of yacc.c  */
#line 7401 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(3) - (4)].key_part)); }
    break;

  case 946:
/* Line 1792 of yacc.c  */
#line 7402 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(1) - (2)].key_part)); }
    break;

  case 947:
/* Line 1792 of yacc.c  */
#line 7407 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 948:
/* Line 1792 of yacc.c  */
#line 7413 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            int key_part_len= atoi((yyvsp[(3) - (4)].lex_str).str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[(1) - (4)].lex_str).str);
            }
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (4)].lex_str), (uint) key_part_len);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 949:
/* Line 1792 of yacc.c  */
#line 7426 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 950:
/* Line 1792 of yacc.c  */
#line 7427 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 951:
/* Line 1792 of yacc.c  */
#line 7431 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 952:
/* Line 1792 of yacc.c  */
#line 7432 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 953:
/* Line 1792 of yacc.c  */
#line 7436 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(1) - (1)].string)); }
    break;

  case 954:
/* Line 1792 of yacc.c  */
#line 7437 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(3) - (3)].string)); }
    break;

  case 955:
/* Line 1792 of yacc.c  */
#line 7445 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->sql_command= SQLCOM_ALTER_TABLE;
            lex->duplicates= DUP_ERROR;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->col_list.empty();
            lex->select_lex->init_order();
            lex->select_lex->db=
                    const_cast<char*>((lex->select_lex->table_list.first)->db);
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.db_type= 0;
            lex->create_info.default_table_charset= NULL;
            lex->create_info.row_type= ROW_TYPE_NOT_USED;
            lex->alter_info.reset();
            lex->no_write_to_binlog= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
            lex->create_last_non_select_table= lex->last_table();
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
    break;

  case 956:
/* Line 1792 of yacc.c  */
#line 7472 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (!lex->m_sql_cmd)
            {
              /* Create a generic ALTER TABLE statment. */
              lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (lex->m_sql_cmd == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 957:
/* Line 1792 of yacc.c  */
#line 7484 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 958:
/* Line 1792 of yacc.c  */
#line 7489 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[(3) - (5)].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
    break;

  case 959:
/* Line 1792 of yacc.c  */
#line 7498 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            push_deprecated_warn_no_replacement(YYTHD,
              "UPGRADE DATA DIRECTORY NAME");
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "DATABASE");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[(3) - (7)].lex_str);
          }
    break;

  case 960:
/* Line 1792 of yacc.c  */
#line 7511 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 961:
/* Line 1792 of yacc.c  */
#line 7522 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 962:
/* Line 1792 of yacc.c  */
#line 7529 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 963:
/* Line 1792 of yacc.c  */
#line 7540 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 964:
/* Line 1792 of yacc.c  */
#line 7547 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 965:
/* Line 1792 of yacc.c  */
#line 7558 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 966:
/* Line 1792 of yacc.c  */
#line 7565 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 967:
/* Line 1792 of yacc.c  */
#line 7577 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 968:
/* Line 1792 of yacc.c  */
#line 7579 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= Event_parse_data::new_instance(YYTHD)))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 969:
/* Line 1792 of yacc.c  */
#line 7599 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!((yyvsp[(6) - (10)].num) || (yyvsp[(7) - (10)].num) || (yyvsp[(8) - (10)].num) || (yyvsp[(9) - (10)].num) || (yyvsp[(10) - (10)].num)))
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 970:
/* Line 1792 of yacc.c  */
#line 7612 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
    break;

  case 971:
/* Line 1792 of yacc.c  */
#line 7617 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
    break;

  case 972:
/* Line 1792 of yacc.c  */
#line 7622 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
    break;

  case 973:
/* Line 1792 of yacc.c  */
#line 7627 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
    break;

  case 974:
/* Line 1792 of yacc.c  */
#line 7632 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[(3) - (7)].lex_str);
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_alter_server(&Lex->server_options);
          }
    break;

  case 976:
/* Line 1792 of yacc.c  */
#line 7642 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (5)].lex_user)->auth.str= (yyvsp[(5) - (5)].lex_str).str;
            (yyvsp[(2) - (5)].lex_user)->auth.length= (yyvsp[(5) - (5)].lex_str).length;
            (yyvsp[(2) - (5)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 977:
/* Line 1792 of yacc.c  */
#line 7652 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
          }
    break;

  case 978:
/* Line 1792 of yacc.c  */
#line 7660 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 982:
/* Line 1792 of yacc.c  */
#line 7671 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
    break;

  case 983:
/* Line 1792 of yacc.c  */
#line 7677 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
    break;

  case 984:
/* Line 1792 of yacc.c  */
#line 7683 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.update_password_expired_column= true;
          }
    break;

  case 985:
/* Line 1792 of yacc.c  */
#line 7689 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if ((yyvsp[(3) - (4)].ulong_num) == 0 || (yyvsp[(3) - (4)].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              my_snprintf(buf, sizeof(buf), "%lu", (yyvsp[(3) - (4)].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.expire_after_days= (yyvsp[(3) - (4)].ulong_num);
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 986:
/* Line 1792 of yacc.c  */
#line 7703 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 987:
/* Line 1792 of yacc.c  */
#line 7709 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_password.update_password_expired_fields= true;
          }
    break;

  case 988:
/* Line 1792 of yacc.c  */
#line 7715 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 989:
/* Line 1792 of yacc.c  */
#line 7719 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 991:
/* Line 1792 of yacc.c  */
#line 7724 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 992:
/* Line 1792 of yacc.c  */
#line 7725 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 993:
/* Line 1792 of yacc.c  */
#line 7730 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 994:
/* Line 1792 of yacc.c  */
#line 7736 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 995:
/* Line 1792 of yacc.c  */
#line 7742 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 996:
/* Line 1792 of yacc.c  */
#line 7748 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 997:
/* Line 1792 of yacc.c  */
#line 7757 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(st_lex_user));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
    break;

  case 998:
/* Line 1792 of yacc.c  */
#line 7770 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 999:
/* Line 1792 of yacc.c  */
#line 7771 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1000:
/* Line 1792 of yacc.c  */
#line 7772 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1001:
/* Line 1792 of yacc.c  */
#line 7773 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1002:
/* Line 1792 of yacc.c  */
#line 7777 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 1003:
/* Line 1792 of yacc.c  */
#line 7779 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[(3) - (3)].spname);
            (yyval.num)= 1;
          }
    break;

  case 1004:
/* Line 1792 of yacc.c  */
#line 7790 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 1005:
/* Line 1792 of yacc.c  */
#line 7791 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1006:
/* Line 1792 of yacc.c  */
#line 7795 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
    break;

  case 1007:
/* Line 1792 of yacc.c  */
#line 7796 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1009:
/* Line 1792 of yacc.c  */
#line 7802 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1010:
/* Line 1792 of yacc.c  */
#line 7810 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1016:
/* Line 1792 of yacc.c  */
#line 7832 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DROP_PARTITION;
          }
    break;

  case 1017:
/* Line 1792 of yacc.c  */
#line 7837 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
          }
    break;

  case 1018:
/* Line 1792 of yacc.c  */
#line 7844 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1020:
/* Line 1792 of yacc.c  */
#line 7858 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1021:
/* Line 1792 of yacc.c  */
#line 7870 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1023:
/* Line 1792 of yacc.c  */
#line 7883 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1025:
/* Line 1792 of yacc.c  */
#line 7896 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->alter_info.num_parts= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 1026:
/* Line 1792 of yacc.c  */
#line 7903 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1028:
/* Line 1792 of yacc.c  */
#line 7916 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            size_t dummy;
            lex->select_lex->db= const_cast<char*>((yyvsp[(6) - (7)].table)->db.str);
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            lex->name.str= const_cast<char*>((yyvsp[(6) - (7)].table)->table.str);
            lex->name.length= (yyvsp[(6) - (7)].table)->table.length;
            lex->alter_info.flags|= Alter_info::ALTER_EXCHANGE_PARTITION;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(6) - (7)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1029:
/* Line 1792 of yacc.c  */
#line 7942 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1030:
/* Line 1792 of yacc.c  */
#line 7951 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1033:
/* Line 1792 of yacc.c  */
#line 7967 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.with_validation= Alter_info::ALTER_WITH_VALIDATION;
          }
    break;

  case 1034:
/* Line 1792 of yacc.c  */
#line 7971 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.with_validation=
              Alter_info::ALTER_WITHOUT_VALIDATION;
          }
    break;

  case 1035:
/* Line 1792 of yacc.c  */
#line 7979 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REMOVE_PARTITIONING;
          }
    break;

  case 1036:
/* Line 1792 of yacc.c  */
#line 7986 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ALL_PARTITION;
          }
    break;

  case 1038:
/* Line 1792 of yacc.c  */
#line 7994 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->alter_info.flags|= Alter_info::ALTER_ADD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1039:
/* Line 1792 of yacc.c  */
#line 8006 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1041:
/* Line 1792 of yacc.c  */
#line 8012 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
    break;

  case 1042:
/* Line 1792 of yacc.c  */
#line 8017 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->part_info->num_parts= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 1043:
/* Line 1792 of yacc.c  */
#line 8024 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1045:
/* Line 1792 of yacc.c  */
#line 8039 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_TABLE_REORG;
          }
    break;

  case 1046:
/* Line 1792 of yacc.c  */
#line 8043 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REORGANIZE_PARTITION;
          }
    break;

  case 1047:
/* Line 1792 of yacc.c  */
#line 8047 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
    break;

  case 1048:
/* Line 1792 of yacc.c  */
#line 8054 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1049:
/* Line 1792 of yacc.c  */
#line 8055 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1050:
/* Line 1792 of yacc.c  */
#line 8060 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            if (Lex->alter_info.partition_names.push_back(s))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1053:
/* Line 1792 of yacc.c  */
#line 8085 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change=0;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN;
          }
    break;

  case 1054:
/* Line 1792 of yacc.c  */
#line 8094 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1055:
/* Line 1792 of yacc.c  */
#line 8098 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 1057:
/* Line 1792 of yacc.c  */
#line 8104 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change= (yyvsp[(3) - (3)].lex_str).str;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
          }
    break;

  case 1058:
/* Line 1792 of yacc.c  */
#line 8110 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1059:
/* Line 1792 of yacc.c  */
#line 8114 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset= NULL;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
            lex->gcol_info= 0;
          }
    break;

  case 1060:
/* Line 1792 of yacc.c  */
#line 8124 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,&(yyvsp[(3) - (5)].lex_str),
                                  (enum enum_field_types) (yyvsp[(5) - (5)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  (yyvsp[(3) - (5)].lex_str).str, &lex->interval_list, lex->charset,
                                  lex->uint_geom_type,
                                  lex->gcol_info))
              MYSQL_YYABORT;
          }
    break;

  case 1061:
/* Line 1792 of yacc.c  */
#line 8137 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1062:
/* Line 1792 of yacc.c  */
#line 8141 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::COLUMN, (yyvsp[(3) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_COLUMN;
          }
    break;

  case 1063:
/* Line 1792 of yacc.c  */
#line 8150 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[(4) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::DROP_FOREIGN_KEY;
          }
    break;

  case 1064:
/* Line 1792 of yacc.c  */
#line 8159 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, primary_key_name);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 1065:
/* Line 1792 of yacc.c  */
#line 8168 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (3)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 1066:
/* Line 1792 of yacc.c  */
#line 8177 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 1067:
/* Line 1792 of yacc.c  */
#line 8183 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 1068:
/* Line 1792 of yacc.c  */
#line 8189 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (6)].lex_str).str,(yyvsp[(6) - (6)].item));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 1069:
/* Line 1792 of yacc.c  */
#line 8198 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (5)].lex_str).str, (Item*) 0);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 1070:
/* Line 1792 of yacc.c  */
#line 8207 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex->db= const_cast<char*>((yyvsp[(3) - (3)].table)->db.str);
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            enum_ident_name_check ident_check_status=
              check_table_name((yyvsp[(3) - (3)].table)->table.str,(yyvsp[(3) - (3)].table)->table.length, FALSE);
            if (ident_check_status == IDENT_NAME_WRONG)
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            else if (ident_check_status == IDENT_NAME_TOO_LONG)
            {
              my_error(ER_TOO_LONG_IDENT, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            LEX_STRING db_str= to_lex_string((yyvsp[(3) - (3)].table)->db);
            if (db_str.str &&
                (check_and_convert_db_name(&db_str, FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            lex->name.str= const_cast<char*>((yyvsp[(3) - (3)].table)->table.str);
            lex->name.length= (yyvsp[(3) - (3)].table)->table.length;
            lex->alter_info.flags|= Alter_info::ALTER_RENAME;
          }
    break;

  case 1071:
/* Line 1792 of yacc.c  */
#line 8237 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_rename_key *ak= new (YYTHD->mem_root)
                                    Alter_rename_key((yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            if (ak == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_rename_key_list.push_back(ak);
            lex->alter_info.flags|= Alter_info::ALTER_RENAME_INDEX;
          }
    break;

  case 1072:
/* Line 1792 of yacc.c  */
#line 8247 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(4) - (5)].charset))
            {
              THD *thd= YYTHD;
              (yyvsp[(4) - (5)].charset)= thd->variables.collation_database;
            }
            (yyvsp[(5) - (5)].charset)= (yyvsp[(5) - (5)].charset) ? (yyvsp[(5) - (5)].charset) : (yyvsp[(4) - (5)].charset);
            if (!my_charset_same((yyvsp[(4) - (5)].charset),(yyvsp[(5) - (5)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(5) - (5)].charset)->name, (yyvsp[(4) - (5)].charset)->csname);
              MYSQL_YYABORT;
            }
            LEX *lex= Lex;
            lex->create_info.table_charset=
            lex->create_info.default_table_charset= (yyvsp[(5) - (5)].charset);
            lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
              HA_CREATE_USED_DEFAULT_CHARSET);
            lex->alter_info.flags|= Alter_info::ALTER_CONVERT;
          }
    break;

  case 1073:
/* Line 1792 of yacc.c  */
#line 8268 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.used_fields&= ~HA_CREATE_USED_ENGINE;
            }
          }
    break;

  case 1074:
/* Line 1792 of yacc.c  */
#line 8278 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_RECREATE;
          }
    break;

  case 1075:
/* Line 1792 of yacc.c  */
#line 8282 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ORDER;
          }
    break;

  case 1078:
/* Line 1792 of yacc.c  */
#line 8289 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_UPGRADE_PARTITIONING;
          }
    break;

  case 1085:
/* Line 1792 of yacc.c  */
#line 8304 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.requested_algorithm=
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
    break;

  case 1086:
/* Line 1792 of yacc.c  */
#line 8309 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.set_requested_algorithm(&(yyvsp[(3) - (3)].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1087:
/* Line 1792 of yacc.c  */
#line 8320 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
    break;

  case 1088:
/* Line 1792 of yacc.c  */
#line 8325 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.set_requested_lock(&(yyvsp[(3) - (3)].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1089:
/* Line 1792 of yacc.c  */
#line 8335 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1090:
/* Line 1792 of yacc.c  */
#line 8336 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1091:
/* Line 1792 of yacc.c  */
#line 8340 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1092:
/* Line 1792 of yacc.c  */
#line 8341 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1093:
/* Line 1792 of yacc.c  */
#line 8345 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_DEFAULT; }
    break;

  case 1094:
/* Line 1792 of yacc.c  */
#line 8346 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_RESTRICT; }
    break;

  case 1095:
/* Line 1792 of yacc.c  */
#line 8347 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_CASCADE; }
    break;

  case 1096:
/* Line 1792 of yacc.c  */
#line 8351 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1097:
/* Line 1792 of yacc.c  */
#line 8353 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            store_position_for_column((yyvsp[(2) - (2)].lex_str).str);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
    break;

  case 1098:
/* Line 1792 of yacc.c  */
#line 8358 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            store_position_for_column(first_keyword);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
    break;

  case 1099:
/* Line 1792 of yacc.c  */
#line 8365 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1100:
/* Line 1792 of yacc.c  */
#line 8366 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1101:
/* Line 1792 of yacc.c  */
#line 8367 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1102:
/* Line 1792 of yacc.c  */
#line 8368 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1103:
/* Line 1792 of yacc.c  */
#line 8373 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
                 }
    break;

  case 1104:
/* Line 1792 of yacc.c  */
#line 8378 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
                 }
    break;

  case 1105:
/* Line 1792 of yacc.c  */
#line 8385 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1106:
/* Line 1792 of yacc.c  */
#line 8387 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= (yyvsp[(3) - (4)].num);
        }
    break;

  case 1107:
/* Line 1792 of yacc.c  */
#line 8397 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1108:
/* Line 1792 of yacc.c  */
#line 8412 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1110:
/* Line 1792 of yacc.c  */
#line 8433 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1111:
/* Line 1792 of yacc.c  */
#line 8449 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1112:
/* Line 1792 of yacc.c  */
#line 8453 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1113:
/* Line 1792 of yacc.c  */
#line 8460 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1114:
/* Line 1792 of yacc.c  */
#line 8464 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1115:
/* Line 1792 of yacc.c  */
#line 8471 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
    break;

  case 1116:
/* Line 1792 of yacc.c  */
#line 8475 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
    break;

  case 1117:
/* Line 1792 of yacc.c  */
#line 8479 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
    break;

  case 1119:
/* Line 1792 of yacc.c  */
#line 8490 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1120:
/* Line 1792 of yacc.c  */
#line 8494 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.user= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1121:
/* Line 1792 of yacc.c  */
#line 8500 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1122:
/* Line 1792 of yacc.c  */
#line 8504 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.password= (yyvsp[(3) - (3)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 1123:
/* Line 1792 of yacc.c  */
#line 8510 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1124:
/* Line 1792 of yacc.c  */
#line 8514 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1125:
/* Line 1792 of yacc.c  */
#line 8520 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1126:
/* Line 1792 of yacc.c  */
#line 8524 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1127:
/* Line 1792 of yacc.c  */
#line 8531 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1128:
/* Line 1792 of yacc.c  */
#line 8535 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1129:
/* Line 1792 of yacc.c  */
#line 8542 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1130:
/* Line 1792 of yacc.c  */
#line 8546 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1131:
/* Line 1792 of yacc.c  */
#line 8553 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_SQL;
          }
    break;

  case 1132:
/* Line 1792 of yacc.c  */
#line 8557 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_IO;
          }
    break;

  case 1133:
/* Line 1792 of yacc.c  */
#line 8564 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
    break;

  case 1134:
/* Line 1792 of yacc.c  */
#line 8569 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
    break;

  case 1137:
/* Line 1792 of yacc.c  */
#line 8597 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
    break;

  case 1138:
/* Line 1792 of yacc.c  */
#line 8602 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
    break;

  case 1139:
/* Line 1792 of yacc.c  */
#line 8607 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.until_after_gaps= true;
          }
    break;

  case 1140:
/* Line 1792 of yacc.c  */
#line 8614 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1141:
/* Line 1792 of yacc.c  */
#line 8621 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1142:
/* Line 1792 of yacc.c  */
#line 8625 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= 0; }
    break;

  case 1143:
/* Line 1792 of yacc.c  */
#line 8626 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_QUICK; }
    break;

  case 1144:
/* Line 1792 of yacc.c  */
#line 8627 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_EXTEND; }
    break;

  case 1145:
/* Line 1792 of yacc.c  */
#line 8632 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1146:
/* Line 1792 of yacc.c  */
#line 8642 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1147:
/* Line 1792 of yacc.c  */
#line 8653 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1148:
/* Line 1792 of yacc.c  */
#line 8654 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1149:
/* Line 1792 of yacc.c  */
#line 8658 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1150:
/* Line 1792 of yacc.c  */
#line 8659 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1151:
/* Line 1792 of yacc.c  */
#line 8663 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1152:
/* Line 1792 of yacc.c  */
#line 8664 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1153:
/* Line 1792 of yacc.c  */
#line 8665 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
    break;

  case 1154:
/* Line 1792 of yacc.c  */
#line 8670 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1155:
/* Line 1792 of yacc.c  */
#line 8680 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1156:
/* Line 1792 of yacc.c  */
#line 8692 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 1157:
/* Line 1792 of yacc.c  */
#line 8700 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1158:
/* Line 1792 of yacc.c  */
#line 8715 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1159:
/* Line 1792 of yacc.c  */
#line 8726 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1160:
/* Line 1792 of yacc.c  */
#line 8727 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1161:
/* Line 1792 of yacc.c  */
#line 8731 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1162:
/* Line 1792 of yacc.c  */
#line 8732 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1163:
/* Line 1792 of yacc.c  */
#line 8736 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1164:
/* Line 1792 of yacc.c  */
#line 8737 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_FAST; }
    break;

  case 1165:
/* Line 1792 of yacc.c  */
#line 8738 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_MEDIUM; }
    break;

  case 1166:
/* Line 1792 of yacc.c  */
#line 8739 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1167:
/* Line 1792 of yacc.c  */
#line 8740 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
    break;

  case 1168:
/* Line 1792 of yacc.c  */
#line 8741 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
    break;

  case 1169:
/* Line 1792 of yacc.c  */
#line 8746 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1170:
/* Line 1792 of yacc.c  */
#line 8756 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1171:
/* Line 1792 of yacc.c  */
#line 8767 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1172:
/* Line 1792 of yacc.c  */
#line 8768 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1173:
/* Line 1792 of yacc.c  */
#line 8769 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1174:
/* Line 1792 of yacc.c  */
#line 8774 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
    break;

  case 1175:
/* Line 1792 of yacc.c  */
#line 8778 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1176:
/* Line 1792 of yacc.c  */
#line 8780 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 1177:
/* Line 1792 of yacc.c  */
#line 8787 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (3)].lex_user)) || Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1178:
/* Line 1792 of yacc.c  */
#line 8792 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (5)].lex_user)) || Lex->users_list.push_back((yyvsp[(5) - (5)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1181:
/* Line 1792 of yacc.c  */
#line 8805 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[(1) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[(3) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
    break;

  case 1182:
/* Line 1792 of yacc.c  */
#line 8818 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.reset();
          }
    break;

  case 1183:
/* Line 1792 of yacc.c  */
#line 8822 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 1188:
/* Line 1792 of yacc.c  */
#line 8841 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(2) - (2)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1189:
/* Line 1792 of yacc.c  */
#line 8851 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(3) - (3)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1190:
/* Line 1792 of yacc.c  */
#line 8860 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1191:
/* Line 1792 of yacc.c  */
#line 8861 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 1192:
/* Line 1792 of yacc.c  */
#line 8866 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
    break;

  case 1193:
/* Line 1792 of yacc.c  */
#line 8872 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1198:
/* Line 1792 of yacc.c  */
#line 8887 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, (yyvsp[(3) - (3)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(2) - (3)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1199:
/* Line 1792 of yacc.c  */
#line 8897 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (4)].table), NULL, (yyvsp[(4) - (4)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(3) - (4)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1200:
/* Line 1792 of yacc.c  */
#line 8907 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADMIN_PARTITION;
          }
    break;

  case 1203:
/* Line 1792 of yacc.c  */
#line 8918 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1204:
/* Line 1792 of yacc.c  */
#line 8920 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(3) - (4)].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[(3) - (4)].key_usage_list);
          }
    break;

  case 1205:
/* Line 1792 of yacc.c  */
#line 8930 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1206:
/* Line 1792 of yacc.c  */
#line 8931 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 1207:
/* Line 1792 of yacc.c  */
#line 8941 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select)= NEW_PTN PT_select((yyvsp[(1) - (1)].select_init), SQLCOM_SELECT);
          }
    break;

  case 1208:
/* Line 1792 of yacc.c  */
#line 8949 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_init)= NEW_PTN PT_select_init2((yyvsp[(1) - (3)].optimizer_hints), (yyvsp[(2) - (3)].select_part2), (yyvsp[(3) - (3)].union_list));
          }
    break;

  case 1209:
/* Line 1792 of yacc.c  */
#line 8953 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_init)= NEW_PTN PT_select_init_parenthesis((yyvsp[(2) - (4)].select_paren), (yyvsp[(4) - (4)].node));
          }
    break;

  case 1210:
/* Line 1792 of yacc.c  */
#line 8960 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_paren)= NEW_PTN PT_select_paren((yyvsp[(1) - (2)].optimizer_hints), (yyvsp[(2) - (2)].select_part2));
          }
    break;

  case 1211:
/* Line 1792 of yacc.c  */
#line 8963 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.select_paren)= (yyvsp[(2) - (3)].select_paren); }
    break;

  case 1212:
/* Line 1792 of yacc.c  */
#line 8969 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_paren_derived)= NEW_PTN PT_select_paren_derived((yyvsp[(1) - (3)].optimizer_hints), (yyvsp[(2) - (3)].select_part2_derived), (yyvsp[(3) - (3)].table_expression));
          }
    break;

  case 1213:
/* Line 1792 of yacc.c  */
#line 8972 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.select_paren_derived)= (yyvsp[(2) - (3)].select_paren_derived); }
    break;

  case 1214:
/* Line 1792 of yacc.c  */
#line 8985 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_part2)= NEW_PTN PT_select_part2((yyvsp[(1) - (4)].select_options_and_item_list), NULL, NULL, NULL, NULL, NULL,
                                        (yyvsp[(2) - (4)].order), (yyvsp[(3) - (4)].limit_clause), NULL, NULL, (yyvsp[(4) - (4)].select_lock_type));
          }
    break;

  case 1215:
/* Line 1792 of yacc.c  */
#line 8990 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_part2)= NEW_PTN PT_select_part2((yyvsp[(1) - (3)].select_options_and_item_list), (yyvsp[(2) - (3)].into_destination), NULL, NULL, NULL, NULL, NULL,
                                        NULL, NULL, NULL, (yyvsp[(3) - (3)].select_lock_type));
          }
    break;

  case 1216:
/* Line 1792 of yacc.c  */
#line 9005 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (11)].into_destination) && (yyvsp[(10) - (11)].into_destination))
            {
              /* double "INTO" clause */
              YYTHD->parse_error_at((yylsp[(10) - (11)]), ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(9) - (11)].procedure_analyse) && ((yyvsp[(2) - (11)].into_destination) || (yyvsp[(10) - (11)].into_destination)))
            {
              /* "INTO" with "PROCEDURE ANALYSE" */
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "INTO");
              MYSQL_YYABORT;
            }
            (yyval.select_part2)= NEW_PTN PT_select_part2((yyvsp[(1) - (11)].select_options_and_item_list), (yyvsp[(2) - (11)].into_destination), (yyvsp[(3) - (11)].table_reference_list), (yyvsp[(4) - (11)].item), (yyvsp[(5) - (11)].group), (yyvsp[(6) - (11)].item), (yyvsp[(7) - (11)].order), (yyvsp[(8) - (11)].limit_clause), (yyvsp[(9) - (11)].procedure_analyse), (yyvsp[(10) - (11)].into_destination),
                                        (yyvsp[(11) - (11)].select_lock_type));
          }
    break;

  case 1217:
/* Line 1792 of yacc.c  */
#line 9024 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: remove this semantic action (currently this removal
              adds shift/reduce conflict)
            */
          }
    break;

  case 1218:
/* Line 1792 of yacc.c  */
#line 9031 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options_and_item_list)= NEW_PTN PT_select_options_and_item_list((yyvsp[(2) - (3)].select_options), (yyvsp[(3) - (3)].item_list2));
          }
    break;

  case 1219:
/* Line 1792 of yacc.c  */
#line 9046 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_expression)= NEW_PTN PT_table_expression((yyvsp[(1) - (8)].table_reference_list), (yyvsp[(2) - (8)].item), (yyvsp[(3) - (8)].group), (yyvsp[(4) - (8)].item), (yyvsp[(5) - (8)].order), (yyvsp[(6) - (8)].limit_clause), (yyvsp[(7) - (8)].procedure_analyse), (yyvsp[(8) - (8)].select_lock_type));
          }
    break;

  case 1220:
/* Line 1792 of yacc.c  */
#line 9052 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= (yyvsp[(2) - (2)].table_reference_list); }
    break;

  case 1221:
/* Line 1792 of yacc.c  */
#line 9056 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= NULL; }
    break;

  case 1223:
/* Line 1792 of yacc.c  */
#line 9062 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference_list)= NEW_PTN PT_table_reference_list((yyvsp[(1) - (1)].join_table_list));
          }
    break;

  case 1224:
/* Line 1792 of yacc.c  */
#line 9065 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= NULL; }
    break;

  case 1225:
/* Line 1792 of yacc.c  */
#line 9074 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1227:
/* Line 1792 of yacc.c  */
#line 9083 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.select_options).merge((yyvsp[(1) - (2)].select_options), (yyvsp[(2) - (2)].select_options)))
              MYSQL_YYABORT;
          }
    break;

  case 1229:
/* Line 1792 of yacc.c  */
#line 9092 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= (yyvsp[(1) - (1)].ulonglong_number);
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1230:
/* Line 1792 of yacc.c  */
#line 9097 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /*
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_NO_CACHE;
          }
    break;

  case 1231:
/* Line 1792 of yacc.c  */
#line 9106 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /*
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE;
          }
    break;

  case 1232:
/* Line 1792 of yacc.c  */
#line 9117 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.select_lock_type).is_set= false; }
    break;

  case 1233:
/* Line 1792 of yacc.c  */
#line 9119 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lock_type).is_set= true;
            (yyval.select_lock_type).lock_type= TL_WRITE;
            (yyval.select_lock_type).is_safe_to_cache_query= false;
          }
    break;

  case 1234:
/* Line 1792 of yacc.c  */
#line 9125 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lock_type).is_set= true;
            (yyval.select_lock_type).lock_type= TL_READ_WITH_SHARED_LOCKS;
            (yyval.select_lock_type).is_safe_to_cache_query= false;
          }
    break;

  case 1235:
/* Line 1792 of yacc.c  */
#line 9134 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1236:
/* Line 1792 of yacc.c  */
#line 9140 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1237:
/* Line 1792 of yacc.c  */
#line 9146 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_field((yyloc), NULL, NULL, "*");
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
    break;

  case 1238:
/* Line 1792 of yacc.c  */
#line 9155 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1239:
/* Line 1792 of yacc.c  */
#line 9157 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[(1) - (2)].item), (yylsp[(1) - (2)]).cpp, (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1240:
/* Line 1792 of yacc.c  */
#line 9164 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 1241:
/* Line 1792 of yacc.c  */
#line 9165 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1242:
/* Line 1792 of yacc.c  */
#line 9166 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1243:
/* Line 1792 of yacc.c  */
#line 9167 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1244:
/* Line 1792 of yacc.c  */
#line 9168 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1245:
/* Line 1792 of yacc.c  */
#line 9172 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1246:
/* Line 1792 of yacc.c  */
#line 9173 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1247:
/* Line 1792 of yacc.c  */
#line 9179 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYTHD->mem_root, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1248:
/* Line 1792 of yacc.c  */
#line 9185 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1249:
/* Line 1792 of yacc.c  */
#line 9190 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYTHD->mem_root, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1250:
/* Line 1792 of yacc.c  */
#line 9196 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1251:
/* Line 1792 of yacc.c  */
#line 9200 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_istrue((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1252:
/* Line 1792 of yacc.c  */
#line 9204 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnottrue((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1253:
/* Line 1792 of yacc.c  */
#line 9208 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isfalse((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1254:
/* Line 1792 of yacc.c  */
#line 9212 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotfalse((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1255:
/* Line 1792 of yacc.c  */
#line 9216 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1256:
/* Line 1792 of yacc.c  */
#line 9220 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1258:
/* Line 1792 of yacc.c  */
#line 9228 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1259:
/* Line 1792 of yacc.c  */
#line 9232 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1260:
/* Line 1792 of yacc.c  */
#line 9236 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(2) - (3)].boolfunc2creator), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1261:
/* Line 1792 of yacc.c  */
#line 9240 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (6)].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->parse_error_at((yylsp[(2) - (6)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(2) - (6)].boolfunc2creator), (yyvsp[(3) - (6)].num), (yyvsp[(5) - (6)].subselect));
          }
    break;

  case 1263:
/* Line 1792 of yacc.c  */
#line 9257 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].subselect));
          }
    break;

  case 1264:
/* Line 1792 of yacc.c  */
#line 9261 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(5) - (6)].subselect));
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
    break;

  case 1265:
/* Line 1792 of yacc.c  */
#line 9266 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (5)].item), true, (yyvsp[(4) - (5)].item));
          }
    break;

  case 1266:
/* Line 1792 of yacc.c  */
#line 9270 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].item_list2) == NULL || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(4) - (7)].item)) || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(1) - (7)].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(6) - (7)].item_list2), false);
          }
    break;

  case 1267:
/* Line 1792 of yacc.c  */
#line 9277 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (6)].item), false, (yyvsp[(5) - (6)].item));
          }
    break;

  case 1268:
/* Line 1792 of yacc.c  */
#line 9281 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(7) - (8)].item_list2) == NULL || (yyvsp[(7) - (8)].item_list2)->push_front((yyvsp[(5) - (8)].item)) || (yyvsp[(7) - (8)].item_list2)->value.push_front((yyvsp[(1) - (8)].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(7) - (8)].item_list2), true);
          }
    break;

  case 1269:
/* Line 1792 of yacc.c  */
#line 9288 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].item), false);
          }
    break;

  case 1270:
/* Line 1792 of yacc.c  */
#line 9292 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(4) - (6)].item), (yyvsp[(6) - (6)].item), true);
          }
    break;

  case 1271:
/* Line 1792 of yacc.c  */
#line 9296 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(1) - (4)].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(4) - (4)].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
    break;

  case 1272:
/* Line 1792 of yacc.c  */
#line 9304 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(3) - (4)].item), (yyvsp[(4) - (4)].item));
          }
    break;

  case 1273:
/* Line 1792 of yacc.c  */
#line 9308 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_not((yyloc), item);
          }
    break;

  case 1274:
/* Line 1792 of yacc.c  */
#line 9315 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_regex((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1275:
/* Line 1792 of yacc.c  */
#line 9319 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_regex((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(4) - (4)].item));
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
    break;

  case 1277:
/* Line 1792 of yacc.c  */
#line 9328 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1278:
/* Line 1792 of yacc.c  */
#line 9332 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1279:
/* Line 1792 of yacc.c  */
#line 9336 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1280:
/* Line 1792 of yacc.c  */
#line 9340 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1281:
/* Line 1792 of yacc.c  */
#line 9344 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1282:
/* Line 1792 of yacc.c  */
#line 9348 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1283:
/* Line 1792 of yacc.c  */
#line 9352 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 0);
          }
    break;

  case 1284:
/* Line 1792 of yacc.c  */
#line 9356 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 1);
          }
    break;

  case 1285:
/* Line 1792 of yacc.c  */
#line 9360 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1286:
/* Line 1792 of yacc.c  */
#line 9364 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1287:
/* Line 1792 of yacc.c  */
#line 9368 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1288:
/* Line 1792 of yacc.c  */
#line 9372 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1289:
/* Line 1792 of yacc.c  */
#line 9376 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1290:
/* Line 1792 of yacc.c  */
#line 9380 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1300:
/* Line 1792 of yacc.c  */
#line 9407 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 1301:
/* Line 1792 of yacc.c  */
#line 9408 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
    break;

  case 1302:
/* Line 1792 of yacc.c  */
#line 9409 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 1303:
/* Line 1792 of yacc.c  */
#line 9410 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 1304:
/* Line 1792 of yacc.c  */
#line 9411 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 1305:
/* Line 1792 of yacc.c  */
#line 9412 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 1306:
/* Line 1792 of yacc.c  */
#line 9413 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 1307:
/* Line 1792 of yacc.c  */
#line 9417 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1308:
/* Line 1792 of yacc.c  */
#line 9418 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1314:
/* Line 1792 of yacc.c  */
#line 9428 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 1316:
/* Line 1792 of yacc.c  */
#line 9432 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].param_marker); }
    break;

  case 1319:
/* Line 1792 of yacc.c  */
#line 9436 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1320:
/* Line 1792 of yacc.c  */
#line 9440 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
    break;

  case 1321:
/* Line 1792 of yacc.c  */
#line 9444 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1322:
/* Line 1792 of yacc.c  */
#line 9448 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1323:
/* Line 1792 of yacc.c  */
#line 9452 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1324:
/* Line 1792 of yacc.c  */
#line 9456 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[(2) - (3)].subselect));
          }
    break;

  case 1325:
/* Line 1792 of yacc.c  */
#line 9460 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (3)].item); }
    break;

  case 1326:
/* Line 1792 of yacc.c  */
#line 9462 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item_list2)->value);
          }
    break;

  case 1327:
/* Line 1792 of yacc.c  */
#line 9466 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item_list2)->value);
          }
    break;

  case 1328:
/* Line 1792 of yacc.c  */
#line 9470 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[(3) - (4)].subselect));
          }
    break;

  case 1329:
/* Line 1792 of yacc.c  */
#line 9474 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[(2) - (4)].lex_str), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1330:
/* Line 1792 of yacc.c  */
#line 9478 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[(2) - (7)].item_list2), (yyvsp[(5) - (7)].item), (yyvsp[(6) - (7)].num));
          }
    break;

  case 1331:
/* Line 1792 of yacc.c  */
#line 9482 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(2) - (2)]), (yyvsp[(2) - (2)].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
    break;

  case 1332:
/* Line 1792 of yacc.c  */
#line 9486 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (6)]), (yyvsp[(3) - (6)].item), &(yyvsp[(5) - (6)].cast_type));
          }
    break;

  case 1333:
/* Line 1792 of yacc.c  */
#line 9490 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), *(yyvsp[(3) - (5)].item_list), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item) );
          }
    break;

  case 1334:
/* Line 1792 of yacc.c  */
#line 9494 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (6)]), (yyvsp[(3) - (6)].item), &(yyvsp[(5) - (6)].cast_type));
          }
    break;

  case 1335:
/* Line 1792 of yacc.c  */
#line 9498 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].charset));
          }
    break;

  case 1336:
/* Line 1792 of yacc.c  */
#line 9502 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1337:
/* Line 1792 of yacc.c  */
#line 9506 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1338:
/* Line 1792 of yacc.c  */
#line 9511 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(5) - (5)].item), (yyvsp[(2) - (5)].item), (yyvsp[(3) - (5)].interval), 0);
          }
    break;

  case 1339:
/* Line 1792 of yacc.c  */
#line 9515 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[(1) - (3)].item), path);
          }
    break;

  case 1340:
/* Line 1792 of yacc.c  */
#line 9531 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1341:
/* Line 1792 of yacc.c  */
#line 9535 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (6)].item_list2), (yyvsp[(5) - (6)].charset));
          }
    break;

  case 1342:
/* Line 1792 of yacc.c  */
#line 9539 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
    break;

  case 1343:
/* Line 1792 of yacc.c  */
#line 9543 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1344:
/* Line 1792 of yacc.c  */
#line 9547 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1345:
/* Line 1792 of yacc.c  */
#line 9551 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1346:
/* Line 1792 of yacc.c  */
#line 9555 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].item), (yyvsp[(7) - (10)].item), (yyvsp[(9) - (10)].item));
          }
    break;

  case 1347:
/* Line 1792 of yacc.c  */
#line 9559 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYTHD->mem_root, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1348:
/* Line 1792 of yacc.c  */
#line 9563 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYTHD->mem_root, (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item_list2));
          }
    break;

  case 1349:
/* Line 1792 of yacc.c  */
#line 9567 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1350:
/* Line 1792 of yacc.c  */
#line 9571 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1351:
/* Line 1792 of yacc.c  */
#line 9575 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1352:
/* Line 1792 of yacc.c  */
#line 9579 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1353:
/* Line 1792 of yacc.c  */
#line 9583 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1354:
/* Line 1792 of yacc.c  */
#line 9587 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_time_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1355:
/* Line 1792 of yacc.c  */
#line 9591 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_datetime_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1356:
/* Line 1792 of yacc.c  */
#line 9595 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), 1, 0);
          }
    break;

  case 1357:
/* Line 1792 of yacc.c  */
#line 9599 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(3) - (4)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1358:
/* Line 1792 of yacc.c  */
#line 9604 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1359:
/* Line 1792 of yacc.c  */
#line 9609 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1360:
/* Line 1792 of yacc.c  */
#line 9614 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1361:
/* Line 1792 of yacc.c  */
#line 9618 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1362:
/* Line 1792 of yacc.c  */
#line 9622 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1363:
/* Line 1792 of yacc.c  */
#line 9626 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1364:
/* Line 1792 of yacc.c  */
#line 9630 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), (yyvsp[(3) - (6)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1365:
/* Line 1792 of yacc.c  */
#line 9635 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
    break;

  case 1366:
/* Line 1792 of yacc.c  */
#line 9639 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1367:
/* Line 1792 of yacc.c  */
#line 9658 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 0);
          }
    break;

  case 1368:
/* Line 1792 of yacc.c  */
#line 9662 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1369:
/* Line 1792 of yacc.c  */
#line 9666 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
    break;

  case 1370:
/* Line 1792 of yacc.c  */
#line 9670 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1371:
/* Line 1792 of yacc.c  */
#line 9675 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1372:
/* Line 1792 of yacc.c  */
#line 9680 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1373:
/* Line 1792 of yacc.c  */
#line 9684 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[(3) - (6)].interval), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1374:
/* Line 1792 of yacc.c  */
#line 9688 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[(3) - (6)].date_time_type), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1375:
/* Line 1792 of yacc.c  */
#line 9692 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 1376:
/* Line 1792 of yacc.c  */
#line 9697 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
          }
    break;

  case 1377:
/* Line 1792 of yacc.c  */
#line 9701 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 1);
          }
    break;

  case 1378:
/* Line 1792 of yacc.c  */
#line 9705 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1379:
/* Line 1792 of yacc.c  */
#line 9709 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1380:
/* Line 1792 of yacc.c  */
#line 9713 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1381:
/* Line 1792 of yacc.c  */
#line 9717 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1382:
/* Line 1792 of yacc.c  */
#line 9721 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1383:
/* Line 1792 of yacc.c  */
#line 9725 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1384:
/* Line 1792 of yacc.c  */
#line 9730 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(7) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(3) - (8)].interval_time_st), 0);
          }
    break;

  case 1385:
/* Line 1792 of yacc.c  */
#line 9734 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item),(yyvsp[(3) - (8)].interval_time_st));
          }
    break;

  case 1386:
/* Line 1792 of yacc.c  */
#line 9738 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
    break;

  case 1387:
/* Line 1792 of yacc.c  */
#line 9742 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1388:
/* Line 1792 of yacc.c  */
#line 9746 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1389:
/* Line 1792 of yacc.c  */
#line 9758 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1390:
/* Line 1792 of yacc.c  */
#line 9762 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1391:
/* Line 1792 of yacc.c  */
#line 9766 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1392:
/* Line 1792 of yacc.c  */
#line 9770 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1393:
/* Line 1792 of yacc.c  */
#line 9774 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
    break;

  case 1394:
/* Line 1792 of yacc.c  */
#line 9778 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1395:
/* Line 1792 of yacc.c  */
#line 9782 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1396:
/* Line 1792 of yacc.c  */
#line 9786 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item));
          }
    break;

  case 1397:
/* Line 1792 of yacc.c  */
#line 9790 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1398:
/* Line 1792 of yacc.c  */
#line 9794 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1399:
/* Line 1792 of yacc.c  */
#line 9798 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_password((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1400:
/* Line 1792 of yacc.c  */
#line 9802 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1401:
/* Line 1792 of yacc.c  */
#line 9806 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1402:
/* Line 1792 of yacc.c  */
#line 9810 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1403:
/* Line 1792 of yacc.c  */
#line 9814 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1404:
/* Line 1792 of yacc.c  */
#line 9818 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
    break;

  case 1405:
/* Line 1792 of yacc.c  */
#line 9822 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item),1);
          }
    break;

  case 1406:
/* Line 1792 of yacc.c  */
#line 9826 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (4)].item), NULL);
          }
    break;

  case 1407:
/* Line 1792 of yacc.c  */
#line 9830 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1408:
/* Line 1792 of yacc.c  */
#line 9834 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (5)].item), 0, 0, (yyvsp[(4) - (5)].ulong_num));
          }
    break;

  case 1409:
/* Line 1792 of yacc.c  */
#line 9838 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (8)].item), 0, (yyvsp[(6) - (8)].ulong_num),
                        (yyvsp[(7) - (8)].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
          }
    break;

  case 1410:
/* Line 1792 of yacc.c  */
#line 9843 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc),
                        (yyvsp[(3) - (7)].item), 0, (yyvsp[(6) - (7)].ulong_num), MY_STRXFRM_PAD_WITH_SPACE, true);
          }
    break;

  case 1411:
/* Line 1792 of yacc.c  */
#line 9848 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].ulong_num), (yyvsp[(7) - (10)].ulong_num), (yyvsp[(9) - (10)].ulong_num));
          }
    break;

  case 1413:
/* Line 1792 of yacc.c  */
#line 9856 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "CONTAINS", "MBRCONTAINS");
            (yyval.item)= NEW_PTN Item_func_spatial_mbr_rel((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                        Item_func::SP_CONTAINS_FUNC);
          }
    break;

  case 1414:
/* Line 1792 of yacc.c  */
#line 9862 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
    break;

  case 1415:
/* Line 1792 of yacc.c  */
#line 9868 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
    break;

  case 1416:
/* Line 1792 of yacc.c  */
#line 9874 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
    break;

  case 1417:
/* Line 1792 of yacc.c  */
#line 9880 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
    break;

  case 1418:
/* Line 1792 of yacc.c  */
#line 9886 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
    break;

  case 1419:
/* Line 1792 of yacc.c  */
#line 9892 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1420:
/* Line 1792 of yacc.c  */
#line 9896 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
    break;

  case 1421:
/* Line 1792 of yacc.c  */
#line 9914 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[(1) - (4)]), (yyvsp[(1) - (4)].lex_str), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1422:
/* Line 1792 of yacc.c  */
#line 9918 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[(1) - (6)].lex_str), (yyvsp[(3) - (6)].lex_str), (yyvsp[(5) - (6)].item_list2));
          }
    break;

  case 1423:
/* Line 1792 of yacc.c  */
#line 9925 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 1424:
/* Line 1792 of yacc.c  */
#line 9927 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                MYSQLerror(NULL,thd,"syntax error");
                            });
          }
    break;

  case 1425:
/* Line 1792 of yacc.c  */
#line 9939 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1426:
/* Line 1792 of yacc.c  */
#line 9940 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1427:
/* Line 1792 of yacc.c  */
#line 9944 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;         }
    break;

  case 1428:
/* Line 1792 of yacc.c  */
#line 9945 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_EXPAND; }
    break;

  case 1429:
/* Line 1792 of yacc.c  */
#line 9949 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1430:
/* Line 1792 of yacc.c  */
#line 9950 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1431:
/* Line 1792 of yacc.c  */
#line 9955 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1432:
/* Line 1792 of yacc.c  */
#line 9961 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1433:
/* Line 1792 of yacc.c  */
#line 9970 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].lex_str), (yylsp[(1) - (2)]).cpp);
          }
    break;

  case 1434:
/* Line 1792 of yacc.c  */
#line 9977 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(3) - (4)].item), FALSE);
          }
    break;

  case 1435:
/* Line 1792 of yacc.c  */
#line 9981 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(4) - (5)].item), TRUE);
          }
    break;

  case 1436:
/* Line 1792 of yacc.c  */
#line 9985 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1437:
/* Line 1792 of yacc.c  */
#line 9989 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1438:
/* Line 1792 of yacc.c  */
#line 9993 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1439:
/* Line 1792 of yacc.c  */
#line 9997 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc));
          }
    break;

  case 1440:
/* Line 1792 of yacc.c  */
#line 10001 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1441:
/* Line 1792 of yacc.c  */
#line 10005 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[(4) - (5)].item_list2));
          }
    break;

  case 1442:
/* Line 1792 of yacc.c  */
#line 10009 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1443:
/* Line 1792 of yacc.c  */
#line 10018 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(4) - (5)].item));
          }
    break;

  case 1444:
/* Line 1792 of yacc.c  */
#line 10022 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1445:
/* Line 1792 of yacc.c  */
#line 10026 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(4) - (5)].item));
          }
    break;

  case 1446:
/* Line 1792 of yacc.c  */
#line 10030 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (4)].item), 0);
          }
    break;

  case 1447:
/* Line 1792 of yacc.c  */
#line 10034 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (4)].item), 0);
          }
    break;

  case 1448:
/* Line 1792 of yacc.c  */
#line 10038 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (4)].item), 1);
          }
    break;

  case 1449:
/* Line 1792 of yacc.c  */
#line 10042 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (4)].item), 1);
          }
    break;

  case 1450:
/* Line 1792 of yacc.c  */
#line 10046 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(3) - (4)].item), FALSE);
          }
    break;

  case 1451:
/* Line 1792 of yacc.c  */
#line 10050 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(4) - (5)].item), TRUE);
          }
    break;

  case 1452:
/* Line 1792 of yacc.c  */
#line 10057 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[(3) - (7)].num), (yyvsp[(4) - (7)].item_list2), (yyvsp[(5) - (7)].order_list), (yyvsp[(6) - (7)].string));
          }
    break;

  case 1453:
/* Line 1792 of yacc.c  */
#line 10063 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1454:
/* Line 1792 of yacc.c  */
#line 10068 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1455:
/* Line 1792 of yacc.c  */
#line 10072 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_ident_or_text((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1456:
/* Line 1792 of yacc.c  */
#line 10076 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[(2) - (4)].var_type), (yyvsp[(3) - (4)].lex_str), (yylsp[(3) - (4)]), (yyvsp[(4) - (4)].lex_str));
          }
    break;

  case 1457:
/* Line 1792 of yacc.c  */
#line 10082 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1458:
/* Line 1792 of yacc.c  */
#line 10083 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1459:
/* Line 1792 of yacc.c  */
#line 10088 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1460:
/* Line 1792 of yacc.c  */
#line 10093 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.string) = (yyvsp[(2) - (2)].string); }
    break;

  case 1461:
/* Line 1792 of yacc.c  */
#line 10097 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.order_list)= NULL; }
    break;

  case 1462:
/* Line 1792 of yacc.c  */
#line 10098 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.order_list)= (yyvsp[(3) - (3)].order_list); }
    break;

  case 1463:
/* Line 1792 of yacc.c  */
#line 10103 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1464:
/* Line 1792 of yacc.c  */
#line 10108 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1465:
/* Line 1792 of yacc.c  */
#line 10118 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1466:
/* Line 1792 of yacc.c  */
#line 10125 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1467:
/* Line 1792 of yacc.c  */
#line 10133 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            (yyval.cast_type).type_flags= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.cast_type).length= (yyvsp[(2) - (3)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1468:
/* Line 1792 of yacc.c  */
#line 10141 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1469:
/* Line 1792 of yacc.c  */
#line 10149 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1470:
/* Line 1792 of yacc.c  */
#line 10157 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1471:
/* Line 1792 of yacc.c  */
#line 10165 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1472:
/* Line 1792 of yacc.c  */
#line 10173 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1473:
/* Line 1792 of yacc.c  */
#line 10181 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1474:
/* Line 1792 of yacc.c  */
#line 10189 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1475:
/* Line 1792 of yacc.c  */
#line 10197 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1476:
/* Line 1792 of yacc.c  */
#line 10205 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].precision).length;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].precision).dec;
          }
    break;

  case 1477:
/* Line 1792 of yacc.c  */
#line 10213 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1478:
/* Line 1792 of yacc.c  */
#line 10223 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1480:
/* Line 1792 of yacc.c  */
#line 10229 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1481:
/* Line 1792 of yacc.c  */
#line 10235 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1482:
/* Line 1792 of yacc.c  */
#line 10243 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1483:
/* Line 1792 of yacc.c  */
#line 10244 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1484:
/* Line 1792 of yacc.c  */
#line 10249 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1485:
/* Line 1792 of yacc.c  */
#line 10255 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1486:
/* Line 1792 of yacc.c  */
#line 10263 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1487:
/* Line 1792 of yacc.c  */
#line 10264 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1488:
/* Line 1792 of yacc.c  */
#line 10268 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1489:
/* Line 1792 of yacc.c  */
#line 10269 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1490:
/* Line 1792 of yacc.c  */
#line 10274 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (4)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (4)].item));
          }
    break;

  case 1491:
/* Line 1792 of yacc.c  */
#line 10282 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(3) - (5)].item));
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(5) - (5)].item));
            (yyval.item_list)= (yyvsp[(1) - (5)].item_list);
          }
    break;

  case 1493:
/* Line 1792 of yacc.c  */
#line 10294 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_ref_join_table((yyvsp[(1) - (1)].node));
          }
    break;

  case 1494:
/* Line 1792 of yacc.c  */
#line 10301 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table_list)= NEW_PTN PT_join_table_list((yyloc), (yyvsp[(1) - (1)].table_list2));
          }
    break;

  case 1496:
/* Line 1792 of yacc.c  */
#line 10315 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.table_list2)= (yyvsp[(3) - (4)].table_list2); }
    break;

  case 1498:
/* Line 1792 of yacc.c  */
#line 10323 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_derived_table_list((yyloc), (yyvsp[(1) - (3)].table_list2), (yyvsp[(3) - (3)].table_list2));
          }
    break;

  case 1499:
/* Line 1792 of yacc.c  */
#line 10343 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NORMAL>((yyvsp[(1) - (3)].table_list2), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].table_list2));
          }
    break;

  case 1500:
/* Line 1792 of yacc.c  */
#line 10347 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_STRAIGHT>((yyvsp[(1) - (3)].table_list2), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].table_list2));
          }
    break;

  case 1501:
/* Line 1792 of yacc.c  */
#line 10353 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_NORMAL>((yyvsp[(1) - (5)].table_list2), (yylsp[(2) - (5)]), (yyvsp[(3) - (5)].table_list2), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1502:
/* Line 1792 of yacc.c  */
#line 10359 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_STRAIGHT>((yyvsp[(1) - (5)].table_list2), (yylsp[(2) - (5)]), (yyvsp[(3) - (5)].table_list2), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1503:
/* Line 1792 of yacc.c  */
#line 10365 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_using<JTT_NORMAL>((yyvsp[(1) - (7)].table_list2), (yylsp[(2) - (7)]), (yyvsp[(3) - (7)].table_list2), (yyvsp[(6) - (7)].string_list));
          }
    break;

  case 1504:
/* Line 1792 of yacc.c  */
#line 10369 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NATURAL>((yyvsp[(1) - (4)].table_list2), (yylsp[(2) - (4)]), (yyvsp[(4) - (4)].table_list2));
          }
    break;

  case 1505:
/* Line 1792 of yacc.c  */
#line 10377 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_LEFT>((yyvsp[(1) - (7)].table_list2), (yylsp[(2) - (7)]), (yyvsp[(5) - (7)].table_list2), (yyvsp[(7) - (7)].item));
          }
    break;

  case 1506:
/* Line 1792 of yacc.c  */
#line 10382 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_using<JTT_LEFT>((yyvsp[(1) - (9)].table_list2), (yylsp[(2) - (9)]), (yyvsp[(5) - (9)].table_list2), (yyvsp[(8) - (9)].string_list));
          }
    break;

  case 1507:
/* Line 1792 of yacc.c  */
#line 10386 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NATURAL_LEFT>((yyvsp[(1) - (6)].table_list2), (yylsp[(2) - (6)]), (yyvsp[(6) - (6)].table_list2));
          }
    break;

  case 1508:
/* Line 1792 of yacc.c  */
#line 10394 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_RIGHT>((yyvsp[(1) - (7)].table_list2), (yylsp[(2) - (7)]), (yyvsp[(5) - (7)].table_list2), (yyvsp[(7) - (7)].item));
          }
    break;

  case 1509:
/* Line 1792 of yacc.c  */
#line 10399 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_using<JTT_RIGHT>((yyvsp[(1) - (9)].table_list2), (yylsp[(2) - (9)]), (yyvsp[(5) - (9)].table_list2), (yyvsp[(8) - (9)].string_list));
          }
    break;

  case 1510:
/* Line 1792 of yacc.c  */
#line 10403 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NATURAL_RIGHT>((yyvsp[(1) - (6)].table_list2), (yylsp[(2) - (6)]), (yyvsp[(6) - (6)].table_list2));
          }
    break;

  case 1511:
/* Line 1792 of yacc.c  */
#line 10409 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1512:
/* Line 1792 of yacc.c  */
#line 10410 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1513:
/* Line 1792 of yacc.c  */
#line 10411 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1514:
/* Line 1792 of yacc.c  */
#line 10419 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.string_list)= NULL; }
    break;

  case 1516:
/* Line 1792 of yacc.c  */
#line 10425 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.string_list)= (yyvsp[(3) - (4)].string_list);
          }
    break;

  case 1517:
/* Line 1792 of yacc.c  */
#line 10440 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_factor_table_ident((yyvsp[(1) - (4)].table), (yyvsp[(2) - (4)].string_list), (yyvsp[(3) - (4)].lex_str_ptr), (yyvsp[(4) - (4)].key_usage_list));
          }
    break;

  case 1518:
/* Line 1792 of yacc.c  */
#line 10444 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_factor_select_sym((yyloc), (yyvsp[(1) - (4)].optimizer_hints), (yyvsp[(2) - (4)].select_options), (yyvsp[(3) - (4)].item_list2), (yyvsp[(4) - (4)].table_expression));
          }
    break;

  case 1519:
/* Line 1792 of yacc.c  */
#line 10466 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_factor_parenthesis((yyvsp[(2) - (4)].table_list2), (yyvsp[(4) - (4)].lex_str_ptr), (yylsp[(4) - (4)]));
          }
    break;

  case 1520:
/* Line 1792 of yacc.c  */
#line 10493 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_select_derived_union_select((yyvsp[(1) - (2)].table_list2), (yyvsp[(2) - (2)].node), (yylsp[(2) - (2)]));
          }
    break;

  case 1521:
/* Line 1792 of yacc.c  */
#line 10497 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_select_derived_union_union((yyvsp[(1) - (4)].table_list2), (yylsp[(2) - (4)]), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].select_lex2));
          }
    break;

  case 1522:
/* Line 1792 of yacc.c  */
#line 10504 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: remove this semantic action (currently this removal
              adds shift/reduce conflict)
            */
          }
    break;

  case 1523:
/* Line 1792 of yacc.c  */
#line 10511 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_part2_derived)= NEW_PTN PT_select_part2_derived((yyvsp[(2) - (3)].ulonglong_number), (yyvsp[(3) - (3)].item_list2));
          }
    break;

  case 1524:
/* Line 1792 of yacc.c  */
#line 10519 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_select_derived((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].table_list2));
          }
    break;

  case 1525:
/* Line 1792 of yacc.c  */
#line 10525 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1526:
/* Line 1792 of yacc.c  */
#line 10526 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1527:
/* Line 1792 of yacc.c  */
#line 10531 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
    break;

  case 1528:
/* Line 1792 of yacc.c  */
#line 10534 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
    break;

  case 1529:
/* Line 1792 of yacc.c  */
#line 10535 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
    break;

  case 1530:
/* Line 1792 of yacc.c  */
#line 10536 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
    break;

  case 1531:
/* Line 1792 of yacc.c  */
#line 10540 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
    break;

  case 1532:
/* Line 1792 of yacc.c  */
#line 10541 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
    break;

  case 1533:
/* Line 1792 of yacc.c  */
#line 10547 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), (yyvsp[(1) - (6)].index_hint), (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1534:
/* Line 1792 of yacc.c  */
#line 10553 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), INDEX_HINT_USE, (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1536:
/* Line 1792 of yacc.c  */
#line 10562 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (2)].key_usage_list)->concat((yyvsp[(1) - (2)].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[(2) - (2)].key_usage_list);
          }
    break;

  case 1537:
/* Line 1792 of yacc.c  */
#line 10569 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1540:
/* Line 1792 of yacc.c  */
#line 10579 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_list)= new (YYTHD->mem_root) List<Index_hint>;
            Index_hint *hint= new (YYTHD->mem_root) Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
    break;

  case 1542:
/* Line 1792 of yacc.c  */
#line 10590 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_element)= new (YYTHD->mem_root) Index_hint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1543:
/* Line 1792 of yacc.c  */
#line 10596 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_element)= new (YYTHD->mem_root) Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1544:
/* Line 1792 of yacc.c  */
#line 10605 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_list)= new (YYTHD->mem_root) List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[(1) - (1)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1545:
/* Line 1792 of yacc.c  */
#line 10611 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[(3) - (3)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1546:
/* Line 1792 of yacc.c  */
#line 10619 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.string_list)= new List<String>))
              MYSQL_YYABORT;
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s);
          }
    break;

  case 1547:
/* Line 1792 of yacc.c  */
#line 10630 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(3) - (3)].lex_str).str,
                                                    (yyvsp[(3) - (3)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyvsp[(1) - (3)].string_list)->push_back(s);
            (yyval.string_list)= (yyvsp[(1) - (3)].string_list);
          }
    break;

  case 1548:
/* Line 1792 of yacc.c  */
#line 10642 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1549:
/* Line 1792 of yacc.c  */
#line 10643 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1550:
/* Line 1792 of yacc.c  */
#line 10644 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1551:
/* Line 1792 of yacc.c  */
#line 10645 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1552:
/* Line 1792 of yacc.c  */
#line 10646 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1553:
/* Line 1792 of yacc.c  */
#line 10647 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1554:
/* Line 1792 of yacc.c  */
#line 10648 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1555:
/* Line 1792 of yacc.c  */
#line 10649 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1556:
/* Line 1792 of yacc.c  */
#line 10650 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1557:
/* Line 1792 of yacc.c  */
#line 10651 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1558:
/* Line 1792 of yacc.c  */
#line 10652 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1559:
/* Line 1792 of yacc.c  */
#line 10653 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1560:
/* Line 1792 of yacc.c  */
#line 10657 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1561:
/* Line 1792 of yacc.c  */
#line 10658 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1562:
/* Line 1792 of yacc.c  */
#line 10659 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1563:
/* Line 1792 of yacc.c  */
#line 10660 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1564:
/* Line 1792 of yacc.c  */
#line 10661 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1565:
/* Line 1792 of yacc.c  */
#line 10662 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1566:
/* Line 1792 of yacc.c  */
#line 10663 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1567:
/* Line 1792 of yacc.c  */
#line 10664 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1568:
/* Line 1792 of yacc.c  */
#line 10665 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1569:
/* Line 1792 of yacc.c  */
#line 10669 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
    break;

  case 1570:
/* Line 1792 of yacc.c  */
#line 10670 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
    break;

  case 1571:
/* Line 1792 of yacc.c  */
#line 10671 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1572:
/* Line 1792 of yacc.c  */
#line 10672 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1576:
/* Line 1792 of yacc.c  */
#line 10682 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str_ptr)=0; }
    break;

  case 1577:
/* Line 1792 of yacc.c  */
#line 10684 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[(2) - (2)].lex_str),sizeof(LEX_STRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1580:
/* Line 1792 of yacc.c  */
#line 10697 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1581:
/* Line 1792 of yacc.c  */
#line 10699 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new PTI_context<CTX_WHERE>((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1582:
/* Line 1792 of yacc.c  */
#line 10705 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1583:
/* Line 1792 of yacc.c  */
#line 10707 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new PTI_context<CTX_HAVING>((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1584:
/* Line 1792 of yacc.c  */
#line 10713 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1585:
/* Line 1792 of yacc.c  */
#line 10714 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1586:
/* Line 1792 of yacc.c  */
#line 10722 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.group)= NULL; }
    break;

  case 1587:
/* Line 1792 of yacc.c  */
#line 10724 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[(3) - (4)].order_list), (yyvsp[(4) - (4)].olap_type));
          }
    break;

  case 1588:
/* Line 1792 of yacc.c  */
#line 10731 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1589:
/* Line 1792 of yacc.c  */
#line 10736 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1590:
/* Line 1792 of yacc.c  */
#line 10745 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
    break;

  case 1591:
/* Line 1792 of yacc.c  */
#line 10746 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= CUBE_TYPE; }
    break;

  case 1592:
/* Line 1792 of yacc.c  */
#line 10754 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= ROLLUP_TYPE; }
    break;

  case 1596:
/* Line 1792 of yacc.c  */
#line 10779 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (2)].item), &(yyvsp[(1) - (2)].item));

            THD *thd= YYTHD;
            ORDER *order= (ORDER *) thd->alloc(sizeof(ORDER));
            if (order == NULL)
              MYSQL_YYABORT;
            order->item_ptr= (yyvsp[(1) - (2)].item);
            order->direction= ((yyvsp[(2) - (2)].num) == 1) ? ORDER::ORDER_ASC : ORDER::ORDER_DESC;
            order->is_position= false;
            add_order_to_list(thd, order);
          }
    break;

  case 1597:
/* Line 1792 of yacc.c  */
#line 10798 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.order)= NULL; }
    break;

  case 1599:
/* Line 1792 of yacc.c  */
#line 10804 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[(3) - (3)].order_list));
          }
    break;

  case 1600:
/* Line 1792 of yacc.c  */
#line 10811 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1601:
/* Line 1792 of yacc.c  */
#line 10816 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1602:
/* Line 1792 of yacc.c  */
#line 10825 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num) =  1; }
    break;

  case 1603:
/* Line 1792 of yacc.c  */
#line 10826 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num) =1; }
    break;

  case 1604:
/* Line 1792 of yacc.c  */
#line 10827 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num) =0; }
    break;

  case 1605:
/* Line 1792 of yacc.c  */
#line 10831 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.limit_clause)= NULL; }
    break;

  case 1607:
/* Line 1792 of yacc.c  */
#line 10837 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[(2) - (2)].limit_options));
          }
    break;

  case 1608:
/* Line 1792 of yacc.c  */
#line 10844 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (1)].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1609:
/* Line 1792 of yacc.c  */
#line 10850 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).is_offset_first= true;
          }
    break;

  case 1610:
/* Line 1792 of yacc.c  */
#line 10856 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1611:
/* Line 1792 of yacc.c  */
#line 10865 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), (yyvsp[(1) - (1)].lex_str), (yylsp[(1) - (1)]).raw);
          }
    break;

  case 1612:
/* Line 1792 of yacc.c  */
#line 10869 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[(1) - (1)].param_marker));
          }
    break;

  case 1613:
/* Line 1792 of yacc.c  */
#line 10873 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1614:
/* Line 1792 of yacc.c  */
#line 10877 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1615:
/* Line 1792 of yacc.c  */
#line 10881 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1616:
/* Line 1792 of yacc.c  */
#line 10887 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1617:
/* Line 1792 of yacc.c  */
#line 10888 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1618:
/* Line 1792 of yacc.c  */
#line 10892 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1619:
/* Line 1792 of yacc.c  */
#line 10893 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1620:
/* Line 1792 of yacc.c  */
#line 10894 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1621:
/* Line 1792 of yacc.c  */
#line 10895 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1622:
/* Line 1792 of yacc.c  */
#line 10896 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1623:
/* Line 1792 of yacc.c  */
#line 10897 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1624:
/* Line 1792 of yacc.c  */
#line 10901 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1625:
/* Line 1792 of yacc.c  */
#line 10902 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1626:
/* Line 1792 of yacc.c  */
#line 10903 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1627:
/* Line 1792 of yacc.c  */
#line 10904 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1628:
/* Line 1792 of yacc.c  */
#line 10905 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1629:
/* Line 1792 of yacc.c  */
#line 10909 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1630:
/* Line 1792 of yacc.c  */
#line 10910 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1631:
/* Line 1792 of yacc.c  */
#line 10911 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1632:
/* Line 1792 of yacc.c  */
#line 10912 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1633:
/* Line 1792 of yacc.c  */
#line 10913 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1634:
/* Line 1792 of yacc.c  */
#line 10917 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1635:
/* Line 1792 of yacc.c  */
#line 10918 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1636:
/* Line 1792 of yacc.c  */
#line 10919 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1637:
/* Line 1792 of yacc.c  */
#line 10920 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1638:
/* Line 1792 of yacc.c  */
#line 10925 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { my_syntax_error(ER(ER_ONLY_INTEGERS_ALLOWED)); }
    break;

  case 1641:
/* Line 1792 of yacc.c  */
#line 10934 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.procedure_analyse)= NULL; }
    break;

  case 1642:
/* Line 1792 of yacc.c  */
#line 10937 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse)= NEW_PTN PT_procedure_analyse((yyvsp[(4) - (5)].procedure_analyse_params));
          }
    break;

  case 1643:
/* Line 1792 of yacc.c  */
#line 10944 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse_params).max_tree_elements= Proc_analyse_params::default_max_tree_elements;
            (yyval.procedure_analyse_params).max_treemem= Proc_analyse_params::default_max_treemem;
          }
    break;

  case 1644:
/* Line 1792 of yacc.c  */
#line 10949 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse_params).max_tree_elements= static_cast<uint>((yyvsp[(1) - (1)].ulonglong_number));
            (yyval.procedure_analyse_params).max_treemem= Proc_analyse_params::default_max_treemem;
          }
    break;

  case 1645:
/* Line 1792 of yacc.c  */
#line 10954 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse_params).max_tree_elements= static_cast<uint>((yyvsp[(1) - (3)].ulonglong_number));
            (yyval.procedure_analyse_params).max_treemem= static_cast<uint>((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 1646:
/* Line 1792 of yacc.c  */
#line 10962 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            int error;
            (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error);
            if (error != 0)
            {
              my_error(ER_WRONG_PARAMETERS_TO_PROCEDURE, MYF(0), "ANALYSE");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1647:
/* Line 1792 of yacc.c  */
#line 10975 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_list)= (yyvsp[(1) - (3)].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(3) - (3)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1648:
/* Line 1792 of yacc.c  */
#line 10981 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list;
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(1) - (1)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1649:
/* Line 1792 of yacc.c  */
#line 10990 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1650:
/* Line 1792 of yacc.c  */
#line 10994 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1651:
/* Line 1792 of yacc.c  */
#line 11000 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.into_destination)= NULL; }
    break;

  case 1653:
/* Line 1792 of yacc.c  */
#line 11006 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= (yyvsp[(2) - (2)].into_destination);
          }
    break;

  case 1654:
/* Line 1792 of yacc.c  */
#line 11015 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyvsp[(2) - (5)].lex_str), (yyvsp[(3) - (5)].charset), (yyvsp[(4) - (5)].field_separators), (yyvsp[(5) - (5)].line_separators));
          }
    break;

  case 1655:
/* Line 1792 of yacc.c  */
#line 11019 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1656:
/* Line 1792 of yacc.c  */
#line 11022 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.into_destination)= (yyvsp[(1) - (1)].select_var_list); }
    break;

  case 1657:
/* Line 1792 of yacc.c  */
#line 11031 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select)= NEW_PTN PT_select(
                  NEW_PTN PT_select_init2(NULL,
                    NEW_PTN PT_select_part2(
                      NEW_PTN PT_select_options_and_item_list((yyvsp[(2) - (3)].select_options), (yyvsp[(3) - (3)].item_list2))), NULL),
                                                              SQLCOM_DO);
          }
    break;

  case 1658:
/* Line 1792 of yacc.c  */
#line 11042 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1659:
/* Line 1792 of yacc.c  */
#line 11054 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[(2) - (4)].num);
            lex->drop_if_exists= (yyvsp[(4) - (4)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1660:
/* Line 1792 of yacc.c  */
#line 11063 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1661:
/* Line 1792 of yacc.c  */
#line 11064 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1662:
/* Line 1792 of yacc.c  */
#line 11065 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (6)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= Alter_info::ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad);
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(5) - (6)].table), NULL,
                                                        TL_OPTION_UPDATING,
                                                        TL_READ_NO_INSERT,
                                                        MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
          }
    break;

  case 1663:
/* Line 1792 of yacc.c  */
#line 11080 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1664:
/* Line 1792 of yacc.c  */
#line 11082 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[(3) - (4)].num);
            lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1665:
/* Line 1792 of yacc.c  */
#line 11089 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[(4) - (6)].lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[(4) - (6)].lex_str), FALSE) != IDENT_NAME_OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(6) - (6)].lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (6)].num);
            spname= new sp_name(to_lex_cstring((yyvsp[(4) - (6)].lex_str)), (yyvsp[(6) - (6)].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1666:
/* Line 1792 of yacc.c  */
#line 11112 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(4) - (4)].lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            spname= new sp_name(to_lex_cstring(db), (yyvsp[(4) - (4)].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1667:
/* Line 1792 of yacc.c  */
#line 11144 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1668:
/* Line 1792 of yacc.c  */
#line 11156 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[(3) - (5)].num);
          }
    break;

  case 1669:
/* Line 1792 of yacc.c  */
#line 11162 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[(3) - (3)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1670:
/* Line 1792 of yacc.c  */
#line 11170 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1671:
/* Line 1792 of yacc.c  */
#line 11172 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
    break;

  case 1672:
/* Line 1792 of yacc.c  */
#line 11178 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1673:
/* Line 1792 of yacc.c  */
#line 11185 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
    break;

  case 1674:
/* Line 1792 of yacc.c  */
#line 11190 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
    break;

  case 1675:
/* Line 1792 of yacc.c  */
#line 11195 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_drop_server((yyvsp[(4) - (4)].lex_str), (yyvsp[(3) - (4)].num));
          }
    break;

  case 1678:
/* Line 1792 of yacc.c  */
#line 11209 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1679:
/* Line 1792 of yacc.c  */
#line 11220 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident_list).init(YYTHD->mem_root);
            if ((yyval.table_ident_list).push_back((yyvsp[(1) - (1)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1680:
/* Line 1792 of yacc.c  */
#line 11226 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident_list)= (yyvsp[(1) - (3)].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[(3) - (3)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1681:
/* Line 1792 of yacc.c  */
#line 11234 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1682:
/* Line 1792 of yacc.c  */
#line 11235 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1683:
/* Line 1792 of yacc.c  */
#line 11239 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1684:
/* Line 1792 of yacc.c  */
#line 11240 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1692:
/* Line 1792 of yacc.c  */
#line 11270 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].lock_type), (yyvsp[(3) - (8)].is_not_empty), (yyvsp[(5) - (8)].table), (yyvsp[(6) - (8)].string_list),
                                  (yyvsp[(7) - (8)].column_row_value_list_pair).column_list, (yyvsp[(7) - (8)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[(8) - (8)].column_value_list_pair).column_list, (yyvsp[(8) - (8)].column_value_list_pair).value_list);
          }
    break;

  case 1693:
/* Line 1792 of yacc.c  */
#line 11285 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[(8) - (9)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (9)].optimizer_hints), (yyvsp[(2) - (9)].lock_type), (yyvsp[(3) - (9)].is_not_empty), (yyvsp[(5) - (9)].table), (yyvsp[(6) - (9)].string_list),
                                  (yyvsp[(8) - (9)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[(9) - (9)].column_value_list_pair).column_list, (yyvsp[(9) - (9)].column_value_list_pair).value_list);
          }
    break;

  case 1694:
/* Line 1792 of yacc.c  */
#line 11302 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].lock_type), (yyvsp[(3) - (8)].is_not_empty), (yyvsp[(5) - (8)].table), (yyvsp[(6) - (8)].string_list),
                                  (yyvsp[(7) - (8)].insert_from_subquery).column_list, NULL,
                                  (yyvsp[(7) - (8)].insert_from_subquery).insert_query_expression,
                                  (yyvsp[(8) - (8)].column_value_list_pair).column_list, (yyvsp[(8) - (8)].column_value_list_pair).value_list);
          }
    break;

  case 1695:
/* Line 1792 of yacc.c  */
#line 11317 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].column_row_value_list_pair).column_list, (yyvsp[(6) - (6)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL, NULL);
          }
    break;

  case 1696:
/* Line 1792 of yacc.c  */
#line 11330 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[(7) - (7)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (7)].optimizer_hints), (yyvsp[(2) - (7)].lock_type), false, (yyvsp[(4) - (7)].table), (yyvsp[(5) - (7)].string_list),
                                  (yyvsp[(7) - (7)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL, NULL);
          }
    break;

  case 1697:
/* Line 1792 of yacc.c  */
#line 11345 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].insert_from_subquery).column_list, NULL,
                                  (yyvsp[(6) - (6)].insert_from_subquery).insert_query_expression,
                                  NULL, NULL);
          }
    break;

  case 1698:
/* Line 1792 of yacc.c  */
#line 11354 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
    break;

  case 1699:
/* Line 1792 of yacc.c  */
#line 11355 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1700:
/* Line 1792 of yacc.c  */
#line 11357 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER(ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
    break;

  case 1701:
/* Line 1792 of yacc.c  */
#line 11365 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1702:
/* Line 1792 of yacc.c  */
#line 11369 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[(1) - (1)].lock_type); }
    break;

  case 1703:
/* Line 1792 of yacc.c  */
#line 11371 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER(ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
    break;

  case 1706:
/* Line 1792 of yacc.c  */
#line 11388 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(1) - (1)].values_list);
          }
    break;

  case 1707:
/* Line 1792 of yacc.c  */
#line 11393 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(3) - (3)].values_list);
          }
    break;

  case 1708:
/* Line 1792 of yacc.c  */
#line 11398 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(4) - (4)].values_list);
          }
    break;

  case 1709:
/* Line 1792 of yacc.c  */
#line 11406 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_from_subquery).column_list= NEW_PTN PT_item_list;
            (yyval.insert_from_subquery).insert_query_expression= (yyvsp[(1) - (1)].insert_query_expression);
          }
    break;

  case 1710:
/* Line 1792 of yacc.c  */
#line 11411 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_from_subquery).column_list= NEW_PTN PT_item_list;
            (yyval.insert_from_subquery).insert_query_expression= (yyvsp[(3) - (3)].insert_query_expression);
          }
    break;

  case 1711:
/* Line 1792 of yacc.c  */
#line 11416 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_from_subquery).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.insert_from_subquery).insert_query_expression= (yyvsp[(4) - (4)].insert_query_expression);
          }
    break;

  case 1712:
/* Line 1792 of yacc.c  */
#line 11424 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1713:
/* Line 1792 of yacc.c  */
#line 11430 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1714:
/* Line 1792 of yacc.c  */
#line 11439 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.values_list)= (yyvsp[(2) - (2)].values_list);
          }
    break;

  case 1715:
/* Line 1792 of yacc.c  */
#line 11446 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression)= NEW_PTN PT_insert_query_expression(false, (yyvsp[(1) - (2)].create_select), (yyvsp[(2) - (2)].union_list));
          }
    break;

  case 1716:
/* Line 1792 of yacc.c  */
#line 11450 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression)= NEW_PTN PT_insert_query_expression(true, (yyvsp[(2) - (4)].create_select), (yyvsp[(4) - (4)].node));
          }
    break;

  case 1719:
/* Line 1792 of yacc.c  */
#line 11462 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.values_list)->push_back(&(yyvsp[(3) - (3)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 1720:
/* Line 1792 of yacc.c  */
#line 11467 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[(1) - (1)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 1721:
/* Line 1792 of yacc.c  */
#line 11476 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1722:
/* Line 1792 of yacc.c  */
#line 11477 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1723:
/* Line 1792 of yacc.c  */
#line 11481 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1724:
/* Line 1792 of yacc.c  */
#line 11482 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1725:
/* Line 1792 of yacc.c  */
#line 11486 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1726:
/* Line 1792 of yacc.c  */
#line 11491 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1728:
/* Line 1792 of yacc.c  */
#line 11501 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1729:
/* Line 1792 of yacc.c  */
#line 11507 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1731:
/* Line 1792 of yacc.c  */
#line 11517 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
    break;

  case 1732:
/* Line 1792 of yacc.c  */
#line 11524 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
    break;

  case 1733:
/* Line 1792 of yacc.c  */
#line 11529 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(5) - (5)].column_value_list_pair);
          }
    break;

  case 1734:
/* Line 1792 of yacc.c  */
#line 11546 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_update((yyvsp[(1) - (9)].optimizer_hints), (yyvsp[(2) - (9)].lock_type), (yyvsp[(3) - (9)].is_not_empty), (yyvsp[(4) - (9)].join_table_list), (yyvsp[(6) - (9)].column_value_list_pair).column_list, (yyvsp[(6) - (9)].column_value_list_pair).value_list,
                                  (yyvsp[(7) - (9)].item), (yyvsp[(8) - (9)].order), (yyvsp[(9) - (9)].item));
          }
    break;

  case 1735:
/* Line 1792 of yacc.c  */
#line 11554 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(1) - (3)].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[(3) - (3)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(3) - (3)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1736:
/* Line 1792 of yacc.c  */
#line 11561 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[(1) - (1)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(1) - (1)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1737:
/* Line 1792 of yacc.c  */
#line 11573 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_pair).column= (yyvsp[(1) - (3)].item);
            (yyval.column_value_pair).value= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1738:
/* Line 1792 of yacc.c  */
#line 11580 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1739:
/* Line 1792 of yacc.c  */
#line 11581 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1740:
/* Line 1792 of yacc.c  */
#line 11595 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete(YYTHD->mem_root, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].num), (yyvsp[(4) - (8)].table), (yyvsp[(5) - (8)].string_list), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].order), (yyvsp[(8) - (8)].item));
          }
    break;

  case 1741:
/* Line 1792 of yacc.c  */
#line 11604 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete((yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].num), (yyvsp[(3) - (6)].table_ident_list), (yyvsp[(5) - (6)].join_table_list), (yyvsp[(6) - (6)].item));
          }
    break;

  case 1742:
/* Line 1792 of yacc.c  */
#line 11614 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete((yyvsp[(1) - (7)].optimizer_hints), (yyvsp[(2) - (7)].num), (yyvsp[(4) - (7)].table_ident_list), (yyvsp[(6) - (7)].join_table_list), (yyvsp[(7) - (7)].item));
          }
    break;

  case 1745:
/* Line 1792 of yacc.c  */
#line 11625 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1746:
/* Line 1792 of yacc.c  */
#line 11626 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].opt_delete_option) | (yyvsp[(2) - (2)].num); }
    break;

  case 1747:
/* Line 1792 of yacc.c  */
#line 11630 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_QUICK; }
    break;

  case 1748:
/* Line 1792 of yacc.c  */
#line 11631 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
    break;

  case 1749:
/* Line 1792 of yacc.c  */
#line 11632 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
    break;

  case 1750:
/* Line 1792 of yacc.c  */
#line 11637 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1751:
/* Line 1792 of yacc.c  */
#line 11645 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1758:
/* Line 1792 of yacc.c  */
#line 11670 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
    break;

  case 1759:
/* Line 1792 of yacc.c  */
#line 11674 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
    break;

  case 1760:
/* Line 1792 of yacc.c  */
#line 11678 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
    break;

  case 1761:
/* Line 1792 of yacc.c  */
#line 11682 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
    break;

  case 1762:
/* Line 1792 of yacc.c  */
#line 11686 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
    break;

  case 1763:
/* Line 1792 of yacc.c  */
#line 11690 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
    break;

  case 1764:
/* Line 1792 of yacc.c  */
#line 11694 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
    break;

  case 1765:
/* Line 1792 of yacc.c  */
#line 11698 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
    break;

  case 1766:
/* Line 1792 of yacc.c  */
#line 11702 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
    break;

  case 1767:
/* Line 1792 of yacc.c  */
#line 11709 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
      Lex->query_id= 0;
    }
    break;

  case 1768:
/* Line 1792 of yacc.c  */
#line 11713 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
      int error;
      Lex->query_id= static_cast<my_thread_id>(my_strtoll10((yyvsp[(3) - (3)].lex_str).str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    }
    break;

  case 1769:
/* Line 1792 of yacc.c  */
#line 11725 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
          }
    break;

  case 1771:
/* Line 1792 of yacc.c  */
#line 11734 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
               MYSQL_YYABORT;
           }
    break;

  case 1772:
/* Line 1792 of yacc.c  */
#line 11741 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
    break;

  case 1773:
/* Line 1792 of yacc.c  */
#line 11749 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
    break;

  case 1774:
/* Line 1792 of yacc.c  */
#line 11757 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[(2) - (3)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
    break;

  case 1775:
/* Line 1792 of yacc.c  */
#line 11765 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
    break;

  case 1776:
/* Line 1792 of yacc.c  */
#line 11773 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1777:
/* Line 1792 of yacc.c  */
#line 11781 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
    break;

  case 1778:
/* Line 1792 of yacc.c  */
#line 11788 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[(2) - (3)].db_type); }
    break;

  case 1779:
/* Line 1792 of yacc.c  */
#line 11790 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->create_info.db_type= NULL; }
    break;

  case 1780:
/* Line 1792 of yacc.c  */
#line 11792 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[(5) - (6)].simple_string))
              (yyvsp[(4) - (6)].table)->change_db((yyvsp[(5) - (6)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(4) - (6)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1781:
/* Line 1792 of yacc.c  */
#line 11801 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1782:
/* Line 1792 of yacc.c  */
#line 11805 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1783:
/* Line 1792 of yacc.c  */
#line 11809 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1784:
/* Line 1792 of yacc.c  */
#line 11814 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (6)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(6) - (6)].limit_clause));
          }
    break;

  case 1785:
/* Line 1792 of yacc.c  */
#line 11819 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
    break;

  case 1786:
/* Line 1792 of yacc.c  */
#line 11824 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(6) - (7)].limit_clause));
          }
    break;

  case 1787:
/* Line 1792 of yacc.c  */
#line 11833 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(5) - (5)].item) != NULL)
              ITEMIZE((yyvsp[(5) - (5)].item), &(yyvsp[(5) - (5)].item));
            Select->set_where_cond((yyvsp[(5) - (5)].item));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[(4) - (5)].simple_string))
              (yyvsp[(3) - (5)].table)->change_db((yyvsp[(4) - (5)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(3) - (5)].table), SCH_STATISTICS))
              MYSQL_YYABORT;
          }
    break;

  case 1788:
/* Line 1792 of yacc.c  */
#line 11846 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
    break;

  case 1789:
/* Line 1792 of yacc.c  */
#line 11853 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
    break;

  case 1790:
/* Line 1792 of yacc.c  */
#line 11858 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            create_select_for_variable(&pc, "warning_count");
          }
    break;

  case 1791:
/* Line 1792 of yacc.c  */
#line 11864 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            create_select_for_variable(&pc, "error_count");
          }
    break;

  case 1792:
/* Line 1792 of yacc.c  */
#line 11870 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(2) - (2)].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
    break;

  case 1793:
/* Line 1792 of yacc.c  */
#line 11878 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(2) - (2)].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
    break;

  case 1794:
/* Line 1792 of yacc.c  */
#line 11886 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER(ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
    break;

  case 1795:
/* Line 1792 of yacc.c  */
#line 11894 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(4) - (4)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(4) - (4)].limit_clause));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
    break;

  case 1796:
/* Line 1792 of yacc.c  */
#line 11904 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (show_compatibility_56)
            {
              /* 5.6, DEPRECATED */
              lex->sql_command= SQLCOM_SHOW_STATUS;
              lex->option_type= (yyvsp[(1) - (3)].var_type);
              if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
                MYSQL_YYABORT;
            }
            else
            {
              Item *where_cond= Select->where_cond();
              Select->set_where_cond(NULL);

              if ((yyvsp[(1) - (3)].var_type) == OPT_SESSION)
              {
                /* 5.7, SUPPORTED */
                if (build_show_session_status((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
              else
              {
                /* 5.7, SUPPORTED */
                if (build_show_global_status((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
            }
          }
    break;

  case 1797:
/* Line 1792 of yacc.c  */
#line 11935 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
    break;

  case 1798:
/* Line 1792 of yacc.c  */
#line 11937 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (show_compatibility_56)
            {
              /* 5.6, DEPRECATED */
              lex->sql_command= SQLCOM_SHOW_VARIABLES;
              lex->option_type= (yyvsp[(1) - (3)].var_type);
              if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
                MYSQL_YYABORT;
            }
            else
            {
              Item *where_cond= Select->where_cond();
              Select->set_where_cond(NULL);

              if ((yyvsp[(1) - (3)].var_type) == OPT_SESSION)
              {
                /* 5.7, SUPPORTED */
                if (build_show_session_variables((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
              else
              {
                /* 5.7, SUPPORTED */
                if (build_show_global_variables((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
            }
          }
    break;

  case 1799:
/* Line 1792 of yacc.c  */
#line 11968 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              MYSQL_YYABORT;
          }
    break;

  case 1800:
/* Line 1792 of yacc.c  */
#line 11975 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              MYSQL_YYABORT;
          }
    break;

  case 1801:
/* Line 1792 of yacc.c  */
#line 11982 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            memset(curr_user, 0, sizeof(st_lex_user));
            lex->grant_user= curr_user;
          }
    break;

  case 1802:
/* Line 1792 of yacc.c  */
#line 11992 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[(3) - (3)].lex_user);
            lex->grant_user->auth= NULL_CSTR;
          }
    break;

  case 1803:
/* Line 1792 of yacc.c  */
#line 11999 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info.options=(yyvsp[(3) - (4)].num);
            Lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1804:
/* Line 1792 of yacc.c  */
#line 12005 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
    break;

  case 1805:
/* Line 1792 of yacc.c  */
#line 12014 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
    break;

  case 1806:
/* Line 1792 of yacc.c  */
#line 12022 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1807:
/* Line 1792 of yacc.c  */
#line 12026 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1808:
/* Line 1792 of yacc.c  */
#line 12030 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1809:
/* Line 1792 of yacc.c  */
#line 12037 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1810:
/* Line 1792 of yacc.c  */
#line 12044 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1811:
/* Line 1792 of yacc.c  */
#line 12050 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1812:
/* Line 1792 of yacc.c  */
#line 12057 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1813:
/* Line 1792 of yacc.c  */
#line 12064 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1814:
/* Line 1792 of yacc.c  */
#line 12069 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1815:
/* Line 1792 of yacc.c  */
#line 12074 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->spname= (yyvsp[(3) - (3)].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
    break;

  case 1816:
/* Line 1792 of yacc.c  */
#line 12079 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=(yyvsp[(4) - (4)].lex_user);
          }
    break;

  case 1817:
/* Line 1792 of yacc.c  */
#line 12088 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
    break;

  case 1818:
/* Line 1792 of yacc.c  */
#line 12090 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
    break;

  case 1819:
/* Line 1792 of yacc.c  */
#line 12092 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
    break;

  case 1824:
/* Line 1792 of yacc.c  */
#line 12106 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1825:
/* Line 1792 of yacc.c  */
#line 12107 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1826:
/* Line 1792 of yacc.c  */
#line 12111 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->verbose=0; }
    break;

  case 1827:
/* Line 1792 of yacc.c  */
#line 12112 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->verbose=1; }
    break;

  case 1830:
/* Line 1792 of yacc.c  */
#line 12121 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1831:
/* Line 1792 of yacc.c  */
#line 12122 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1832:
/* Line 1792 of yacc.c  */
#line 12126 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1833:
/* Line 1792 of yacc.c  */
#line 12127 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[(2) - (2)].ulonglong_number); }
    break;

  case 1835:
/* Line 1792 of yacc.c  */
#line 12133 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1836:
/* Line 1792 of yacc.c  */
#line 12140 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Select->set_where_cond((yyvsp[(2) - (2)].item));
            if ((yyvsp[(2) - (2)].item))
              (yyvsp[(2) - (2)].item)->top_level_item();
          }
    break;

  case 1838:
/* Line 1792 of yacc.c  */
#line 12152 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1839:
/* Line 1792 of yacc.c  */
#line 12159 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (show_compatibility_56)
            {
              /*
                This parsed tree fragment is added as part of a
                SQLCOM_SHOW_STATUS or SQLCOM_SHOW_VARIABLES command.
              */
              ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

              Select->set_where_cond((yyvsp[(2) - (2)].item));
              if ((yyvsp[(2) - (2)].item))
                (yyvsp[(2) - (2)].item)->top_level_item();
            }
            else
            {
              /*
                This parsed tree fragment is used to build a
                SQLCOM_SELECT statement, see sql/sql_show_status.cc
              */
              Select->set_where_cond((yyvsp[(2) - (2)].item));
            }
          }
    break;

  case 1840:
/* Line 1792 of yacc.c  */
#line 12186 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->parsing_place= CTX_SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex->db= NULL;
            lex->verbose= 0;
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(2) - (2)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1841:
/* Line 1792 of yacc.c  */
#line 12196 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_SELECT_LIST);
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1842:
/* Line 1792 of yacc.c  */
#line 12202 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->describe|= DESCRIBE_NORMAL;
          }
    break;

  case 1844:
/* Line 1792 of yacc.c  */
#line 12209 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].select)); }
    break;

  case 1845:
/* Line 1792 of yacc.c  */
#line 12210 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1846:
/* Line 1792 of yacc.c  */
#line 12211 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1847:
/* Line 1792 of yacc.c  */
#line 12212 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1848:
/* Line 1792 of yacc.c  */
#line 12213 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1849:
/* Line 1792 of yacc.c  */
#line 12215 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_EXPLAIN_OTHER;
            if (Lex->sphead)
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "non-standalone EXPLAIN FOR CONNECTION");
              MYSQL_YYABORT;
            }
            Lex->query_id= (my_thread_id)((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 1852:
/* Line 1792 of yacc.c  */
#line 12234 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1853:
/* Line 1792 of yacc.c  */
#line 12239 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "EXTENDED");
          }
    break;

  case 1854:
/* Line 1792 of yacc.c  */
#line 12245 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "PARTITIONS");
          }
    break;

  case 1855:
/* Line 1792 of yacc.c  */
#line 12251 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "JSON"))
            {
              if ((Lex->explain_format= new Explain_format_JSON) == NULL)
                MYSQL_YYABORT;
            }
            else if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "TRADITIONAL"))
            {
              if ((Lex->explain_format= new Explain_format_traditional) == NULL)
                MYSQL_YYABORT;
            }
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1856:
/* Line 1792 of yacc.c  */
#line 12271 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1857:
/* Line 1792 of yacc.c  */
#line 12272 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->wild= (yyvsp[(1) - (1)].string); }
    break;

  case 1858:
/* Line 1792 of yacc.c  */
#line 12274 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1859:
/* Line 1792 of yacc.c  */
#line 12288 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[(2) - (2)].num);
          }
    break;

  case 1860:
/* Line 1792 of yacc.c  */
#line 12295 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1861:
/* Line 1792 of yacc.c  */
#line 12300 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
    break;

  case 1862:
/* Line 1792 of yacc.c  */
#line 12309 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1863:
/* Line 1792 of yacc.c  */
#line 12310 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1865:
/* Line 1792 of yacc.c  */
#line 12315 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1866:
/* Line 1792 of yacc.c  */
#line 12317 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1867:
/* Line 1792 of yacc.c  */
#line 12328 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              my_syntax_error(ER(ER_NO_TABLES_USED));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1868:
/* Line 1792 of yacc.c  */
#line 12336 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1870:
/* Line 1792 of yacc.c  */
#line 12351 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1871:
/* Line 1792 of yacc.c  */
#line 12356 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ERROR_LOG; }
    break;

  case 1872:
/* Line 1792 of yacc.c  */
#line 12358 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ENGINE_LOG; }
    break;

  case 1873:
/* Line 1792 of yacc.c  */
#line 12360 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GENERAL_LOG; }
    break;

  case 1874:
/* Line 1792 of yacc.c  */
#line 12362 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLOW_LOG; }
    break;

  case 1875:
/* Line 1792 of yacc.c  */
#line 12364 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_BINARY_LOG; }
    break;

  case 1876:
/* Line 1792 of yacc.c  */
#line 12366 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_RELAY_LOG; }
    break;

  case 1877:
/* Line 1792 of yacc.c  */
#line 12368 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
    break;

  case 1878:
/* Line 1792 of yacc.c  */
#line 12370 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1879:
/* Line 1792 of yacc.c  */
#line 12372 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1880:
/* Line 1792 of yacc.c  */
#line 12374 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1881:
/* Line 1792 of yacc.c  */
#line 12376 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1882:
/* Line 1792 of yacc.c  */
#line 12378 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1883:
/* Line 1792 of yacc.c  */
#line 12380 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1884:
/* Line 1792 of yacc.c  */
#line 12382 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
    break;

  case 1885:
/* Line 1792 of yacc.c  */
#line 12386 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1886:
/* Line 1792 of yacc.c  */
#line 12387 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1887:
/* Line 1792 of yacc.c  */
#line 12392 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
    break;

  case 1888:
/* Line 1792 of yacc.c  */
#line 12397 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1891:
/* Line 1792 of yacc.c  */
#line 12406 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1893:
/* Line 1792 of yacc.c  */
#line 12408 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1894:
/* Line 1792 of yacc.c  */
#line 12409 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE;}
    break;

  case 1895:
/* Line 1792 of yacc.c  */
#line 12413 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= false; }
    break;

  case 1896:
/* Line 1792 of yacc.c  */
#line 12414 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= true; }
    break;

  case 1897:
/* Line 1792 of yacc.c  */
#line 12419 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
    break;

  case 1898:
/* Line 1792 of yacc.c  */
#line 12425 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1900:
/* Line 1792 of yacc.c  */
#line 12434 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->to_log = (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1901:
/* Line 1792 of yacc.c  */
#line 12438 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front((yyvsp[(2) - (2)].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
    break;

  case 1902:
/* Line 1792 of yacc.c  */
#line 12452 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front((yyvsp[(3) - (3)].item));
            lex->sql_command= SQLCOM_KILL;
          }
    break;

  case 1903:
/* Line 1792 of yacc.c  */
#line 12463 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1904:
/* Line 1792 of yacc.c  */
#line 12464 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1905:
/* Line 1792 of yacc.c  */
#line 12465 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1906:
/* Line 1792 of yacc.c  */
#line 12472 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1907:
/* Line 1792 of yacc.c  */
#line 12483 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0),
                       (yyvsp[(2) - (2)].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1908:
/* Line 1792 of yacc.c  */
#line 12495 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[(5) - (7)].num);
            lex->duplicates= DUP_ERROR;
            lex->set_ignore(false);
            if (!(lex->exchange= new sql_exchange((yyvsp[(7) - (7)].lex_str).str, 0, (yyvsp[(2) - (7)].filetype))))
              MYSQL_YYABORT;
          }
    break;

  case 1909:
/* Line 1792 of yacc.c  */
#line 12505 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            /* Fix lock for LOAD DATA CONCURRENT REPLACE */
            if (lex->duplicates == DUP_REPLACE && (yyvsp[(4) - (13)].lock_type) == TL_WRITE_CONCURRENT_INSERT)
              (yyvsp[(4) - (13)].lock_type)= TL_WRITE_DEFAULT;
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(12) - (13)].table), NULL, TL_OPTION_UPDATING,
                                           (yyvsp[(4) - (13)].lock_type), (yyvsp[(4) - (13)].lock_type) == TL_WRITE_LOW_PRIORITY ?
                                               MDL_SHARED_WRITE_LOW_PRIO :
                                               MDL_SHARED_WRITE, NULL, (yyvsp[(13) - (13)].string_list)))
              MYSQL_YYABORT;
            lex->load_field_list.empty();
            lex->load_update_list.empty();
            lex->load_value_list.empty();
            /* We can't give an error in the middle when using LOCAL files */
            if (lex->local_file && lex->duplicates == DUP_ERROR)
              lex->set_ignore(true);
          }
    break;

  case 1910:
/* Line 1792 of yacc.c  */
#line 12523 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(15) - (15)].charset); }
    break;

  case 1911:
/* Line 1792 of yacc.c  */
#line 12527 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->exchange->field.merge_field_separators((yyvsp[(18) - (22)].field_separators));
            Lex->exchange->line.merge_line_separators((yyvsp[(19) - (22)].line_separators));
          }
    break;

  case 1912:
/* Line 1792 of yacc.c  */
#line 12534 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_CSV; }
    break;

  case 1913:
/* Line 1792 of yacc.c  */
#line 12535 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_XML; }
    break;

  case 1914:
/* Line 1792 of yacc.c  */
#line 12539 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0;}
    break;

  case 1915:
/* Line 1792 of yacc.c  */
#line 12540 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1;}
    break;

  case 1916:
/* Line 1792 of yacc.c  */
#line 12544 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1917:
/* Line 1792 of yacc.c  */
#line 12545 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
    break;

  case 1918:
/* Line 1792 of yacc.c  */
#line 12546 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1919:
/* Line 1792 of yacc.c  */
#line 12550 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_ERROR; }
    break;

  case 1920:
/* Line 1792 of yacc.c  */
#line 12551 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_REPLACE; }
    break;

  case 1921:
/* Line 1792 of yacc.c  */
#line 12552 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->set_ignore(true); }
    break;

  case 1922:
/* Line 1792 of yacc.c  */
#line 12556 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.field_separators).cleanup(); }
    break;

  case 1923:
/* Line 1792 of yacc.c  */
#line 12557 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.field_separators)= (yyvsp[(2) - (2)].field_separators); }
    break;

  case 1924:
/* Line 1792 of yacc.c  */
#line 12562 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators)= (yyvsp[(1) - (2)].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[(2) - (2)].field_separators));
          }
    break;

  case 1926:
/* Line 1792 of yacc.c  */
#line 12571 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1927:
/* Line 1792 of yacc.c  */
#line 12576 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(4) - (4)].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
    break;

  case 1928:
/* Line 1792 of yacc.c  */
#line 12582 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1929:
/* Line 1792 of yacc.c  */
#line 12587 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1930:
/* Line 1792 of yacc.c  */
#line 12594 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.line_separators).cleanup(); }
    break;

  case 1931:
/* Line 1792 of yacc.c  */
#line 12595 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.line_separators)= (yyvsp[(2) - (2)].line_separators); }
    break;

  case 1932:
/* Line 1792 of yacc.c  */
#line 12600 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators)= (yyvsp[(1) - (2)].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[(2) - (2)].line_separators));
          }
    break;

  case 1934:
/* Line 1792 of yacc.c  */
#line 12609 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1935:
/* Line 1792 of yacc.c  */
#line 12614 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1936:
/* Line 1792 of yacc.c  */
#line 12621 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1937:
/* Line 1792 of yacc.c  */
#line 12623 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->exchange->line.line_term = (yyvsp[(4) - (4)].string); }
    break;

  case 1939:
/* Line 1792 of yacc.c  */
#line 12628 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[(2) - (3)].lex_str).str);
          }
    break;

  case 1940:
/* Line 1792 of yacc.c  */
#line 12635 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1941:
/* Line 1792 of yacc.c  */
#line 12637 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1942:
/* Line 1792 of yacc.c  */
#line 12641 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1943:
/* Line 1792 of yacc.c  */
#line 12642 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1944:
/* Line 1792 of yacc.c  */
#line 12643 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1945:
/* Line 1792 of yacc.c  */
#line 12648 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->load_field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1946:
/* Line 1792 of yacc.c  */
#line 12650 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->load_field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1947:
/* Line 1792 of yacc.c  */
#line 12654 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 1948:
/* Line 1792 of yacc.c  */
#line 12656 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_user_var_as_out_param((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1949:
/* Line 1792 of yacc.c  */
#line 12664 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1950:
/* Line 1792 of yacc.c  */
#line 12665 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1953:
/* Line 1792 of yacc.c  */
#line 12675 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (3)].item), &(yyvsp[(1) - (3)].item));
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            LEX *lex= Lex;
            uint length= (uint) ((yylsp[(3) - (3)]).cpp.end - (yylsp[(2) - (3)]).cpp.start);
            String *val= new (YYTHD->mem_root) String((yylsp[(2) - (3)]).cpp.start,
                                                      length,
                                                      YYTHD->charset());
            if (val == NULL)
              MYSQL_YYABORT;
            if (lex->load_update_list.push_back((yyvsp[(1) - (3)].item)) ||
                lex->load_value_list.push_back((yyvsp[(3) - (3)].item)) ||
                lex->load_set_str_list.push_back(val))
                MYSQL_YYABORT;
            (yyvsp[(3) - (3)].item)->item_name.copy((yylsp[(2) - (3)]).cpp.start, length, YYTHD->charset());
          }
    break;

  case 1954:
/* Line 1792 of yacc.c  */
#line 12698 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1955:
/* Line 1792 of yacc.c  */
#line 12703 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1956:
/* Line 1792 of yacc.c  */
#line 12708 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1957:
/* Line 1792 of yacc.c  */
#line 12713 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].text_literal), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1958:
/* Line 1792 of yacc.c  */
#line 12721 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String((yyvsp[(1) - (1)].lex_str).str,
                                             (yyvsp[(1) - (1)].lex_str).length,
                                             YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1959:
/* Line 1792 of yacc.c  */
#line 12729 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING s= Item_hex_string::make_hex_str((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            (yyval.string)= new (YYTHD->mem_root) String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1960:
/* Line 1792 of yacc.c  */
#line 12736 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING s= Item_bin_string::make_bin_str((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            (yyval.string)= new (YYTHD->mem_root) String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1961:
/* Line 1792 of yacc.c  */
#line 12746 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.param_marker)= NEW_PTN Item_param((yyloc),
                                   (uint) ((yylsp[(1) - (1)]).raw.start - YYLIP->get_buf()));
          }
    break;

  case 1962:
/* Line 1792 of yacc.c  */
#line 12753 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 1963:
/* Line 1792 of yacc.c  */
#line 12754 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(2) - (2)].item), &(yyval.item)); }
    break;

  case 1964:
/* Line 1792 of yacc.c  */
#line 12756 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            (yyvsp[(2) - (2)].item)->max_length++;
            (yyval.item)= ((Item_int *)(yyvsp[(2) - (2)].item))->neg();
          }
    break;

  case 1965:
/* Line 1792 of yacc.c  */
#line 12766 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].text_literal); }
    break;

  case 1968:
/* Line 1792 of yacc.c  */
#line 12770 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
            lip->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
    break;

  case 1969:
/* Line 1792 of yacc.c  */
#line 12783 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("FALSE"), 0, 1);
          }
    break;

  case 1970:
/* Line 1792 of yacc.c  */
#line 12787 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("TRUE"), 1, 1);
          }
    break;

  case 1971:
/* Line 1792 of yacc.c  */
#line 12791 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1972:
/* Line 1792 of yacc.c  */
#line 12795 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1973:
/* Line 1792 of yacc.c  */
#line 12799 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1974:
/* Line 1792 of yacc.c  */
#line 12803 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1975:
/* Line 1792 of yacc.c  */
#line 12810 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_num_literal_num((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1976:
/* Line 1792 of yacc.c  */
#line 12814 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_num_literal_num((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1977:
/* Line 1792 of yacc.c  */
#line 12818 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1978:
/* Line 1792 of yacc.c  */
#line 12822 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_decimal((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, YYCSCL);
          }
    break;

  case 1979:
/* Line 1792 of yacc.c  */
#line 12826 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_float((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1980:
/* Line 1792 of yacc.c  */
#line 12834 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
    break;

  case 1981:
/* Line 1792 of yacc.c  */
#line 12838 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
    break;

  case 1982:
/* Line 1792 of yacc.c  */
#line 12842 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
    break;

  case 1985:
/* Line 1792 of yacc.c  */
#line 12861 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), NULL, (yyvsp[(1) - (3)].lex_str).str);
          }
    break;

  case 1986:
/* Line 1792 of yacc.c  */
#line 12865 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), (yyvsp[(1) - (5)].lex_str).str, (yyvsp[(3) - (5)].lex_str).str);
          }
    break;

  case 1987:
/* Line 1792 of yacc.c  */
#line 12872 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].num));
          }
    break;

  case 1988:
/* Line 1792 of yacc.c  */
#line 12879 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1990:
/* Line 1792 of yacc.c  */
#line 12887 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1992:
/* Line 1792 of yacc.c  */
#line 12895 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
          }
    break;

  case 1993:
/* Line 1792 of yacc.c  */
#line 12899 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), NULL, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);
          }
    break;

  case 1994:
/* Line 1792 of yacc.c  */
#line 12903 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[(1) - (5)].lex_str).str, (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
          }
    break;

  case 1995:
/* Line 1792 of yacc.c  */
#line 12909 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1996:
/* Line 1792 of yacc.c  */
#line 12911 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (5)].lex_str).str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, (yyvsp[(3) - (5)].lex_str).str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 1997:
/* Line 1792 of yacc.c  */
#line 12927 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (3)].lex_str).str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 1998:
/* Line 1792 of yacc.c  */
#line 12936 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str);}
    break;

  case 1999:
/* Line 1792 of yacc.c  */
#line 12941 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (1)].lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2000:
/* Line 1792 of yacc.c  */
#line 12947 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
            else {
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (3)].lex_str)), to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
            }
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2001:
/* Line 1792 of yacc.c  */
#line 12957 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /* For Delphi */
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(2) - (2)].lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2002:
/* Line 1792 of yacc.c  */
#line 12967 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (2)].lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2003:
/* Line 1792 of yacc.c  */
#line 12973 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD, to_lex_cstring((yyvsp[(1) - (4)].lex_str)),
                                    to_lex_cstring((yyvsp[(3) - (4)].lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2004:
/* Line 1792 of yacc.c  */
#line 12983 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX_CSTRING db= { any_db, strlen(any_db) };
            (yyval.table)= new Table_ident(YYTHD, db, to_lex_cstring((yyvsp[(1) - (1)].lex_str)), 0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2005:
/* Line 1792 of yacc.c  */
#line 12992 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 2006:
/* Line 1792 of yacc.c  */
#line 12994 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[(1) - (1)].lex_str).str,
                                                     (yyvsp[(1) - (1)].lex_str).str+(yyvsp[(1) - (1)].lex_str).length,
                                                     (yyvsp[(1) - (1)].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[(1) - (1)].lex_str).length)
              {
                ErrConvString err((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2007:
/* Line 1792 of yacc.c  */
#line 13024 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!strcont((yyvsp[(1) - (1)].lex_str).str, "\n"))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 2008:
/* Line 1792 of yacc.c  */
#line 13037 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (strcont((yyvsp[(1) - (1)].lex_str).str, "."))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2009:
/* Line 1792 of yacc.c  */
#line 13050 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2010:
/* Line 1792 of yacc.c  */
#line 13066 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2011:
/* Line 1792 of yacc.c  */
#line 13082 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2012:
/* Line 1792 of yacc.c  */
#line 13098 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 2013:
/* Line 1792 of yacc.c  */
#line 13100 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 2014:
/* Line 1792 of yacc.c  */
#line 13110 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 2015:
/* Line 1792 of yacc.c  */
#line 13112 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 2016:
/* Line 1792 of yacc.c  */
#line 13122 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2017:
/* Line 1792 of yacc.c  */
#line 13123 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2018:
/* Line 1792 of yacc.c  */
#line 13124 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2019:
/* Line 1792 of yacc.c  */
#line 13129 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyvsp[(1) - (1)].lex_str));

            (yyval.lex_user)->user.str= (yyvsp[(1) - (1)].lex_str).str;
            (yyval.lex_user)->user.length= (yyvsp[(1) - (1)].lex_str).length;
            (yyval.lex_user)->host.str= "%";
            (yyval.lex_user)->host.length= 1;
            (yyval.lex_user)->plugin= EMPTY_CSTR;
            (yyval.lex_user)->auth= NULL_CSTR;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            if (check_string_char_length((yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2020:
/* Line 1792 of yacc.c  */
#line 13157 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyvsp[(1) - (3)].lex_str));
            trim_whitespace(system_charset_info, &(yyvsp[(3) - (3)].lex_str));

            (yyval.lex_user)->user.str= (yyvsp[(1) - (3)].lex_str).str;
            (yyval.lex_user)->user.length= (yyvsp[(1) - (3)].lex_str).length;
            (yyval.lex_user)->host.str= (yyvsp[(3) - (3)].lex_str).str;
            (yyval.lex_user)->host.length= (yyvsp[(3) - (3)].lex_str).length;
            (yyval.lex_user)->plugin= EMPTY_CSTR;
            (yyval.lex_user)->auth= NULL_CSTR;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            if (check_string_char_length((yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0) ||
                check_host_name((yyval.lex_user)->host))
              MYSQL_YYABORT;
            /*
              Convert hostname part of username to lowercase.
              It's OK to use in-place lowercase as long as
              the character set is utf8.
            */
            my_casedn_str(system_charset_info, (yyvsp[(3) - (3)].lex_str).str);
            (yyval.lex_user)->host.str= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 2021:
/* Line 1792 of yacc.c  */
#line 13194 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
    break;

  case 2022:
/* Line 1792 of yacc.c  */
#line 13208 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2023:
/* Line 1792 of yacc.c  */
#line 13209 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2024:
/* Line 1792 of yacc.c  */
#line 13210 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2025:
/* Line 1792 of yacc.c  */
#line 13211 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2026:
/* Line 1792 of yacc.c  */
#line 13212 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2027:
/* Line 1792 of yacc.c  */
#line 13213 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2028:
/* Line 1792 of yacc.c  */
#line 13214 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2029:
/* Line 1792 of yacc.c  */
#line 13215 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2030:
/* Line 1792 of yacc.c  */
#line 13216 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2031:
/* Line 1792 of yacc.c  */
#line 13217 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2032:
/* Line 1792 of yacc.c  */
#line 13218 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2033:
/* Line 1792 of yacc.c  */
#line 13219 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2034:
/* Line 1792 of yacc.c  */
#line 13220 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2035:
/* Line 1792 of yacc.c  */
#line 13221 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2036:
/* Line 1792 of yacc.c  */
#line 13222 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2037:
/* Line 1792 of yacc.c  */
#line 13223 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2038:
/* Line 1792 of yacc.c  */
#line 13224 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2039:
/* Line 1792 of yacc.c  */
#line 13225 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2040:
/* Line 1792 of yacc.c  */
#line 13226 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2041:
/* Line 1792 of yacc.c  */
#line 13227 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2042:
/* Line 1792 of yacc.c  */
#line 13228 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2043:
/* Line 1792 of yacc.c  */
#line 13229 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2044:
/* Line 1792 of yacc.c  */
#line 13230 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2045:
/* Line 1792 of yacc.c  */
#line 13231 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2046:
/* Line 1792 of yacc.c  */
#line 13232 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2047:
/* Line 1792 of yacc.c  */
#line 13233 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2048:
/* Line 1792 of yacc.c  */
#line 13234 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2049:
/* Line 1792 of yacc.c  */
#line 13235 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2050:
/* Line 1792 of yacc.c  */
#line 13236 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2051:
/* Line 1792 of yacc.c  */
#line 13237 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2052:
/* Line 1792 of yacc.c  */
#line 13238 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2053:
/* Line 1792 of yacc.c  */
#line 13239 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2054:
/* Line 1792 of yacc.c  */
#line 13240 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2055:
/* Line 1792 of yacc.c  */
#line 13241 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2056:
/* Line 1792 of yacc.c  */
#line 13242 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2057:
/* Line 1792 of yacc.c  */
#line 13243 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2058:
/* Line 1792 of yacc.c  */
#line 13244 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2059:
/* Line 1792 of yacc.c  */
#line 13245 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2060:
/* Line 1792 of yacc.c  */
#line 13246 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2061:
/* Line 1792 of yacc.c  */
#line 13247 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2062:
/* Line 1792 of yacc.c  */
#line 13248 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2063:
/* Line 1792 of yacc.c  */
#line 13249 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2064:
/* Line 1792 of yacc.c  */
#line 13250 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2065:
/* Line 1792 of yacc.c  */
#line 13251 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2066:
/* Line 1792 of yacc.c  */
#line 13252 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2067:
/* Line 1792 of yacc.c  */
#line 13253 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2068:
/* Line 1792 of yacc.c  */
#line 13254 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2069:
/* Line 1792 of yacc.c  */
#line 13255 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2070:
/* Line 1792 of yacc.c  */
#line 13256 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2071:
/* Line 1792 of yacc.c  */
#line 13257 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2072:
/* Line 1792 of yacc.c  */
#line 13258 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2073:
/* Line 1792 of yacc.c  */
#line 13259 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2074:
/* Line 1792 of yacc.c  */
#line 13260 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2075:
/* Line 1792 of yacc.c  */
#line 13261 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2076:
/* Line 1792 of yacc.c  */
#line 13262 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2077:
/* Line 1792 of yacc.c  */
#line 13263 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2078:
/* Line 1792 of yacc.c  */
#line 13264 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2079:
/* Line 1792 of yacc.c  */
#line 13274 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2080:
/* Line 1792 of yacc.c  */
#line 13275 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2081:
/* Line 1792 of yacc.c  */
#line 13276 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2082:
/* Line 1792 of yacc.c  */
#line 13277 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2083:
/* Line 1792 of yacc.c  */
#line 13278 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2084:
/* Line 1792 of yacc.c  */
#line 13279 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2085:
/* Line 1792 of yacc.c  */
#line 13280 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2086:
/* Line 1792 of yacc.c  */
#line 13281 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2087:
/* Line 1792 of yacc.c  */
#line 13282 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2088:
/* Line 1792 of yacc.c  */
#line 13283 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2089:
/* Line 1792 of yacc.c  */
#line 13284 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2090:
/* Line 1792 of yacc.c  */
#line 13285 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2091:
/* Line 1792 of yacc.c  */
#line 13286 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2092:
/* Line 1792 of yacc.c  */
#line 13287 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2093:
/* Line 1792 of yacc.c  */
#line 13288 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2094:
/* Line 1792 of yacc.c  */
#line 13289 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2095:
/* Line 1792 of yacc.c  */
#line 13290 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2096:
/* Line 1792 of yacc.c  */
#line 13291 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2097:
/* Line 1792 of yacc.c  */
#line 13292 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2098:
/* Line 1792 of yacc.c  */
#line 13293 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2099:
/* Line 1792 of yacc.c  */
#line 13294 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2100:
/* Line 1792 of yacc.c  */
#line 13295 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2101:
/* Line 1792 of yacc.c  */
#line 13296 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2102:
/* Line 1792 of yacc.c  */
#line 13297 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2103:
/* Line 1792 of yacc.c  */
#line 13298 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2104:
/* Line 1792 of yacc.c  */
#line 13299 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2105:
/* Line 1792 of yacc.c  */
#line 13300 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2106:
/* Line 1792 of yacc.c  */
#line 13301 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2107:
/* Line 1792 of yacc.c  */
#line 13302 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2108:
/* Line 1792 of yacc.c  */
#line 13303 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2109:
/* Line 1792 of yacc.c  */
#line 13304 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2110:
/* Line 1792 of yacc.c  */
#line 13305 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2111:
/* Line 1792 of yacc.c  */
#line 13306 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2112:
/* Line 1792 of yacc.c  */
#line 13307 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2113:
/* Line 1792 of yacc.c  */
#line 13308 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2114:
/* Line 1792 of yacc.c  */
#line 13309 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2115:
/* Line 1792 of yacc.c  */
#line 13310 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2116:
/* Line 1792 of yacc.c  */
#line 13311 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2117:
/* Line 1792 of yacc.c  */
#line 13312 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2118:
/* Line 1792 of yacc.c  */
#line 13313 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2119:
/* Line 1792 of yacc.c  */
#line 13314 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2120:
/* Line 1792 of yacc.c  */
#line 13315 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2121:
/* Line 1792 of yacc.c  */
#line 13316 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2122:
/* Line 1792 of yacc.c  */
#line 13317 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2123:
/* Line 1792 of yacc.c  */
#line 13318 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2124:
/* Line 1792 of yacc.c  */
#line 13319 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2125:
/* Line 1792 of yacc.c  */
#line 13320 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2126:
/* Line 1792 of yacc.c  */
#line 13325 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2127:
/* Line 1792 of yacc.c  */
#line 13326 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2128:
/* Line 1792 of yacc.c  */
#line 13327 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2129:
/* Line 1792 of yacc.c  */
#line 13328 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2130:
/* Line 1792 of yacc.c  */
#line 13329 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2131:
/* Line 1792 of yacc.c  */
#line 13330 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2132:
/* Line 1792 of yacc.c  */
#line 13331 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2133:
/* Line 1792 of yacc.c  */
#line 13332 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2134:
/* Line 1792 of yacc.c  */
#line 13333 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2135:
/* Line 1792 of yacc.c  */
#line 13334 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2136:
/* Line 1792 of yacc.c  */
#line 13335 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2137:
/* Line 1792 of yacc.c  */
#line 13336 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2138:
/* Line 1792 of yacc.c  */
#line 13337 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2139:
/* Line 1792 of yacc.c  */
#line 13338 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2140:
/* Line 1792 of yacc.c  */
#line 13339 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2141:
/* Line 1792 of yacc.c  */
#line 13340 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2142:
/* Line 1792 of yacc.c  */
#line 13341 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2143:
/* Line 1792 of yacc.c  */
#line 13342 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2144:
/* Line 1792 of yacc.c  */
#line 13343 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2145:
/* Line 1792 of yacc.c  */
#line 13344 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2146:
/* Line 1792 of yacc.c  */
#line 13345 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2147:
/* Line 1792 of yacc.c  */
#line 13346 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2148:
/* Line 1792 of yacc.c  */
#line 13347 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2149:
/* Line 1792 of yacc.c  */
#line 13348 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2150:
/* Line 1792 of yacc.c  */
#line 13349 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2151:
/* Line 1792 of yacc.c  */
#line 13350 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2152:
/* Line 1792 of yacc.c  */
#line 13351 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2153:
/* Line 1792 of yacc.c  */
#line 13352 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2154:
/* Line 1792 of yacc.c  */
#line 13353 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2155:
/* Line 1792 of yacc.c  */
#line 13354 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2156:
/* Line 1792 of yacc.c  */
#line 13355 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2157:
/* Line 1792 of yacc.c  */
#line 13356 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2158:
/* Line 1792 of yacc.c  */
#line 13357 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2159:
/* Line 1792 of yacc.c  */
#line 13358 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2160:
/* Line 1792 of yacc.c  */
#line 13359 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2161:
/* Line 1792 of yacc.c  */
#line 13360 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2162:
/* Line 1792 of yacc.c  */
#line 13361 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2163:
/* Line 1792 of yacc.c  */
#line 13362 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2164:
/* Line 1792 of yacc.c  */
#line 13363 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2165:
/* Line 1792 of yacc.c  */
#line 13364 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2166:
/* Line 1792 of yacc.c  */
#line 13365 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2167:
/* Line 1792 of yacc.c  */
#line 13366 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2168:
/* Line 1792 of yacc.c  */
#line 13367 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2169:
/* Line 1792 of yacc.c  */
#line 13368 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2170:
/* Line 1792 of yacc.c  */
#line 13369 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2171:
/* Line 1792 of yacc.c  */
#line 13370 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2172:
/* Line 1792 of yacc.c  */
#line 13371 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2173:
/* Line 1792 of yacc.c  */
#line 13372 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2174:
/* Line 1792 of yacc.c  */
#line 13373 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2175:
/* Line 1792 of yacc.c  */
#line 13374 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2176:
/* Line 1792 of yacc.c  */
#line 13375 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2177:
/* Line 1792 of yacc.c  */
#line 13376 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2178:
/* Line 1792 of yacc.c  */
#line 13377 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2179:
/* Line 1792 of yacc.c  */
#line 13378 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2180:
/* Line 1792 of yacc.c  */
#line 13379 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2181:
/* Line 1792 of yacc.c  */
#line 13380 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2182:
/* Line 1792 of yacc.c  */
#line 13381 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2183:
/* Line 1792 of yacc.c  */
#line 13382 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2184:
/* Line 1792 of yacc.c  */
#line 13383 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2185:
/* Line 1792 of yacc.c  */
#line 13384 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2186:
/* Line 1792 of yacc.c  */
#line 13385 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2187:
/* Line 1792 of yacc.c  */
#line 13386 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2188:
/* Line 1792 of yacc.c  */
#line 13387 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2189:
/* Line 1792 of yacc.c  */
#line 13388 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2190:
/* Line 1792 of yacc.c  */
#line 13389 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2191:
/* Line 1792 of yacc.c  */
#line 13390 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2192:
/* Line 1792 of yacc.c  */
#line 13391 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2193:
/* Line 1792 of yacc.c  */
#line 13392 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2194:
/* Line 1792 of yacc.c  */
#line 13393 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2195:
/* Line 1792 of yacc.c  */
#line 13394 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2196:
/* Line 1792 of yacc.c  */
#line 13395 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2197:
/* Line 1792 of yacc.c  */
#line 13396 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2198:
/* Line 1792 of yacc.c  */
#line 13397 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2199:
/* Line 1792 of yacc.c  */
#line 13398 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2200:
/* Line 1792 of yacc.c  */
#line 13399 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2201:
/* Line 1792 of yacc.c  */
#line 13400 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2202:
/* Line 1792 of yacc.c  */
#line 13401 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2203:
/* Line 1792 of yacc.c  */
#line 13402 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2204:
/* Line 1792 of yacc.c  */
#line 13403 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2205:
/* Line 1792 of yacc.c  */
#line 13404 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2206:
/* Line 1792 of yacc.c  */
#line 13405 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2207:
/* Line 1792 of yacc.c  */
#line 13406 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2208:
/* Line 1792 of yacc.c  */
#line 13407 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2209:
/* Line 1792 of yacc.c  */
#line 13408 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2210:
/* Line 1792 of yacc.c  */
#line 13409 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2211:
/* Line 1792 of yacc.c  */
#line 13410 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2212:
/* Line 1792 of yacc.c  */
#line 13411 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2213:
/* Line 1792 of yacc.c  */
#line 13412 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2214:
/* Line 1792 of yacc.c  */
#line 13413 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2215:
/* Line 1792 of yacc.c  */
#line 13414 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2216:
/* Line 1792 of yacc.c  */
#line 13415 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2217:
/* Line 1792 of yacc.c  */
#line 13416 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2218:
/* Line 1792 of yacc.c  */
#line 13417 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2219:
/* Line 1792 of yacc.c  */
#line 13418 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2220:
/* Line 1792 of yacc.c  */
#line 13419 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2221:
/* Line 1792 of yacc.c  */
#line 13420 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2222:
/* Line 1792 of yacc.c  */
#line 13421 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2223:
/* Line 1792 of yacc.c  */
#line 13422 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2224:
/* Line 1792 of yacc.c  */
#line 13423 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2225:
/* Line 1792 of yacc.c  */
#line 13424 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2226:
/* Line 1792 of yacc.c  */
#line 13425 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2227:
/* Line 1792 of yacc.c  */
#line 13426 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2228:
/* Line 1792 of yacc.c  */
#line 13427 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2229:
/* Line 1792 of yacc.c  */
#line 13428 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2230:
/* Line 1792 of yacc.c  */
#line 13429 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2231:
/* Line 1792 of yacc.c  */
#line 13430 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2232:
/* Line 1792 of yacc.c  */
#line 13431 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2233:
/* Line 1792 of yacc.c  */
#line 13432 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2234:
/* Line 1792 of yacc.c  */
#line 13433 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2235:
/* Line 1792 of yacc.c  */
#line 13434 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2236:
/* Line 1792 of yacc.c  */
#line 13435 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2237:
/* Line 1792 of yacc.c  */
#line 13436 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2238:
/* Line 1792 of yacc.c  */
#line 13437 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2239:
/* Line 1792 of yacc.c  */
#line 13438 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2240:
/* Line 1792 of yacc.c  */
#line 13439 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2241:
/* Line 1792 of yacc.c  */
#line 13440 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2242:
/* Line 1792 of yacc.c  */
#line 13441 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2243:
/* Line 1792 of yacc.c  */
#line 13442 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2244:
/* Line 1792 of yacc.c  */
#line 13443 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2245:
/* Line 1792 of yacc.c  */
#line 13444 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2246:
/* Line 1792 of yacc.c  */
#line 13445 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2247:
/* Line 1792 of yacc.c  */
#line 13446 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2248:
/* Line 1792 of yacc.c  */
#line 13447 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2249:
/* Line 1792 of yacc.c  */
#line 13448 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2250:
/* Line 1792 of yacc.c  */
#line 13449 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2251:
/* Line 1792 of yacc.c  */
#line 13450 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2252:
/* Line 1792 of yacc.c  */
#line 13451 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2253:
/* Line 1792 of yacc.c  */
#line 13452 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2254:
/* Line 1792 of yacc.c  */
#line 13453 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2255:
/* Line 1792 of yacc.c  */
#line 13454 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2256:
/* Line 1792 of yacc.c  */
#line 13455 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2257:
/* Line 1792 of yacc.c  */
#line 13456 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2258:
/* Line 1792 of yacc.c  */
#line 13457 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2259:
/* Line 1792 of yacc.c  */
#line 13458 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2260:
/* Line 1792 of yacc.c  */
#line 13459 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2261:
/* Line 1792 of yacc.c  */
#line 13460 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2262:
/* Line 1792 of yacc.c  */
#line 13461 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2263:
/* Line 1792 of yacc.c  */
#line 13462 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2264:
/* Line 1792 of yacc.c  */
#line 13463 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2265:
/* Line 1792 of yacc.c  */
#line 13464 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2266:
/* Line 1792 of yacc.c  */
#line 13465 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2267:
/* Line 1792 of yacc.c  */
#line 13466 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2268:
/* Line 1792 of yacc.c  */
#line 13467 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2269:
/* Line 1792 of yacc.c  */
#line 13468 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2270:
/* Line 1792 of yacc.c  */
#line 13469 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2271:
/* Line 1792 of yacc.c  */
#line 13470 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2272:
/* Line 1792 of yacc.c  */
#line 13471 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2273:
/* Line 1792 of yacc.c  */
#line 13472 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2274:
/* Line 1792 of yacc.c  */
#line 13473 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2275:
/* Line 1792 of yacc.c  */
#line 13474 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2276:
/* Line 1792 of yacc.c  */
#line 13475 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2277:
/* Line 1792 of yacc.c  */
#line 13476 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2278:
/* Line 1792 of yacc.c  */
#line 13477 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2279:
/* Line 1792 of yacc.c  */
#line 13478 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2280:
/* Line 1792 of yacc.c  */
#line 13479 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2281:
/* Line 1792 of yacc.c  */
#line 13480 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2282:
/* Line 1792 of yacc.c  */
#line 13481 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2283:
/* Line 1792 of yacc.c  */
#line 13482 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2284:
/* Line 1792 of yacc.c  */
#line 13483 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2285:
/* Line 1792 of yacc.c  */
#line 13484 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2286:
/* Line 1792 of yacc.c  */
#line 13485 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2287:
/* Line 1792 of yacc.c  */
#line 13486 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2288:
/* Line 1792 of yacc.c  */
#line 13487 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2289:
/* Line 1792 of yacc.c  */
#line 13488 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2290:
/* Line 1792 of yacc.c  */
#line 13489 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2291:
/* Line 1792 of yacc.c  */
#line 13490 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2292:
/* Line 1792 of yacc.c  */
#line 13491 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2293:
/* Line 1792 of yacc.c  */
#line 13492 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2294:
/* Line 1792 of yacc.c  */
#line 13493 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2295:
/* Line 1792 of yacc.c  */
#line 13494 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2296:
/* Line 1792 of yacc.c  */
#line 13495 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2297:
/* Line 1792 of yacc.c  */
#line 13496 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2298:
/* Line 1792 of yacc.c  */
#line 13497 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2299:
/* Line 1792 of yacc.c  */
#line 13498 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2300:
/* Line 1792 of yacc.c  */
#line 13499 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2301:
/* Line 1792 of yacc.c  */
#line 13500 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2302:
/* Line 1792 of yacc.c  */
#line 13501 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2303:
/* Line 1792 of yacc.c  */
#line 13502 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2304:
/* Line 1792 of yacc.c  */
#line 13503 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2305:
/* Line 1792 of yacc.c  */
#line 13504 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2306:
/* Line 1792 of yacc.c  */
#line 13505 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2307:
/* Line 1792 of yacc.c  */
#line 13506 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2308:
/* Line 1792 of yacc.c  */
#line 13507 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2309:
/* Line 1792 of yacc.c  */
#line 13508 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2310:
/* Line 1792 of yacc.c  */
#line 13509 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2311:
/* Line 1792 of yacc.c  */
#line 13510 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2312:
/* Line 1792 of yacc.c  */
#line 13511 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2313:
/* Line 1792 of yacc.c  */
#line 13512 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2314:
/* Line 1792 of yacc.c  */
#line 13513 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2315:
/* Line 1792 of yacc.c  */
#line 13514 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2316:
/* Line 1792 of yacc.c  */
#line 13515 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2317:
/* Line 1792 of yacc.c  */
#line 13516 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2318:
/* Line 1792 of yacc.c  */
#line 13517 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2319:
/* Line 1792 of yacc.c  */
#line 13518 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2320:
/* Line 1792 of yacc.c  */
#line 13519 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2321:
/* Line 1792 of yacc.c  */
#line 13520 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2322:
/* Line 1792 of yacc.c  */
#line 13521 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2323:
/* Line 1792 of yacc.c  */
#line 13522 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2324:
/* Line 1792 of yacc.c  */
#line 13523 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2325:
/* Line 1792 of yacc.c  */
#line 13524 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2326:
/* Line 1792 of yacc.c  */
#line 13525 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2327:
/* Line 1792 of yacc.c  */
#line 13526 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2328:
/* Line 1792 of yacc.c  */
#line 13527 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2329:
/* Line 1792 of yacc.c  */
#line 13528 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2330:
/* Line 1792 of yacc.c  */
#line 13529 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2331:
/* Line 1792 of yacc.c  */
#line 13530 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2332:
/* Line 1792 of yacc.c  */
#line 13531 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2333:
/* Line 1792 of yacc.c  */
#line 13532 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2334:
/* Line 1792 of yacc.c  */
#line 13533 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2335:
/* Line 1792 of yacc.c  */
#line 13534 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2336:
/* Line 1792 of yacc.c  */
#line 13535 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2337:
/* Line 1792 of yacc.c  */
#line 13536 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2338:
/* Line 1792 of yacc.c  */
#line 13537 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2339:
/* Line 1792 of yacc.c  */
#line 13538 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2340:
/* Line 1792 of yacc.c  */
#line 13539 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2341:
/* Line 1792 of yacc.c  */
#line 13540 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2342:
/* Line 1792 of yacc.c  */
#line 13541 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2343:
/* Line 1792 of yacc.c  */
#line 13542 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2344:
/* Line 1792 of yacc.c  */
#line 13543 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2345:
/* Line 1792 of yacc.c  */
#line 13544 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2346:
/* Line 1792 of yacc.c  */
#line 13545 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2347:
/* Line 1792 of yacc.c  */
#line 13546 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2348:
/* Line 1792 of yacc.c  */
#line 13547 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2349:
/* Line 1792 of yacc.c  */
#line 13548 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2350:
/* Line 1792 of yacc.c  */
#line 13549 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2351:
/* Line 1792 of yacc.c  */
#line 13550 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2352:
/* Line 1792 of yacc.c  */
#line 13551 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2353:
/* Line 1792 of yacc.c  */
#line 13552 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2354:
/* Line 1792 of yacc.c  */
#line 13553 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2355:
/* Line 1792 of yacc.c  */
#line 13554 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2356:
/* Line 1792 of yacc.c  */
#line 13555 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2357:
/* Line 1792 of yacc.c  */
#line 13556 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2358:
/* Line 1792 of yacc.c  */
#line 13557 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2359:
/* Line 1792 of yacc.c  */
#line 13558 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2360:
/* Line 1792 of yacc.c  */
#line 13559 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2361:
/* Line 1792 of yacc.c  */
#line 13560 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2362:
/* Line 1792 of yacc.c  */
#line 13561 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2363:
/* Line 1792 of yacc.c  */
#line 13562 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2364:
/* Line 1792 of yacc.c  */
#line 13563 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2365:
/* Line 1792 of yacc.c  */
#line 13564 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2366:
/* Line 1792 of yacc.c  */
#line 13565 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2367:
/* Line 1792 of yacc.c  */
#line 13566 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2368:
/* Line 1792 of yacc.c  */
#line 13567 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2369:
/* Line 1792 of yacc.c  */
#line 13568 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2370:
/* Line 1792 of yacc.c  */
#line 13569 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2371:
/* Line 1792 of yacc.c  */
#line 13570 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2372:
/* Line 1792 of yacc.c  */
#line 13571 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2373:
/* Line 1792 of yacc.c  */
#line 13572 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2374:
/* Line 1792 of yacc.c  */
#line 13573 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2375:
/* Line 1792 of yacc.c  */
#line 13574 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2376:
/* Line 1792 of yacc.c  */
#line 13575 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2377:
/* Line 1792 of yacc.c  */
#line 13576 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2378:
/* Line 1792 of yacc.c  */
#line 13577 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2379:
/* Line 1792 of yacc.c  */
#line 13578 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2380:
/* Line 1792 of yacc.c  */
#line 13579 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2381:
/* Line 1792 of yacc.c  */
#line 13580 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2382:
/* Line 1792 of yacc.c  */
#line 13581 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2383:
/* Line 1792 of yacc.c  */
#line 13582 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2384:
/* Line 1792 of yacc.c  */
#line 13583 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2385:
/* Line 1792 of yacc.c  */
#line 13584 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2386:
/* Line 1792 of yacc.c  */
#line 13585 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2387:
/* Line 1792 of yacc.c  */
#line 13586 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2388:
/* Line 1792 of yacc.c  */
#line 13587 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2389:
/* Line 1792 of yacc.c  */
#line 13588 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2390:
/* Line 1792 of yacc.c  */
#line 13589 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2391:
/* Line 1792 of yacc.c  */
#line 13590 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2392:
/* Line 1792 of yacc.c  */
#line 13591 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2393:
/* Line 1792 of yacc.c  */
#line 13592 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2394:
/* Line 1792 of yacc.c  */
#line 13593 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2395:
/* Line 1792 of yacc.c  */
#line 13594 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2396:
/* Line 1792 of yacc.c  */
#line 13606 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].start_option_value_list));
          }
    break;

  case 2397:
/* Line 1792 of yacc.c  */
#line 13615 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[(1) - (2)].option_value_no_option_type), (yylsp[(1) - (2)]), (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2398:
/* Line 1792 of yacc.c  */
#line 13619 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[(2) - (2)].transaction_characteristics), (yylsp[(2) - (2)]));
          }
    break;

  case 2399:
/* Line 1792 of yacc.c  */
#line 13623 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].start_option_value_list_following_option_type));
          }
    break;

  case 2400:
/* Line 1792 of yacc.c  */
#line 13627 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[(3) - (3)].simple_string), (yylsp[(3) - (3)]));
          }
    break;

  case 2401:
/* Line 1792 of yacc.c  */
#line 13631 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "SET PASSWORD = "
                                 "PASSWORD('<plaintext_password>')",
                                 "SET PASSWORD = '<plaintext_password>'");
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[(5) - (6)].simple_string), (yylsp[(5) - (6)]));
          }
    break;

  case 2402:
/* Line 1792 of yacc.c  */
#line 13638 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[(3) - (5)].lex_user), (yyvsp[(5) - (5)].simple_string), (yylsp[(5) - (5)]));
          }
    break;

  case 2403:
/* Line 1792 of yacc.c  */
#line 13642 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "SET PASSWORD FOR <user> = "
                                 "PASSWORD('<plaintext_password>')",
                                 "SET PASSWORD FOR <user> = "
                                 "'<plaintext_password>'");
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[(3) - (8)].lex_user), (yyvsp[(7) - (8)].simple_string), (yylsp[(7) - (8)]));
          }
    break;

  case 2404:
/* Line 1792 of yacc.c  */
#line 13655 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[(1) - (2)].option_value_following_option_type),
                                                                          (yylsp[(1) - (2)]),
                                                                          (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2405:
/* Line 1792 of yacc.c  */
#line 13662 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[(2) - (2)].transaction_characteristics),
                                                                           (yylsp[(2) - (2)]));
          }
    break;

  case 2406:
/* Line 1792 of yacc.c  */
#line 13671 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.option_value_list)= NULL; }
    break;

  case 2407:
/* Line 1792 of yacc.c  */
#line 13672 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.option_value_list)= (yyvsp[(2) - (2)].option_value_list); }
    break;

  case 2408:
/* Line 1792 of yacc.c  */
#line 13678 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[(0) - (1)]), (yyvsp[(1) - (1)].node), (yylsp[(1) - (1)]));
          }
    break;

  case 2409:
/* Line 1792 of yacc.c  */
#line 13682 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[(1) - (3)].option_value_list), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].node), (yylsp[(3) - (3)]));
          }
    break;

  case 2410:
/* Line 1792 of yacc.c  */
#line 13690 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].option_value_following_option_type));
          }
    break;

  case 2411:
/* Line 1792 of yacc.c  */
#line 13693 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].option_value_no_option_type); }
    break;

  case 2412:
/* Line 1792 of yacc.c  */
#line 13697 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2413:
/* Line 1792 of yacc.c  */
#line 13698 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2414:
/* Line 1792 of yacc.c  */
#line 13699 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2415:
/* Line 1792 of yacc.c  */
#line 13703 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2416:
/* Line 1792 of yacc.c  */
#line 13704 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2417:
/* Line 1792 of yacc.c  */
#line 13705 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2418:
/* Line 1792 of yacc.c  */
#line 13706 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2419:
/* Line 1792 of yacc.c  */
#line 13710 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2420:
/* Line 1792 of yacc.c  */
#line 13711 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2421:
/* Line 1792 of yacc.c  */
#line 13712 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2422:
/* Line 1792 of yacc.c  */
#line 13713 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2423:
/* Line 1792 of yacc.c  */
#line 13719 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[(1) - (3)].internal_variable_name), (yyvsp[(3) - (3)].item));
          }
    break;

  case 2424:
/* Line 1792 of yacc.c  */
#line 13729 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[(1) - (3)].internal_variable_name), (yyvsp[(3) - (3)].item), (yylsp[(3) - (3)]));
          }
    break;

  case 2425:
/* Line 1792 of yacc.c  */
#line 13733 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[(2) - (4)].lex_str), (yyvsp[(4) - (4)].item));
          }
    break;

  case 2426:
/* Line 1792 of yacc.c  */
#line 13737 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[(3) - (6)].var_type), (yyvsp[(4) - (6)].internal_variable_name), (yyvsp[(6) - (6)].item));
          }
    break;

  case 2427:
/* Line 1792 of yacc.c  */
#line 13741 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[(2) - (2)].charset));
          }
    break;

  case 2428:
/* Line 1792 of yacc.c  */
#line 13745 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[(2) - (3)]));
          }
    break;

  case 2429:
/* Line 1792 of yacc.c  */
#line 13752 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names_charset((yyvsp[(2) - (3)].charset), (yyvsp[(3) - (3)].charset));
          }
    break;

  case 2430:
/* Line 1792 of yacc.c  */
#line 13759 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2431:
/* Line 1792 of yacc.c  */
#line 13763 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2432:
/* Line 1792 of yacc.c  */
#line 13767 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2433:
/* Line 1792 of yacc.c  */
#line 13774 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].transaction_access_mode), (yyvsp[(2) - (2)].isolation_level));
          }
    break;

  case 2434:
/* Line 1792 of yacc.c  */
#line 13778 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].isolation_level), (yyvsp[(2) - (2)].transaction_access_mode));
          }
    break;

  case 2435:
/* Line 1792 of yacc.c  */
#line 13785 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[(1) - (1)].num));
          }
    break;

  case 2436:
/* Line 1792 of yacc.c  */
#line 13791 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.transaction_access_mode)= NULL; }
    break;

  case 2437:
/* Line 1792 of yacc.c  */
#line 13792 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.transaction_access_mode)= (yyvsp[(2) - (2)].transaction_access_mode); }
    break;

  case 2438:
/* Line 1792 of yacc.c  */
#line 13797 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[(3) - (3)].tx_isolation));
          }
    break;

  case 2439:
/* Line 1792 of yacc.c  */
#line 13803 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.isolation_level)= NULL; }
    break;

  case 2440:
/* Line 1792 of yacc.c  */
#line 13804 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.isolation_level)= (yyvsp[(2) - (2)].isolation_level); }
    break;

  case 2441:
/* Line 1792 of yacc.c  */
#line 13808 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= true; }
    break;

  case 2442:
/* Line 1792 of yacc.c  */
#line 13809 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= false; }
    break;

  case 2443:
/* Line 1792 of yacc.c  */
#line 13813 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 2444:
/* Line 1792 of yacc.c  */
#line 13814 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 2445:
/* Line 1792 of yacc.c  */
#line 13815 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 2446:
/* Line 1792 of yacc.c  */
#line 13816 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 2447:
/* Line 1792 of yacc.c  */
#line 13821 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_string)=(yyvsp[(1) - (1)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2449:
/* Line 1792 of yacc.c  */
#line 13830 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 2450:
/* Line 1792 of yacc.c  */
#line 13832 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON",  2, system_charset_info);
          }
    break;

  case 2451:
/* Line 1792 of yacc.c  */
#line 13836 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
    break;

  case 2452:
/* Line 1792 of yacc.c  */
#line 13840 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
    break;

  case 2453:
/* Line 1792 of yacc.c  */
#line 13849 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
    break;

  case 2454:
/* Line 1792 of yacc.c  */
#line 13860 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2459:
/* Line 1792 of yacc.c  */
#line 13875 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[(3) - (3)].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].lex_str_ptr), 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
    break;

  case 2460:
/* Line 1792 of yacc.c  */
#line 13902 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ_NO_INSERT; }
    break;

  case 2461:
/* Line 1792 of yacc.c  */
#line 13903 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_WRITE_DEFAULT; }
    break;

  case 2462:
/* Line 1792 of yacc.c  */
#line 13905 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
    break;

  case 2463:
/* Line 1792 of yacc.c  */
#line 13909 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 2464:
/* Line 1792 of yacc.c  */
#line 13914 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
    break;

  case 2465:
/* Line 1792 of yacc.c  */
#line 13925 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2466:
/* Line 1792 of yacc.c  */
#line 13931 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.statement)= NEW_PTN PT_shutdown();
          }
    break;

  case 2467:
/* Line 1792 of yacc.c  */
#line 13943 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select()->add_table_to_list(thd, (yyvsp[(2) - (4)].table), (yyvsp[(4) - (4)].lex_str_ptr), 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_open();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2468:
/* Line 1792 of yacc.c  */
#line 13959 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select()->add_table_to_list(thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_close();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2469:
/* Line 1792 of yacc.c  */
#line 13977 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                     /* #4 */
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            Item *one= new (YYTHD->mem_root) Item_int((int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select()->select_limit= one;
            lex->current_select()->offset_limit= 0;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2470:
/* Line 1792 of yacc.c  */
#line 13997 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].item) != NULL)
              ITEMIZE((yyvsp[(6) - (7)].item), &(yyvsp[(6) - (7)].item));
            Select->set_where_cond((yyvsp[(6) - (7)].item));

            if ((yyvsp[(7) - (7)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(7) - (7)].limit_clause));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_read((yyvsp[(5) - (7)].ha_read_mode),
                                  lex->ident.str, lex->handler_insert_list,
                                  thd->m_parser_state->m_yacc.m_ha_rkey_mode);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2471:
/* Line 1792 of yacc.c  */
#line 14024 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->ident= null_lex_str; (yyval.ha_read_mode)=(yyvsp[(1) - (1)].ha_read_mode); }
    break;

  case 2472:
/* Line 1792 of yacc.c  */
#line 14025 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->ident= (yyvsp[(1) - (2)].lex_str); (yyval.ha_read_mode)=(yyvsp[(2) - (2)].ha_read_mode); }
    break;

  case 2473:
/* Line 1792 of yacc.c  */
#line 14029 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2474:
/* Line 1792 of yacc.c  */
#line 14030 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2475:
/* Line 1792 of yacc.c  */
#line 14034 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2476:
/* Line 1792 of yacc.c  */
#line 14035 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2477:
/* Line 1792 of yacc.c  */
#line 14036 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RPREV;  }
    break;

  case 2478:
/* Line 1792 of yacc.c  */
#line 14037 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RLAST;  }
    break;

  case 2479:
/* Line 1792 of yacc.c  */
#line 14039 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_ha_rkey_mode= (yyvsp[(1) - (1)].ha_rkey_mode);
          }
    break;

  case 2480:
/* Line 1792 of yacc.c  */
#line 14043 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(4) - (5)].item_list2));
            Lex->handler_insert_list= &(yyvsp[(4) - (5)].item_list2)->value;
            (yyval.ha_read_mode)= RKEY;
          }
    break;

  case 2481:
/* Line 1792 of yacc.c  */
#line 14051 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 2482:
/* Line 1792 of yacc.c  */
#line 14052 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 2483:
/* Line 1792 of yacc.c  */
#line 14053 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 2484:
/* Line 1792 of yacc.c  */
#line 14054 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 2485:
/* Line 1792 of yacc.c  */
#line 14055 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 2486:
/* Line 1792 of yacc.c  */
#line 14061 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_REVOKE; }
    break;

  case 2487:
/* Line 1792 of yacc.c  */
#line 14062 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2488:
/* Line 1792 of yacc.c  */
#line 14067 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->type= 0;
          }
    break;

  case 2489:
/* Line 1792 of yacc.c  */
#line 14072 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2490:
/* Line 1792 of yacc.c  */
#line 14082 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2491:
/* Line 1792 of yacc.c  */
#line 14092 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
    break;

  case 2492:
/* Line 1792 of yacc.c  */
#line 14096 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (5)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2493:
/* Line 1792 of yacc.c  */
#line 14104 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_GRANT; }
    break;

  case 2494:
/* Line 1792 of yacc.c  */
#line 14105 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2495:
/* Line 1792 of yacc.c  */
#line 14111 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->type= 0;
          }
    break;

  case 2496:
/* Line 1792 of yacc.c  */
#line 14117 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2497:
/* Line 1792 of yacc.c  */
#line 14128 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2498:
/* Line 1792 of yacc.c  */
#line 14138 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (6)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2501:
/* Line 1792 of yacc.c  */
#line 14152 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->grant == GLOBAL_ACLS &&
                lex->sql_command == SQLCOM_REVOKE)
              lex->sql_command= SQLCOM_REVOKE_ALL;
          }
    break;

  case 2502:
/* Line 1792 of yacc.c  */
#line 14159 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2507:
/* Line 1792 of yacc.c  */
#line 14177 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = SELECT_ACL;}
    break;

  case 2508:
/* Line 1792 of yacc.c  */
#line 14178 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2509:
/* Line 1792 of yacc.c  */
#line 14180 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = INSERT_ACL;}
    break;

  case 2510:
/* Line 1792 of yacc.c  */
#line 14181 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2511:
/* Line 1792 of yacc.c  */
#line 14183 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = UPDATE_ACL; }
    break;

  case 2512:
/* Line 1792 of yacc.c  */
#line 14184 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2513:
/* Line 1792 of yacc.c  */
#line 14186 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = REFERENCES_ACL;}
    break;

  case 2514:
/* Line 1792 of yacc.c  */
#line 14187 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2515:
/* Line 1792 of yacc.c  */
#line 14188 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= DELETE_ACL;}
    break;

  case 2516:
/* Line 1792 of yacc.c  */
#line 14189 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2517:
/* Line 1792 of yacc.c  */
#line 14190 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= INDEX_ACL;}
    break;

  case 2518:
/* Line 1792 of yacc.c  */
#line 14191 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_ACL;}
    break;

  case 2519:
/* Line 1792 of yacc.c  */
#line 14192 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_ACL;}
    break;

  case 2520:
/* Line 1792 of yacc.c  */
#line 14193 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= DROP_ACL;}
    break;

  case 2521:
/* Line 1792 of yacc.c  */
#line 14194 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= EXECUTE_ACL;}
    break;

  case 2522:
/* Line 1792 of yacc.c  */
#line 14195 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= RELOAD_ACL;}
    break;

  case 2523:
/* Line 1792 of yacc.c  */
#line 14196 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHUTDOWN_ACL;}
    break;

  case 2524:
/* Line 1792 of yacc.c  */
#line 14197 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= PROCESS_ACL;}
    break;

  case 2525:
/* Line 1792 of yacc.c  */
#line 14198 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= FILE_ACL;}
    break;

  case 2526:
/* Line 1792 of yacc.c  */
#line 14199 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2527:
/* Line 1792 of yacc.c  */
#line 14200 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_DB_ACL;}
    break;

  case 2528:
/* Line 1792 of yacc.c  */
#line 14201 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SUPER_ACL;}
    break;

  case 2529:
/* Line 1792 of yacc.c  */
#line 14202 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TMP_ACL;}
    break;

  case 2530:
/* Line 1792 of yacc.c  */
#line 14203 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= LOCK_TABLES_ACL; }
    break;

  case 2531:
/* Line 1792 of yacc.c  */
#line 14204 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= REPL_SLAVE_ACL; }
    break;

  case 2532:
/* Line 1792 of yacc.c  */
#line 14205 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= REPL_CLIENT_ACL; }
    break;

  case 2533:
/* Line 1792 of yacc.c  */
#line 14206 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_VIEW_ACL; }
    break;

  case 2534:
/* Line 1792 of yacc.c  */
#line 14207 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_VIEW_ACL; }
    break;

  case 2535:
/* Line 1792 of yacc.c  */
#line 14208 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_PROC_ACL; }
    break;

  case 2536:
/* Line 1792 of yacc.c  */
#line 14209 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_PROC_ACL; }
    break;

  case 2537:
/* Line 1792 of yacc.c  */
#line 14210 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_USER_ACL; }
    break;

  case 2538:
/* Line 1792 of yacc.c  */
#line 14211 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= EVENT_ACL;}
    break;

  case 2539:
/* Line 1792 of yacc.c  */
#line 14212 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= TRIGGER_ACL; }
    break;

  case 2540:
/* Line 1792 of yacc.c  */
#line 14213 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
    break;

  case 2541:
/* Line 1792 of yacc.c  */
#line 14217 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2542:
/* Line 1792 of yacc.c  */
#line 14218 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2545:
/* Line 1792 of yacc.c  */
#line 14228 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2546:
/* Line 1792 of yacc.c  */
#line 14238 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2547:
/* Line 1792 of yacc.c  */
#line 14248 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2548:
/* Line 1792 of yacc.c  */
#line 14261 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2549:
/* Line 1792 of yacc.c  */
#line 14276 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[(1) - (3)].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2550:
/* Line 1792 of yacc.c  */
#line 14289 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2551:
/* Line 1792 of yacc.c  */
#line 14302 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(1) - (1)].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
    break;

  case 2552:
/* Line 1792 of yacc.c  */
#line 14314 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2553:
/* Line 1792 of yacc.c  */
#line 14319 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2554:
/* Line 1792 of yacc.c  */
#line 14327 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2555:
/* Line 1792 of yacc.c  */
#line 14332 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2556:
/* Line 1792 of yacc.c  */
#line 14340 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)=(yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->auth.str= (yyvsp[(4) - (4)].lex_str).str;
            (yyvsp[(1) - (4)].lex_user)->auth.length= (yyvsp[(4) - (4)].lex_str).length;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2557:
/* Line 1792 of yacc.c  */
#line 14348 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (5)].lex_user);
            (yyvsp[(1) - (5)].lex_user)->auth.str= (yyvsp[(5) - (5)].lex_str).str;
            (yyvsp[(1) - (5)].lex_user)->auth.length= (yyvsp[(5) - (5)].lex_str).length;
            (yyvsp[(1) - (5)].lex_user)->uses_identified_by_password_clause= true;
            if (Lex->sql_command == SQLCOM_ALTER_USER)
            {
              my_syntax_error(ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            else
              push_deprecated_warn(YYTHD, "IDENTIFIED BY PASSWORD",
                                   "IDENTIFIED WITH <plugin> AS <hash>");
          }
    break;

  case 2558:
/* Line 1792 of yacc.c  */
#line 14363 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->plugin.str= (yyvsp[(4) - (4)].lex_str).str;
            (yyvsp[(1) - (4)].lex_user)->plugin.length= (yyvsp[(4) - (4)].lex_str).length;
            (yyvsp[(1) - (4)].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_with_clause= true;
          }
    break;

  case 2559:
/* Line 1792 of yacc.c  */
#line 14371 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin.str= (yyvsp[(4) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->plugin.length= (yyvsp[(4) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->auth.str= (yyvsp[(6) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->auth.length= (yyvsp[(6) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_authentication_string_clause= true;
          }
    break;

  case 2560:
/* Line 1792 of yacc.c  */
#line 14381 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin.str= (yyvsp[(4) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->plugin.length= (yyvsp[(4) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->auth.str= (yyvsp[(6) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->auth.length= (yyvsp[(6) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2561:
/* Line 1792 of yacc.c  */
#line 14392 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (1)].lex_user);
            (yyvsp[(1) - (1)].lex_user)->auth= NULL_CSTR;
          }
    break;

  case 2562:
/* Line 1792 of yacc.c  */
#line 14400 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
    break;

  case 2566:
/* Line 1792 of yacc.c  */
#line 14414 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            String *new_str = new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,(yyvsp[(1) - (1)].lex_str).length,system_charset_info);
            if (new_str == NULL)
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.ptr(), new_str->ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= new LEX_COLUMN (*new_str,lex->which_columns);
              if (col == NULL)
                MYSQL_YYABORT;
              lex->columns.push_back(col);
            }
          }
    break;

  case 2568:
/* Line 1792 of yacc.c  */
#line 14443 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 2569:
/* Line 1792 of yacc.c  */
#line 14447 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 2570:
/* Line 1792 of yacc.c  */
#line 14451 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 2571:
/* Line 1792 of yacc.c  */
#line 14455 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
    break;

  case 2572:
/* Line 1792 of yacc.c  */
#line 14461 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2574:
/* Line 1792 of yacc.c  */
#line 14466 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2575:
/* Line 1792 of yacc.c  */
#line 14467 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2576:
/* Line 1792 of yacc.c  */
#line 14471 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2577:
/* Line 1792 of yacc.c  */
#line 14472 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2578:
/* Line 1792 of yacc.c  */
#line 14476 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2579:
/* Line 1792 of yacc.c  */
#line 14478 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 2580:
/* Line 1792 of yacc.c  */
#line 14484 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 2581:
/* Line 1792 of yacc.c  */
#line 14490 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 2582:
/* Line 1792 of yacc.c  */
#line 14496 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 2583:
/* Line 1792 of yacc.c  */
#line 14505 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
    break;

  case 2584:
/* Line 1792 of yacc.c  */
#line 14510 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2585:
/* Line 1792 of yacc.c  */
#line 14514 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2586:
/* Line 1792 of yacc.c  */
#line 14515 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2587:
/* Line 1792 of yacc.c  */
#line 14520 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2588:
/* Line 1792 of yacc.c  */
#line 14521 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2589:
/* Line 1792 of yacc.c  */
#line 14522 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2590:
/* Line 1792 of yacc.c  */
#line 14527 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2591:
/* Line 1792 of yacc.c  */
#line 14528 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2592:
/* Line 1792 of yacc.c  */
#line 14529 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2593:
/* Line 1792 of yacc.c  */
#line 14533 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2594:
/* Line 1792 of yacc.c  */
#line 14534 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2595:
/* Line 1792 of yacc.c  */
#line 14539 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2596:
/* Line 1792 of yacc.c  */
#line 14551 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2597:
/* Line 1792 of yacc.c  */
#line 14561 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2598:
/* Line 1792 of yacc.c  */
#line 14570 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 2599:
/* Line 1792 of yacc.c  */
#line 14579 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2600:
/* Line 1792 of yacc.c  */
#line 14592 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.union_list)= NULL; }
    break;

  case 2602:
/* Line 1792 of yacc.c  */
#line 14598 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.union_list)= NEW_PTN PT_union_list((yyvsp[(2) - (3)].num), (yyvsp[(3) - (3)].select_init));
          }
    break;

  case 2603:
/* Line 1792 of yacc.c  */
#line 14604 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.node)= NULL; }
    break;

  case 2604:
/* Line 1792 of yacc.c  */
#line 14605 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].union_list); }
    break;

  case 2605:
/* Line 1792 of yacc.c  */
#line 14606 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].union_order_or_limit); }
    break;

  case 2606:
/* Line 1792 of yacc.c  */
#line 14610 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.node)= NULL; }
    break;

  case 2607:
/* Line 1792 of yacc.c  */
#line 14611 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].union_order_or_limit); }
    break;

  case 2608:
/* Line 1792 of yacc.c  */
#line 14616 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.union_order_or_limit)= NEW_PTN PT_union_order_or_limit((yyvsp[(1) - (1)].node));
          }
    break;

  case 2609:
/* Line 1792 of yacc.c  */
#line 14623 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_order_or_limit_order((yyvsp[(1) - (2)].order), (yyvsp[(2) - (2)].limit_clause));
          }
    break;

  case 2610:
/* Line 1792 of yacc.c  */
#line 14626 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].limit_clause); }
    break;

  case 2611:
/* Line 1792 of yacc.c  */
#line 14630 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2612:
/* Line 1792 of yacc.c  */
#line 14631 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2613:
/* Line 1792 of yacc.c  */
#line 14632 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2614:
/* Line 1792 of yacc.c  */
#line 14637 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lex2)= NEW_PTN PT_query_specification_select((yyvsp[(1) - (3)].optimizer_hints), (yyvsp[(2) - (3)].select_part2_derived), (yyvsp[(3) - (3)].table_expression));
          }
    break;

  case 2615:
/* Line 1792 of yacc.c  */
#line 14642 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lex2)= NEW_PTN PT_query_specification_parenthesis((yyvsp[(2) - (4)].select_paren_derived), (yyvsp[(4) - (4)].node));
          }
    break;

  case 2617:
/* Line 1792 of yacc.c  */
#line 14650 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lex2)= NEW_PTN PT_query_expression_body_union((yyloc), (yyvsp[(1) - (4)].select_lex2), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].select_lex2));
          }
    break;

  case 2618:
/* Line 1792 of yacc.c  */
#line 14657 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: remove this semantic action (currently this removal
              adds reduce/reduce conflict)
            */
          }
    break;

  case 2619:
/* Line 1792 of yacc.c  */
#line 14664 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.subselect)= NEW_PTN PT_subselect((yyloc), (yyvsp[(2) - (2)].select_lex2));
          }
    break;

  case 2620:
/* Line 1792 of yacc.c  */
#line 14670 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= 0; }
    break;

  case 2622:
/* Line 1792 of yacc.c  */
#line 14676 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            (yyval.ulonglong_number)= (yyvsp[(1) - (2)].ulonglong_number) | (yyvsp[(2) - (2)].ulonglong_number);
          }
    break;

  case 2624:
/* Line 1792 of yacc.c  */
#line 14683 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
    break;

  case 2625:
/* Line 1792 of yacc.c  */
#line 14684 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
    break;

  case 2626:
/* Line 1792 of yacc.c  */
#line 14685 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
    break;

  case 2627:
/* Line 1792 of yacc.c  */
#line 14686 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
    break;

  case 2628:
/* Line 1792 of yacc.c  */
#line 14687 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
    break;

  case 2629:
/* Line 1792 of yacc.c  */
#line 14688 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
    break;

  case 2630:
/* Line 1792 of yacc.c  */
#line 14689 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= OPTION_FOUND_ROWS; }
    break;

  case 2631:
/* Line 1792 of yacc.c  */
#line 14690 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_ALL; }
    break;

  case 2632:
/* Line 1792 of yacc.c  */
#line 14701 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2633:
/* Line 1792 of yacc.c  */
#line 14703 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2634:
/* Line 1792 of yacc.c  */
#line 14705 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2648:
/* Line 1792 of yacc.c  */
#line 14738 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
    break;

  case 2649:
/* Line 1792 of yacc.c  */
#line 14752 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[(3) - (3)].lex_user));
          }
    break;

  case 2650:
/* Line 1792 of yacc.c  */
#line 14765 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2651:
/* Line 1792 of yacc.c  */
#line 14767 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2652:
/* Line 1792 of yacc.c  */
#line 14769 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2653:
/* Line 1792 of yacc.c  */
#line 14774 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
    break;

  case 2654:
/* Line 1792 of yacc.c  */
#line 14779 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 2655:
/* Line 1792 of yacc.c  */
#line 14781 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 2656:
/* Line 1792 of yacc.c  */
#line 14783 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
    break;

  case 2657:
/* Line 1792 of yacc.c  */
#line 14788 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
    break;

  case 2658:
/* Line 1792 of yacc.c  */
#line 14790 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
    break;

  case 2659:
/* Line 1792 of yacc.c  */
#line 14792 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
    break;

  case 2660:
/* Line 1792 of yacc.c  */
#line 14797 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
          }
    break;

  case 2662:
/* Line 1792 of yacc.c  */
#line 14814 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2664:
/* Line 1792 of yacc.c  */
#line 14820 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(1) - (1)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2665:
/* Line 1792 of yacc.c  */
#line 14825 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(3) - (3)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2666:
/* Line 1792 of yacc.c  */
#line 14832 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->parsing_options.allows_select_into= FALSE;
            lex->parsing_options.allows_select_procedure= FALSE;
          }
    break;

  case 2667:
/* Line 1792 of yacc.c  */
#line 14839 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            lex->create_view_select.str= const_cast<char *>((yylsp[(2) - (3)]).cpp.start);
            size_t len= (yylsp[(3) - (3)]).cpp.end - lex->create_view_select.str;
            void *create_view_select= thd->memdup(lex->create_view_select.str, len);
            lex->create_view_select.length= len;
            lex->create_view_select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(), &lex->create_view_select);
            lex->parsing_options.allows_variable= TRUE;
            lex->parsing_options.allows_select_into= TRUE;
            lex->parsing_options.allows_select_procedure= TRUE;
          }
    break;

  case 2668:
/* Line 1792 of yacc.c  */
#line 14857 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (Lex->current_select()->set_braces(0))
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              For statment as "CREATE VIEW v1 AS SELECT1 UNION SELECT2",
              parsing of Select query (SELECT1) is completed and UNION_CLAUSE
              is not yet parsed. So check for
              Lex->current_select()->master_unit()->first_select()->braces
              (as its done in "PT_select_init2::contextualize()) is not
              done here.
            */
          }
    break;

  case 2669:
/* Line 1792 of yacc.c  */
#line 14873 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].union_list) != NULL)
              CONTEXTUALIZE((yyvsp[(3) - (3)].union_list));
          }
    break;

  case 2670:
/* Line 1792 of yacc.c  */
#line 14878 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(4) - (4)].node) != NULL)
              CONTEXTUALIZE((yyvsp[(4) - (4)].node));
          }
    break;

  case 2671:
/* Line 1792 of yacc.c  */
#line 14885 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->current_select()->set_braces(true);
          }
    break;

  case 2672:
/* Line 1792 of yacc.c  */
#line 14889 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Select))
              MYSQL_YYABORT;
          }
    break;

  case 2674:
/* Line 1792 of yacc.c  */
#line 14898 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->current_select()->table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 2675:
/* Line 1792 of yacc.c  */
#line 14902 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(3) - (3)].select_part2));

            Lex->current_select()->table_list.push_front(&Lex->save_list);
          }
    break;

  case 2676:
/* Line 1792 of yacc.c  */
#line 14911 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_NONE; }
    break;

  case 2677:
/* Line 1792 of yacc.c  */
#line 14913 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2678:
/* Line 1792 of yacc.c  */
#line 14915 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2679:
/* Line 1792 of yacc.c  */
#line 14917 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
    break;

  case 2680:
/* Line 1792 of yacc.c  */
#line 14928 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
    break;

  case 2681:
/* Line 1792 of yacc.c  */
#line 14930 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
    break;

  case 2682:
/* Line 1792 of yacc.c  */
#line 14935 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name.str= NULL;
              (yyval.trg_characteristics).anchor_trigger_name.length= 0;
            }
    break;

  case 2683:
/* Line 1792 of yacc.c  */
#line 14942 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[(1) - (2)].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= (yyvsp[(2) - (2)].lex_str);
            }
    break;

  case 2684:
/* Line 1792 of yacc.c  */
#line 14959 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            lex->raw_trg_on_table_name_begin= (yylsp[(5) - (10)]).raw.start;
            lex->raw_trg_on_table_name_end= (yylsp[(7) - (10)]).raw.start;

            if ((yylsp[(10) - (10)]).is_empty())
            {
              /*
                @10.is_empty() is true when a clause PRECEDES/FOLLOWS is absent.
              */
              lex->trg_ordering_clause_begin= NULL;
              lex->trg_ordering_clause_end= NULL;
            }
            else
            {
              lex->trg_ordering_clause_begin= (yylsp[(10) - (10)]).cpp.start;
              lex->trg_ordering_clause_end= (yylsp[(10) - (10)]).cpp.end;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_TRIGGER, (yyvsp[(2) - (10)].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[(3) - (10)].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[(4) - (10)].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[(10) - (10)].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[(10) - (10)].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[(1) - (10)]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[(6) - (10)]).cpp.start);
            lex->ident.length= (yylsp[(8) - (10)]).cpp.start - (yylsp[(6) - (10)]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[(2) - (10)].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            sp->set_body_start(thd, (yylsp[(9) - (10)]).cpp.end);
          }
    break;

  case 2685:
/* Line 1792 of yacc.c  */
#line 15009 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(6) - (12)].table),
                                                    (LEX_STRING*) 0,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
    break;

  case 2686:
/* Line 1792 of yacc.c  */
#line 15044 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(3) - (7)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(3) - (7)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[(2) - (7)]).cpp.start;
            lex->udf.name = (yyvsp[(3) - (7)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(5) - (7)].num);
            lex->udf.dl=(yyvsp[(7) - (7)].lex_str).str;
          }
    break;

  case 2687:
/* Line 1792 of yacc.c  */
#line 15062 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(2) - (6)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(2) - (6)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[(1) - (6)]).cpp.start;
            lex->udf.name = (yyvsp[(2) - (6)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(4) - (6)].num);
            lex->udf.dl=(yyvsp[(6) - (6)].lex_str).str;
          }
    break;

  case 2688:
/* Line 1792 of yacc.c  */
#line 15084 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;
            lex->spname= (yyvsp[(2) - (3)].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[(3) - (3)]).cpp.end);
          }
    break;

  case 2689:
/* Line 1792 of yacc.c  */
#line 15108 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(6) - (6)]).cpp.start);
          }
    break;

  case 2690:
/* Line 1792 of yacc.c  */
#line 15112 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { /* $9 */
            LEX *lex= Lex;
            lex->charset= NULL;
            lex->length= lex->dec= NULL;
            lex->interval_list.empty();
            lex->type= 0;
            lex->gcol_info= 0;
          }
    break;

  case 2691:
/* Line 1792 of yacc.c  */
#line 15121 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if (((yyvsp[(10) - (10)].num) == MYSQL_TYPE_STRING || (yyvsp[(10) - (10)].num) == MYSQL_TYPE_VARCHAR)
                && (lex->type & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (fill_field_definition(YYTHD, sp,
                                      (enum enum_field_types) (yyvsp[(10) - (10)].num),
                                      &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2692:
/* Line 1792 of yacc.c  */
#line 15144 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 2693:
/* Line 1792 of yacc.c  */
#line 15152 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(thd, & sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER(ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
    break;

  case 2694:
/* Line 1792 of yacc.c  */
#line 15211 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[(2) - (2)]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_PROCEDURE, (yyvsp[(2) - (2)].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
    break;

  case 2695:
/* Line 1792 of yacc.c  */
#line 15231 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[(4) - (4)]).cpp.end);
          }
    break;

  case 2696:
/* Line 1792 of yacc.c  */
#line 15236 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(7) - (7)]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2697:
/* Line 1792 of yacc.c  */
#line 15244 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 2698:
/* Line 1792 of yacc.c  */
#line 15252 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
    break;

  case 2699:
/* Line 1792 of yacc.c  */
#line 15266 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_start((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2700:
/* Line 1792 of yacc.c  */
#line 15271 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_end((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2701:
/* Line 1792 of yacc.c  */
#line 15276 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_prepare((yyvsp[(3) - (3)].xid));
          }
    break;

  case 2702:
/* Line 1792 of yacc.c  */
#line 15281 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_commit((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2703:
/* Line 1792 of yacc.c  */
#line 15286 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_rollback((yyvsp[(3) - (3)].xid));
          }
    break;

  case 2704:
/* Line 1792 of yacc.c  */
#line 15291 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_recover((yyvsp[(3) - (3)].is_not_empty));
          }
    break;

  case 2705:
/* Line 1792 of yacc.c  */
#line 15298 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2706:
/* Line 1792 of yacc.c  */
#line 15299 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2707:
/* Line 1792 of yacc.c  */
#line 15303 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (1)].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (1)].string)->ptr(), (yyvsp[(1) - (1)].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
    break;

  case 2708:
/* Line 1792 of yacc.c  */
#line 15312 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (3)].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (3)].string)->ptr(), (yyvsp[(1) - (3)].string)->length(), (yyvsp[(3) - (3)].string)->ptr(), (yyvsp[(3) - (3)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 2709:
/* Line 1792 of yacc.c  */
#line 15322 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            // check for overwflow of xid format id 
            bool format_id_overflow_detected= ((yyvsp[(5) - (5)].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (5)].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[(5) - (5)].ulong_num), (yyvsp[(1) - (5)].string)->ptr(), (yyvsp[(1) - (5)].string)->length(), (yyvsp[(3) - (5)].string)->ptr(), (yyvsp[(3) - (5)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 2710:
/* Line 1792 of yacc.c  */
#line 15339 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2711:
/* Line 1792 of yacc.c  */
#line 15340 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2712:
/* Line 1792 of yacc.c  */
#line 15344 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2713:
/* Line 1792 of yacc.c  */
#line 15345 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_JOIN;        }
    break;

  case 2714:
/* Line 1792 of yacc.c  */
#line 15346 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_RESUME;      }
    break;

  case 2715:
/* Line 1792 of yacc.c  */
#line 15350 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2716:
/* Line 1792 of yacc.c  */
#line 15351 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
    break;

  case 2717:
/* Line 1792 of yacc.c  */
#line 15356 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2718:
/* Line 1792 of yacc.c  */
#line 15358 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_SUSPEND;     }
    break;

  case 2719:
/* Line 1792 of yacc.c  */
#line 15360 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
    break;

  case 2720:
/* Line 1792 of yacc.c  */
#line 15365 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new Sql_cmd_install_plugin((yyvsp[(3) - (5)].lex_str), (yyvsp[(5) - (5)].lex_str));
          }
    break;

  case 2721:
/* Line 1792 of yacc.c  */
#line 15374 "/export/home/pb2/build/sb_0-17208410-1448824664.49/mysql-5.7.10-release-export-8753031_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new Sql_cmd_uninstall_plugin((yyvsp[(3) - (3)].lex_str));
          }
    break;


/* Line 1792 of yacc.c  */
#line 40495 "/export/home/pb2/build/sb_0-17208410-1448824664.49/dist_GPL/sql/sql_yacc.cc"
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, YYTHD);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, YYTHD);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD);
    }
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, YYTHD);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


